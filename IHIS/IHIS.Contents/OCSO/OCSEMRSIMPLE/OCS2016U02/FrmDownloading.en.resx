<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.ClientSize" type="System.Drawing.Size, System.Drawing">
    <value>240, 45</value>
  </data>
</root>