//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: nuro_service.proto
// Note: requires additional types generated from: nuro_model.proto
namespace IHIS.CloudConnector.Messaging
{

    [global::System.Serializable, global::ProtoBuf.ProtoContract(Name = @"NuroOUT1001U01GetDepartmentRequest")]
    public partial class NuroOUT1001U01GetDepartmentRequest : global::ProtoBuf.IExtensible
    {
        public NuroOUT1001U01GetDepartmentRequest() { }

        private string _buseo_ymd = "";
        [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name = @"buseo_ymd", DataFormat = global::ProtoBuf.DataFormat.Default)]
        [global::System.ComponentModel.DefaultValue("")]
        public string buseo_ymd
        {
            get { return _buseo_ymd; }
            set { _buseo_ymd = value; }
        }
        private string _find1 = "";
        [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name = @"find1", DataFormat = global::ProtoBuf.DataFormat.Default)]
        [global::System.ComponentModel.DefaultValue("")]
        public string find1
        {
            get { return _find1; }
            set { _find1 = value; }
        }
        private string _buseo_gubun = "";
        [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name = @"buseo_gubun", DataFormat = global::ProtoBuf.DataFormat.Default)]
        [global::System.ComponentModel.DefaultValue("")]
        public string buseo_gubun
        {
            get { return _buseo_gubun; }
            set { _buseo_gubun = value; }
        }
        private global::ProtoBuf.IExtension extensionObject;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
        { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
    }
}
