<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="fwkJundalGubunName" xml:space="preserve">
    <value>伝達区分照会</value>
  </data>
  <data name="fwkJundalGubunName1" xml:space="preserve">
    <value>伝達区分照会</value>
  </data>
  <data name="msg_JP" xml:space="preserve">
    <value>該当検体は結果が存在するので、取消しできません。</value>
  </data>
  <data name="msg1_JP" xml:space="preserve">
    <value>該当検体は存在しません。</value>
  </data>
  <data name="msg1_Ko" xml:space="preserve">
    <value>해당 검체는 존재하지 않습니다.</value>
  </data>
  <data name="msg2_JP" xml:space="preserve">
    <value> 検体番号 </value>
  </data>
  <data name="msg2_Ko" xml:space="preserve">
    <value>검체번호</value>
  </data>
  <data name="msg3_Ko" xml:space="preserve">
    <value>의</value>
  </data>
  <data name="msg4_JP" xml:space="preserve">
    <value>はパート受付した項目なので、取消しできません。</value>
  </data>
  <data name="msg4_Ko" xml:space="preserve">
    <value> 는 파트접수한 항목이므로 취소할 수 없습니다</value>
  </data>
  <data name="msg5_JP" xml:space="preserve">
    <value>は結果が存在するので、取消しできません。</value>
  </data>
  <data name="msg5_Ko" xml:space="preserve">
    <value>는 결과가 존재하기 때문에 취소할 수 없습니다</value>
  </data>
  <data name="msg6_JP" xml:space="preserve">
    <value>該当検体は結果が存在するので、取消しできません。</value>
  </data>
  <data name="msg6_Ko" xml:space="preserve">
    <value>해당 검체는 결과가 존재하기 때문에 취소할 수 없습니다</value>
  </data>
  <data name="XMessageBox1" xml:space="preserve">
    <value>画面右下の蓄尿の尿量を入力し、保存してください。</value>
  </data>
  <data name="XMessageBox1_caption" xml:space="preserve">
    <value>尿量入力</value>
  </data>
  <data name="XMessageBox10" xml:space="preserve">
    <value>既にパート受付されている検体です。</value>
  </data>
  <data name="XMessageBox11" xml:space="preserve">
    <value>検体番号が存在しません。
</value>
  </data>
  <data name="XMessageBox12" xml:space="preserve">
    <value>受付処理中にエラー発生しました。
</value>
  </data>
  <data name="XMessageBox13" xml:space="preserve">
    <value>受付処理中にエラー発生しました。
PR_CPL_PART_JUBSU エラー</value>
  </data>
  <data name="XMessageBox2" xml:space="preserve">
    <value>実施者を選択してください。</value>
  </data>
  <data name="XMessageBox2_Caption" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="XMessageBox3" xml:space="preserve">
    <value>保存が完了しました。
</value>
  </data>
  <data name="XMessageBox4" xml:space="preserve">
    <value>保存に失敗しました。
</value>
  </data>
  <data name="XMessageBox4_Caption" xml:space="preserve">
    <value>保存失敗</value>
  </data>
  <data name="XMessageBox5" xml:space="preserve">
    <value>蓄尿の尿量は「0 ml」以上の数値を入力してください。</value>
  </data>
  <data name="XMessageBox6" xml:space="preserve">
    <value>保存が完了しました</value>
  </data>
  <data name="XMessageBox7" xml:space="preserve">
    <value>結果のある検体です。パート受付を取消しますか。</value>
  </data>
  <data name="XMessageBox7_caption" xml:space="preserve">
    <value>確認</value>
  </data>
  <data name="XMessageBox8" xml:space="preserve">
    <value>検体が受付されました。
</value>
  </data>
  <data name="XMessageBox8_Caption" xml:space="preserve">
    <value>検体番号</value>
  </data>
  <data name="XMessageBox9_Caption" xml:space="preserve">
    <value>検体受付</value>
  </data>
</root>