<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
       http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
	   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="file:${configPath}/configs.properties"/>

    <context:component-scan base-package="nta.med.kcck.api" >
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
    </context:component-scan>
    <context:component-scan base-package="nta.med.data.mongo.medi" >
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
    </context:component-scan>

    <mongo:mongo id="mongo" host="${mongo.host}" port="${mongo.port}"/>

    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg ref="mongo"/>
        <constructor-arg name="databaseName" value="${mongo.db}"/>
    </bean>

    <mongo:repositories base-package="nta.med.data.mongo.medi" mongo-template-ref="mongoTemplate" />

    <bean id="vertxApplication" class="nta.med.kcck.api.socket.VertxApplication" init-method="start" destroy-method="stop" depends-on="beanFactory">
        <constructor-arg name="vertxClusterPort" value="${vertx.clusterPort}" />
        <constructor-arg name="vertxClusterHost" value="${vertx.clusterHost}" />
        <constructor-arg name="vertxWorker" value="${vertx.worker}" />
        <constructor-arg name="vertxInstances" value="${vertx.instances}" />
        <constructor-arg name="exitOnFailDeployment" value="${vertx.exitOnFailDeployment}" />
    </bean>

    <bean id="api.rpc.service" abstract="true">
        <property name="strict" value="true"/>
        <property name="executor" ref="api.rpc.service.executor"/>
    </bean>

    <bean id="api.rpc.service.executor" class="nta.med.core.common.async.impl.AsyncExecutorImpl">
        <constructor-arg value="api.rpc.service.executor"/>
        <property name="shards" value="${api.exporter.executor.shards}"/>
    </bean>

    <bean id="api.rpc.service.system" parent="api.rpc.service" class="nta.med.kcck.api.rpc.service.system.impl.SystemApiServiceImpl" />
    <bean id="api.rpc.service.hospital" parent="api.rpc.service" class="nta.med.kcck.api.rpc.service.hospital.impl.HospitalApiServiceImpl" />
    <bean id="api.rpc.service.patient" parent="api.rpc.service" class="nta.med.kcck.api.rpc.service.patient.impl.PatientApiServiceImpl" />
    <bean id="api.rpc.service.booking" parent="api.rpc.service" class="nta.med.kcck.api.rpc.service.booking.impl.BookingApiServiceImpl" />
	<bean id="api.rpc.service.order" parent="api.rpc.service" class="nta.med.kcck.api.rpc.service.order.impl.OrderApiServiceImpl" />
	
    <!-- exporter -->
    <bean id="api.admin.exporter" class="nta.med.kcck.api.rpc.RpcApiExporter" init-method="start">
        <property name="sslEnabled" value="false"/>
        <property name="preferDirect" value="false"/>
        <property name="poolingEnabled" value="false"/>
        <property name="soSendBufferSize" value="65536"/>
        <property name="soRecvBufferSize" value="65536"/>
        <property name="port" value="${api.exporter.port}"/>
        <property name="host" value="${api.exporter.host}"/>
        <property name="soSendBufferLowWaterMark" value="131072"/>
        <property name="soSendBufferHighWaterMark" value="524288"/>
        <property name="threads" value="${api.exporter.event.threads}"/>
        <property name="services">
            <list>
                <ref bean="api.rpc.service.system"/>
                <ref bean="api.rpc.service.patient"/>
                <ref bean="api.rpc.service.hospital"/>
                <ref bean="api.rpc.service.booking"/>
                <ref bean="api.rpc.service.order"/>
            </list>
        </property>
    </bean>

    <bean id="config" class="nta.med.core.config.VertxConfig">
        <constructor-arg name="vertxClusterHost" value="${vertx.clusterHost}" />
        <constructor-arg name="vertxClusterPort" value="${vertx.clusterPort}" />
        <constructor-arg name="vertxInstances" value="${vertx.instances}" />
        <constructor-arg name="vertxThreads" value="${vertx.threads}" />
        <constructor-arg name="vertxWorker" value="${vertx.worker}" />
        <constructor-arg name="vertxVerbose" value="${vertx.verbose}" />
        <constructor-arg name="loginRequired" value="${vertx.loginRequired}" />
        <constructor-arg name="shardable" value="${vertx.shardable}" />
        <constructor-arg name="compressThreshold" value="${vertx.compressThreshold}" />
        <constructor-arg name="compressible" value="${vertx.compressible}" />
        <constructor-arg name="exitOnFailDeployment" value="${vertx.exitOnFailDeployment}" />
    </bean>
	
    <context:annotation-config/>
    <!-- Enable @AspectJ support -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <aop:config>
        <aop:pointcut id="pointcut" expression="execution(* nta.med.kcck.api.adapter..*(..)) || execution(* nta.med.kcck.api.socket..*(..))" />
        <aop:advisor advice-ref="monitorInterceptor" pointcut-ref="pointcut" />
    </aop:config>

    <bean id="monitorInterceptor" class="nta.med.core.common.interceptor.MonitorInterceptor"
          p:enterMessage="Entering $[targetClassShortName].$[methodName]($[arguments])."
          p:exitMessage="Leaving $[targetClassShortName].$[methodName](..) with return value $[returnValue], took $[invocationTime]ms."
          p:hideProxyClassNames="true" c:ignoreExceptions="false" />

    <tx:annotation-driven proxy-target-class="true"/>

    <bean id="beanFactory" class="nta.med.core.infrastructure.SpringBeanFactory" />
    <bean class="nta.med.core.infrastructure.socket.hazelcast.HazelcastManager" init-method="start" depends-on="vertxApplication"/>
    <bean id="eventStore" class="nta.med.core.infrastructure.socket.store.impl.FakeEventStoreImpl" />
</beans>