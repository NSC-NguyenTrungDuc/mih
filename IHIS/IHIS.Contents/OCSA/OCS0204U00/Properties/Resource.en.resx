<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="fdwCommonColInfosHeader1" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="fdwCommonColInfosHeader2" xml:space="preserve">
    <value>User name</value>
  </data>
  <data name="fdwCommonColInfosHeader3" xml:space="preserve">
    <value>Injuries code</value>
  </data>
  <data name="fdwCommonColInfosHeader4" xml:space="preserve">
    <value>Injuries name</value>
  </data>
  <data name="fdwCommonColInfosHeader5" xml:space="preserve">
    <value>Injuries classification</value>
  </data>
  <data name="fdwCommonColInfosHeader6" xml:space="preserve">
    <value>Injuries name classification</value>
  </data>
  <data name="fdwCommonText1" xml:space="preserve">
    <value>User query</value>
  </data>
  <data name="fdwCommonText2" xml:space="preserve">
    <value>Injuries classification query</value>
  </data>
  <data name="fdwCommonText3" xml:space="preserve">
    <value>Injuries code query</value>
  </data>
  <data name="mbxCap_Jp" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="mbxCap_Ko" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="mbxCap2_Jp" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="mbxCap2_Ko" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="ToolTipText1" xml:space="preserve">
    <value>If you are sick or code did not register the injuries code is '0000999', you can change the name of injuries.</value>
  </data>
  <data name="XMessageBox1_Jp" xml:space="preserve">
    <value>It is a sickness classification that has already been registered. Please check.</value>
  </data>
  <data name="XMessageBox1_Ko" xml:space="preserve">
    <value>CPI is classified in duplicate. Please confirm.</value>
  </data>
  <data name="XMessageBox10_ko" xml:space="preserve">
    <value>Suspicion of</value>
  </data>
  <data name="XMessageBox2_Jp" xml:space="preserve">
    <value>Injuries code is duplicated. Please check</value>
  </data>
  <data name="XMessageBox2_Ko" xml:space="preserve">
    <value>Corporal code is redundant. Please check</value>
  </data>
  <data name="XMessageBox3_Jp" xml:space="preserve">
    <value />
  </data>
  <data name="XMessageBox3_Ko" xml:space="preserve">
    <value />
  </data>
  <data name="XMessageBox4_Jp" xml:space="preserve">
    <value>There is a detail breakdown, you will not be able to be removed.
 Please save from off the detail breakdown</value>
  </data>
  <data name="XMessageBox4_Ko" xml:space="preserve">
    <value>I can not delete the details.
? Save after you delete the details first. </value>
  </data>
  <data name="XMessageBox5_Jp" xml:space="preserve">
    <value>There is a risk of data error.</value>
  </data>
  <data name="XMessageBox5_Ko" xml:space="preserve">
    <value>The data error has occurred</value>
  </data>
  <data name="XMessageBox6" xml:space="preserve">
    <value>You did not select the data you want to copy.</value>
  </data>
  <data name="XMessageBox6_Jp" xml:space="preserve">
    <value>You did not select the data you want to copy.</value>
  </data>
  <data name="XMessageBox6_Ko" xml:space="preserve">
    <value>You did not select the data you want to copy.</value>
  </data>
  <data name="XMessageBox7_Jp" xml:space="preserve">
    <value>There is no data to be copied.
After selecting the data you want to copy, please proceed to copy. </value>
  </data>
  <data name="XMessageBox7_Ko" xml:space="preserve">
    <value>There is no data to be copied.
Proceed to the copy after you select the data you want to copy. "</value>
  </data>
  <data name="XMessageBox8_Jp" xml:space="preserve">
    <value>Save successfully</value>
  </data>
  <data name="XMessageBox8_Ko" xml:space="preserve">
    <value>Save successfully</value>
  </data>
  <data name="XMessageBox9_Jp" xml:space="preserve">
    <value>Save fail</value>
  </data>
  <data name="XMessageBox9_ko" xml:space="preserve">
    <value>Save fail</value>
  </data>
</root>