<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAS
        EwAAAk1TRnQBSQFMAgEBDAEAAQ4BAAEcAQABEAEAARABAAT/AQkBEAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAAUADAAEBAQABCAYAARAYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD//8A/wD/AP8ACgABxwHb
        AawCxwEAAR8BegFTAh8IAAKmAewIAAsbBgAEpg0AAccB2wGsAscBAAEfAXoBUwIfBgACpgGsAqYB7AHv
        BQAM6wEbBgABpgHbAdQBpgwAAccB/wHbAawBxwEAAR8B/wF6AVMBHwQAAqYBswGtAawDpgHsAu8DAAG8
        AvQB8wYZAQkB6wEbBwABpgLUAaYMAAPHAwADHwMAAqYB1QHUAbMBrQGsA6YB7AHvBAABvAH/AZgBcgHz
        ARkB8gEZAZ0BcgEZAesBGwgAAaYB1AGzAaYLAAG1AQkBtQMAAQkBvAG1AwABpgHbAdUB1AGzAa0BrAOm
        BgABvAL/AUkB8gHzAhkBTwG7ARkB6wEbCQABpgGzAa0BpgoAAbUBCQG1AwABCQG8AbUDAAGmAdsB1QHU
        AbMBrQGsA6YGAAG8Av8BmAFyAp0BcgFPAhkB6wEbCQABpgGzAa0BrAGmCQABtQEJAbUDAAEJAe8BtQMA
        AaYB2wHVAdQBswGtAqwCpgYAAbwC/wHxAUkCnQFPAZgCGQHrARsDAAamAdQBswGtAawBpgQAArUCAAK1
        AQkCtQIAA7UDAAGmAdsB1QHUAbMBrQGsAaYBrAGmBgABvAP/AXIBCAH0AU8B8wIZAesBGwMAAaYC2wLU
        BaYEAAMJArUFCQO1AQkBtQMAAaYB2wHVAdQBswGtAaYBegKmBgABvAP/AQgBcgEHAXIB9AHzARkB6wEb
        BAABpgHbAdQBpgkAAQkNGQG1AwABpgHbAdUBpgGzAaYBTAF6AUwHAAG8BP8BTwFyAfEC9AHzAesBGwUA
        AaYC1AGmCAABCQH0BfMB9ATzAfQCtQQAAqYBegFMAQABTAF6AUwHAAG8BP8BmAFPAv8C9AHrARsGAAGm
        AdQBswGmAgACpgMAAQkC9gIJB/YBtQIJAbUEAAFMAXoBTAEAAUwBegFMBwABvAj/AvQB6wEbBwABpgGz
        Aa0CpgGsAaYEAAIJAgAHCQMZAbUEAAFMAXoBTAEAAUwBegFMBwABvAf/A7UB9wEbCAABpgGtA6wBpg4A
        AQkD8wG1BAABTAJ6AUwCegFMBwABvAf/ArUB9wEbCgABpgOsAaYOAAEJA/YBtQUAAUwDegFMCAABvAf/
        AbUB9wEbCgABpgGtA6wBpg4ABQkGAANMCQAIvAH3ARsKAAemBgAL7wUAC+8kAAHvChMB7wQAC7UB7wQA
        DNUTAA7vAwABtQUZAd0CCQEZAbUB7wMAAdUKGQLiAdUSAALvCwcB8gHvAgABtQUZBAkBtQHvAwAB1QoZ
        AuIB1QQACbwEAALvAf8L8gH/Ae8CAAG1AfQGGQEJARkBtQHvAwAB1QkZA+IB1QIAArwEkQUlArwCAALv
        Af8C8gLvA/IC7wLyAf8B7wIAAbUB/wL0BhkBtQHvAwAB1QcZBeIB1QEAAbwCkQT/ASUEUwIlAbwBAALv
        Df8B7wIAAbUB/wL0BhkBtQHvAwAB1QUZBOID9AHVAQABkQb/ASUGUwElAbwC7wzyAe8DAAG1Av8C9AUZ
        AbUB7wMAAdUDGQXiBPQB1QEAAZEG/wElAVMEWQFTASUBvAHvAf8D8gnvBAABuwP/AvQEGQG1Ae8DAAHV
        AhkE4gT0Av8B1QEAAZEG/wElAVMBWQJ6AlkBJQG8AQAF7wYJAu8EAAEJA/8D9AMZAbUB7wMAAdUE4gX0
        A/8B1QEAAZEG/wElAVMBWQN6AVkBJQG8BAABvAYZAbUGAAEJBP8C9AEZAd0B1gG1Ae8DAAHVBfQH/wHV
        AQABkQb/ASUBUwFZA3oBWQElAbwEAAG8AhkE3QG1BgABCQX/AfQEtQQAAdUB/wHiCvQB1QIAApEE/wEl
        AVMBWQJ6AiUFAAK8BfQCBwYAAQkG/wG1AdwBtAG1BAAB5gxCAeYEAASRBSUGAAH/AQcE/wH0AfEBBwcA
        AQkD/wP0AbUBtAG1BgAM5hQAAQcGtQEHAf8HAAQJA7sCtWkAARwBSQICASEBKAFyAbwHAAH/AfABcgFJ
        AScBSQFyAQgB/wcAC/AUAAEIAU8BLgI0BC0BAgEcBQAB9AFyAS4DNAEzAi0BcgHzBQADzwbvA64B8BIA
        AfABLgNVATQBVQE0Ay0BAgGSAwAB/wFQA1UBlwF4AjQCLQFPAfMDAAG0A88BvAHPA/8B8AKGAc8BrgHw
        AwABIAFMBwABFwEgAgABCAFPA1YBVQF4Af8BCAE0Ay0BAgG8AQAB/wGXA1YBVQEbAf8BCAM0AS0BcgH/
        AgABtQPPAbwBhgHPAQAB/wHwAoYBzwGuAfADAAIlAUYFAAFMASAB4wIAAQgBTwNWAXgC/wGZAzQCLQFy
        AQAB8wFPA1YBVQF4Av8BCAM0AS0BCAIAAbUDzwG8AYYBzwEHAf8B8AKGAc8BrgHwAwABlAIlAUYDAAFG
        ASAB4wMAARwDVgF4Av8BCANVAjQBLQEoAQABmANWAlUBVgF4Av8BCAM0AXICAAG1A88GvAKGAc8BrgHw
        BAABGgFGASUBRgEAAUYBJQEWBAABVQJWAXgD/wGYAZkDmAI0AQIBAAGXAVYBeAj/AQgCNAFPAgABtQzP
        Aa4B8AUAAb0BTQMlAeMFAAFVAVYBeAn/AlUBLQEAAVUBVgF4CP8BGwJVAS4CAAG1DM8BrgHwBwABTQEl
        AU0GAAFVAlYBeAP/AQgEmQFWAVUBKAEAAZcGVgGYAv8BGwJWAVUBTwIAAbUBpwn0AbwBzwGuAfAGAAGU
        AyYBmgUAAXgDVgF4Av8BGwZWAU8BAAGYBVYBeAL/ARsEVgGXAgABtQGnCfQBvAHPAa4B8AUAAXUCJgEW
        AU0BJgGaBAABCAFVAngBVgF4Av8BCARWAU8BHAEAAfQBVQJ4AlYBCAH/ARsEVgFPAfACAAG1AacB9Abw
        AfEB9AG8Ac8BrgHwBAAB4wImARYCAAFNASYBlAMAAQgBVgN4AVYBeAH2AZgEVgEuAgAB/wGYAXgBmAF4
        AlYBmQVWAZcB/wIAAbUBpwn0AbwBzwGuAfADAAFNAiYBdQQAAXUBJgQAAQgBVQF4AZkCeAVWAS4BCAMA
        AfYBlwF4AZgCeAZWAfQDAAG1AacB9AfwAfQBBwHPAa4B8AMAAiYBdQwAAggBVQKYAXgCVgE0AVUBCAUA
        AfYBmAFVApgBeAFXAVYBVQGXAfQEAAG1AacJ9AEHAc8BrhUAAQgBeANVAVYBCAgAAf8B9AGYAZcBVQGX
        AZgB8wH/BQABtQGGCQcBtQGGUgABQgFNAT4HAAE+AwABKAMAAUADAAFAAwABAQEAAQEGAAECFgAD/4EA
        AfgBIAH/AR8B4AEDAfAB/wH4ASAB/AEHAcABAQH4AX8B+AEgAfABAQHAAQEB/AE/AfwBcQHAAQMBwAEB
        Af4BHwH8AXEBwAEPAcABAQH/AQ8B/AFxAcABDwHAAQEB/wEHAfwBcQHAAQ8BwAEBAcABBwGYATEBwAEP
        AcABAQHAAQ8BAAEBAcABDwHAAQEB4QH/AQABAQHAAR8BwAEBAfAB/wEAAQEB4QEfAcABAQH4AWcCAAHx
        AR8BwAEBAfwBBwGYAQAB8QEfAcABAQH+AQcB/wHgAfABHwHAAQMB/wEHAf8B4AH4AT8BwAEHAf4BBwH/
        AeAB/AF/AcABDwH8AQcB4AEDAeABAwT/AcABAwHAAQMBwAEDAv8BgAEBAcABAwGAAQEC/wGAAQABwAED
        AYABAQHgAQ8CAAHAAQMBgAEBAYABAwIAAcABAwGAAQEBAAEBAgABwAEDAYABAQMAAQEBwAEDAYABAQMA
        AQMBwAEDAYABAQIAAYABAwHAAQMBgAEBAgAB8AEPAcABAwGAAQECAAHwAQ8BwAEHAYABAQGAAQMB4AEP
        AcABBwGAAQEB4AEPAcABHwHAAQ8BwAEDAv8BwAEfAcABHwz/AfABDwHgAQ8B4AEDAv8BwAEHAcABBwHA
        AQEC/wGAAQMBgAEDAYABAAHnAfMBAAEBAQABAQKAAuMBAAEBAQABAQGAAQAB4QHHAQABAQEAAQEBgAEA
        AfABjwEAAQEBAAEBAYABAAH4AR8BAAEBAQABAQGAAQAB/gE/AQABAQEAAQEBgAEAAfwBHwEAAQEBAAEB
        AYABAAH4AQ8BAAEBAQABAQGAAQAB8AHHAQABAwEAAQEBgAEAAeEB5wGAAQMBgAEDAYABAAHjAf8BwAEH
        AcABBwGAAQEC/wHwAR8B4AEPAYABAwr/FgAL
</value>
  </data>
  <metadata name="layReserList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>128, 17</value>
  </metadata>
  <data name="layReserList.QuerySQL" xml:space="preserve">
    <value>SELECT DECODE(A.JUNDAL_PART,'CPL','CPL','CPR','CPR','CPH','CPH', A.HANGMOG_CODE)               HANGMOG_CODE
      ,DECODE(A.JUNDAL_PART,'CPL',C.JUNDAL_PART_NAME, NVL(D.HANGMOG_NAME, B.HANGMOG_NAME))     HANGMOG_NAME
      ,TO_CHAR(MIN(NVL(A.RESER_DATE,A.HOPE_DATE)), 'YYYY/MM/DD')                               RESER_DATE
      , ''   day_1
      , ''   day_2
      , ''   day_3
      , ''   day_4
      , ''   day_5
      , ''   day_6                                                                      
      , ''   day_7
      , ''   day_8
      , ''   day_9
      , ''   day_10
      , ''   day_11
      , ''   day_12                                                                     
      , ''   day_13
      , ''   day_14
      , ''   day_15
      , ''   day_16
      , ''   day_17
      , ''   day_18
      , ''   day_19
      , ''   day_20 
      , ''   day_21
      , ''   day_22
      , ''   day_23
      , ''   day_24
      , ''   day_25
      , ''   day_26
      , ''   day_27
      , ''   day_28
      , ''   day_29
      , ''   day_30
      , ''   day_31
      ,NVL(D.JUNDAL_TABLE, A.JUNDAL_TABLE)                                                     JUNDAL_TABLE
      ,NVL(A.JUNDAL_PART, D.JUNDAL_PART)                                                       JUNDAL_PART
      ,MIN(A.PKSCH0201)                                                                        PKSCH0201
      ,DECODE(A.JUNDAL_PART,'CPL','Y',DECODE(D.HANGMOG_CODE, NULL, 'N', 'Y'))                  RESER_GUMSA_YN
      ,FN_BAS_LOAD_GWA_NAME(A.GWA, A.INPUT_DATE)                                               GWA_NAME
      ,MIN(A.RESER_TIME)                                                                       RESER_TIME
      ,''                                                                                      RESER_YN
      ,A.GWA                                                                                   GWA
      ,A.DOCTOR                                                                                DOCTOR
      ,FN_BAS_LOAD_DOCTOR_NAME(A.DOCTOR, A.ORDER_DATE)                                         DOCTOR_NAME
      /*
      ,NVL(MAX((SELECT 'Y' FROM DUAL WHERE 
                EXISTS (SELECT 'Y' FROM SCH3000 X  WHERE X.JUNDAL_PART = A.JUNDAL_PART 
                  UNION SELECT 'Y' FROM SCH3101 X  WHERE X.JUNDAL_PART = A.JUNDAL_PART))), 'N')   TIME_YN */
      ,'' 										       TIME_YN
      
      ,A.ORDER_DATE                                                                            ORDER_DATE
      ,FN_SCH_ORDER_REMARK(A.IN_OUT_GUBUN,A.FKOCS)                                             ORDER_REMARK
--      ,DECODE(NVL(A.EMERGENCY,'N'), 'N', A.IN_OUT_GUBUN, NVL(A.EMERGENCY,'N'))                 EMERGENCY   
      ,NVL(A.EMERGENCY,'N')                                                                    EMERGENCY   
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 0, A.BUNHO, A.GWA, A.DOCTOR)                           RESER_DATE_YN_1
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 1, A.BUNHO, A.GWA, A.DOCTOR)                           RESER_DATE_YN_2
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 2, A.BUNHO, A.GWA, A.DOCTOR)                           RESER_DATE_YN_3
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 3, A.BUNHO, A.GWA, A.DOCTOR)                           RESER_DATE_YN_4
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 4, A.BUNHO, A.GWA, A.DOCTOR)                           RESER_DATE_YN_5
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 5, A.BUNHO, A.GWA, A.DOCTOR)                           RESER_DATE_YN_6
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 6, A.BUNHO, A.GWA, A.DOCTOR)                           RESER_DATE_YN_7
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 7, A.BUNHO, A.GWA, A.DOCTOR)                           RESER_DATE_YN_8
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 8, A.BUNHO, A.GWA, A.DOCTOR)                           RESER_DATE_YN_9
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 9, A.BUNHO, A.GWA, A.DOCTOR)                           RESER_DATE_YN_10
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 10, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_11
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 11, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_12
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 12, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_13
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 13, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_14
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 14, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_15
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 15, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_16
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 16, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_17
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 17, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_18
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 18, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_19
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 19, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_20
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 20, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_21
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 21, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_22
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 22, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_23
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 23, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_24
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 24, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_25
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 25, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_26
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 26, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_27
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 27, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_28
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 28, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_29
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 29, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_30
          ,FN_SCH_RESER_DATE_YN(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 30, A.BUNHO, A.GWA, A.DOCTOR)                          RESER_DATE_YN_31                                                  
      ,B.JUNDAL_PART_OUT                                                                       OCS0103_JUNDAL_PART
      ,DECODE(A.JUNDAL_PART, 'ENDO',  A.FKOCS )      FKOCS                                                                      
      ,A.IN_OUT_GUBUN                                                                       
  FROM SCH0002 D,
       SCH0001 C,
       OCS0103 B,
       SCH0201 A
 WHERE A.HOSP_CODE          = :f_hosp_code
   AND B.HOSP_CODE          = A.HOSP_CODE
   AND C.HOSP_CODE(+)       = A.HOSP_CODE 
   AND D.HOSP_CODE(+)       = A.HOSP_CODE
   AND A.BUNHO              = :f_bunho
   AND A.DOCTOR             LIKE NVL(:f_doctor,'%')
   AND A.GWA                LIKE NVL(:f_gwa, '%')
   AND A.RESER_DATE         IS NULL
   AND A.ACTING_DATE        IS NULL
   AND FN_SCH_OCS_JUBSU_YN(A.IN_OUT_GUBUN, A.FKOCS) = 'N'
   AND NVL(A.CANCEL_YN,'N') = 'N'
   AND B.HANGMOG_CODE       = A.HANGMOG_CODE
   AND C.JUNDAL_TABLE    (+)= A.JUNDAL_TABLE
   AND C.JUNDAL_PART     (+)= A.JUNDAL_PART
   AND D.HANGMOG_CODE    (+)= A.HANGMOG_CODE
   AND D.JUNDAL_PART     (+)= A.JUNDAL_PART
 GROUP BY
       DECODE(A.JUNDAL_PART,'CPL','CPL','CPR','CPR','CPH','CPH', A.HANGMOG_CODE)
      ,NVL(D.JUNDAL_TABLE, A.JUNDAL_TABLE)
      ,NVL(A.JUNDAL_PART, D.JUNDAL_PART)
      ,FN_BAS_LOAD_GWA_NAME(A.GWA, A.INPUT_DATE)
      ,DECODE(A.JUNDAL_PART,'CPL',C.JUNDAL_PART_NAME, NVL(D.HANGMOG_NAME, B.HANGMOG_NAME))
      ,DECODE(A.JUNDAL_PART,'CPL','Y',DECODE(D.HANGMOG_CODE, NULL, 'N', 'Y'))
      ,A.BUNHO
      ,A.IN_OUT_GUBUN
      ,A.GWA
      ,A.DOCTOR
      ,DECODE(D.HANGMOG_CODE, NULL, 'N', 'Y')
      ,A.ORDER_DATE
      ,FN_SCH_ORDER_REMARK(A.IN_OUT_GUBUN,A.FKOCS)
      ,A.EMERGENCY
      ,B.JUNDAL_PART_OUT
      ,DECODE(A.JUNDAL_PART, 'ENDO',  A.FKOCS )                                                       
      ,A.IN_OUT_GUBUN                                                                       
 ORDER BY 42, 45 DESC, 35, 36
 </value>
  </data>
  <metadata name="layHoliYN.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>252, 17</value>
  </metadata>
  <metadata name="layTimeList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>487, 17</value>
  </metadata>
  <data name="layTimeList.QuerySQL" xml:space="preserve">
    <value>SELECT A.RESER_DATE          RESER_DATE
      ,A.FROM_TIME           FROM_TIME
      ,A.BUNHO               BUNHO
      ,A.SUNAME              SUNAME
      ,A.HANGMOG_CODE        HANGMOG_CODE
      ,A.HANGMOG_NAME        HANGMOG_NAME
      ,A.GWA                 GWA
      ,FN_BAS_LOAD_DOCTOR_NAME(NVL(FN_OCS_LOAD_ORDER_DOCTOR(B.FKOCS), B.DOCTOR), B.ORDER_DATE) DOCTOR_NAME
      ,DECODE(B.ACTING_DATE, NULL, 'N', 'Y') ACT_YN
  FROM SCH0201 B
      ,SCH_TEMP A
 WHERE A.HOSP_CODE    = :f_hosp_code
   AND B.HOSP_CODE(+) = A.HOSP_CODE
   AND A.IP_ADDRESS   = :q_ip_addr
   AND B.PKSCH0201(+) = A.PKSCH0201
 ORDER BY A.FROM_TIME, A.SUNAME</value>
  </data>
  <metadata name="layAddInwonChk.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>735, 17</value>
  </metadata>
  <data name="layAddInwonChk.QuerySQL" xml:space="preserve">
    <value>SELECT 'Y'
  FROM SCH0201 A
 WHERE A.HOSP_CODE          = :f_hosp_code 
   AND A.BUNHO              = :f_bunho
   AND A.RESER_DATE         = :f_reser_date
   AND A.RESER_TIME         = :f_reser_time
   AND NVL(A.CANCEL_YN,'N') = 'N'
   AND A.ACTING_DATE IS NULL</value>
  </data>
  <metadata name="layLoginGwa.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>607, 17</value>
  </metadata>
  <metadata name="layDoctorList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>888, 17</value>
  </metadata>
  <data name="layDoctorList.QuerySQL" xml:space="preserve">
    <value>SELECT DISTINCT 
       A.DOCTOR
     , A.DOCTOR_NAME
     , A.DOCTOR_NAME2
     , A.DOCTOR||A.DOCTOR_NAME2||A.DOCTOR_NAME CONT_KEY
  FROM (SELECT A.CODE                            DOCTOR
             , A.CODE_NAME                       DOCTOR_NAME
             , A.CODE_NAME2                      DOCTOR_NAME2
             , A.HOSP_CODE                       HOSP_CODE
             , A.CODE_NAME2||A.CODE||A.CODE_NAME CONT_KEY
          FROM SCH0109 A
         WHERE A.HOSP_CODE = :f_hosp_code
           AND A.CODE_TYPE = 'ALL_TEXT'

         UNION ALL

        SELECT DISTINCT 
               A.DOCTOR                                DOCTOR
             , A.DOCTOR_NAME                                   DOCTOR_NAME
             , A.DOCTOR_NAME2                                  DOCTOR_NAME2
             , A.HOSP_CODE                                     HOSP_CODE
             , A.DOCTOR_NAME2||A.TONGGYE_DOCTOR||A.DOCTOR_NAME CONT_KEY
          FROM BAS0270 A
         WHERE A.HOSP_CODE = :f_hosp_code
           AND A.DOCTOR_GWA LIKE :f_gwa
           AND TRUNC(SYSDATE) BETWEEN A.START_DATE AND A.END_DATE
           --AND NVL(A.TONGGYE_DOCTOR, A.DOCTOR) = A.DOCTOR
           AND NVL(A.COMMON_DOCTOR_YN, 'N') = 'N') A
 WHERE A.HOSP_CODE = :f_hosp_code
   AND A.DOCTOR IS NOT NULL 
 ORDER BY 4</value>
  </data>
  <metadata name="layJubsuChk.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>361, 17</value>
  </metadata>
  <data name="layJubsuChk.QuerySQL" xml:space="preserve">
    <value>SELECT 'Y'
  FROM PFE0201
 WHERE HOSP_CODE = :f_hosp_code
   AND FKOCS1003 = :o_fkocs
   AND JUBSU_DATE IS NOT NULL
   AND NVL(JUBSU_USER,'@') &lt;&gt; 'PRO'
   AND :o_jundal_table = 'PFE'
 UNION ALL
 SELECT 'Y'
   FROM PFE0201
 WHERE HOSP_CODE = :f_hosp_code
   AND FKOCS2003 = :o_fkocs
   AND JUBSU_DATE IS NOT NULL
   AND NVL(JUBSU_USER,'@') &lt;&gt; 'PRO'
   AND :o_jundal_table = 'PFE'
UNION ALL
SELECT 'Y'
  FROM XRT0201
 WHERE HOSP_CODE = :f_hosp_code
   AND FKOCS1003 = :o_fkocs
   AND JUBSU_DATE IS NOT NULL
   AND :o_jundal_table = 'XRT'
 UNION ALL
 SELECT 'Y'
   FROM XRT0201
 WHERE HOSP_CODE = :f_hosp_code
   AND FKOCS2003 = :o_fkocs
   AND JUBSU_DATE IS NOT NULL
   AND :o_jundal_table = 'XRT'</value>
  </data>
  <metadata name="layReserTimeChk.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 58</value>
  </metadata>
  <data name="layReserTimeChk.QuerySQL" xml:space="preserve">
    <value>SELECT 'Y'
  FROM SCH0201 A
 WHERE A.HOSP_CODE          = :f_hosp_code 
   AND A.BUNHO              = :f_bunho
   AND A.RESER_DATE         = :f_reser_date
   AND A.RESER_TIME         = :f_reser_time
   AND NVL(A.CANCEL_YN,'N') = 'N'
   AND A.ACTING_DATE IS NULL</value>
  </data>
  <metadata name="layLoadRES0101.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>173, 58</value>
  </metadata>
  <data name="layLoadRES0101.QuerySQL" xml:space="preserve">
    <value>SELECT A.HOLI_DAY,
       TO_DATE(:f_reser_date,'YYYY/MM/DD') + 30,
       A.YOIL_GUBUN,
       LTRIM(TO_CHAR(rownum,'00')),
       A.DAY_GUBUN,
       DECODE(:o_emergency, 'Y','Y',FN_SCH_DAY_RESER_CHECK(:o_jundal_table, :o_jundal_part, :o_hangmog_code, a.holi_day)) CNT,
       FN_SCH_RESER_DATE_YN(TRUNC(A.HOLI_DAY),  :f_bunho, :f_gwa,  :f_doctor) RESER_DATE_YN
  FROM RES0101 A
 WHERE A.HOSP_CODE = :f_hosp_code 
   AND A.HOLI_DAY BETWEEN TO_DATE(:f_reser_date,'YYYY/MM/DD') AND TO_DATE(:f_reser_date,'YYYY/MM/DD') + 30
 ORDER BY A.HOLI_DAY</value>
  </data>
  <metadata name="layTimeReserYn.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>325, 58</value>
  </metadata>
</root>