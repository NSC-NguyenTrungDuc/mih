<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="grdInp1001.QuerySQL" xml:space="preserve">
    <value>SELECT A.PKNUR4002                                                PKNUR4002
     , A.BUNHO                                                    BUNHO
     , A.FKINP1001                                                FKINP1001
     , A.NUR_PLAN_JIN                                             NUR_PLAN_JIN
     , A.PLAN_DATE                                                PLAN_DATE
     , REPLACE(REPLACE(NVL(A.NUR_PLAN_PRO_NAME,B.NUR_PLAN_PRONAME), CHR(13), ''), ' ', '') NUR_PLAN_PRONAME
     , NVL(A.VALD, 'N')                                           VALD
  FROM NUR4002 A
     , NUR0402 B
 WHERE A.HOSP_CODE      = :f_hosp_code
   AND B.HOSP_CODE      = A.HOSP_CODE 
   AND A.BUNHO          = :f_bunho
   --AND NVL(A.VALD, 'Y') = 'Y'
   AND B.NUR_PLAN_JIN   = A.NUR_PLAN_JIN
   AND B.NUR_PLAN_PRO   = A.NUR_PLAN_PRO
 ORDER BY A.PLAN_DATE DESC</value>
  </data>
  <metadata name="layQuery_1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>128, 17</value>
  </metadata>
  <data name="layQuery_1.QuerySQL" xml:space="preserve">
    <value>SELECT DISTINCT
       FN_BAS_LOAD_HO_DONG_NAME(D.HO_DONG1, TO_DATE(:f_plan_date, 'YYYY/MM/DD'))                                                 HO_DONG_NAME,
       E.BUNHO                                                                                                                   BUNHO,
       E.SUNAME                                                                                                                  SUNAME,
       FN_BAS_TO_JAPAN_DATE_CONVERT('5', TRUNC(E.BIRTH))                                                                         BIRTH,
       FN_BAS_LOAD_AGE(TO_DATE(:f_plan_date, 'YYYY/MM/DD'), E.BIRTH, '')                                                         AGE,
       E.SEX                                                                                                                     SEX,
       FN_BAS_TO_JAPAN_DATE_CONVERT('5', TO_DATE(:f_plan_date, 'YYYY/MM/DD'))                                                    PLAN_DATE,
       FN_ADM_LOAD_USER_NM(A.PLAN_USER, TRUNC(SYSDATE))                                                                          PLAN_USER_NAME,
       --REPLACE(REPLACE(DECODE(A.NUR_PLAN_JIN, '999', A.NUR_PLAN_PRO_NAME, B.NUR_PLAN_PRONAME), CHR(13), ''), ' ', '')          NUR_PLAN_PRONAME,
       REPLACE(REPLACE(A.NUR_PLAN_PRO_NAME, CHR(13), ''), ' ', '')                                                               NUR_PLAN_PRONAME,
       C.NUR_PLAN_OTE                                                                                                            NUR_PLAN_OTE,
       REPLACE(REPLACE(C.NUR_PLAN_NAME, CHR(13), ''), ' ', '')                                                                   NUR_PLAN_NAME,
       REPLACE(REPLACE(F.NUR_PLAN_DENAME, CHR(13), ''), ' ', '')                                                                 NUR_PLAN_DETAIL_NAME,
       B.SORT_KEY                                                                                                              SORT_KEY1,
       A.PKNUR4002                                                                                                             SORT_KEY2,
       C.PKNUR4003                                                                                                             SORT_KEY3
  FROM NUR4002 A
     , NUR0402 B
     , NUR4003 C
     , VW_OCS_INP1001_02 D
     , OUT0101 E
     , NUR4004 F
 WHERE A.HOSP_CODE    = :f_hosp_code
   AND B.HOSP_CODE    = A.HOSP_CODE 
   AND C.HOSP_CODE    = A.HOSP_CODE    
   AND D.HOSP_CODE    = A.HOSP_CODE    
   AND E.HOSP_CODE    = A.HOSP_CODE  
   AND F.HOSP_CODE(+) = C.HOSP_CODE            
   AND F.FKNUR4003(+) = C.PKNUR4003 
   --AND NVL(F.VALD, 'Y') = 'Y' 
   AND A.FKINP1001    = :f_fkinp1001
   AND A.BUNHO        = :f_bunho
   AND A.PKNUR4002    = :f_pknur4002
   AND B.NUR_PLAN_JIN = A.NUR_PLAN_JIN
   AND B.NUR_PLAN_PRO = A.NUR_PLAN_PRO
   AND C.FKNUR4002    = A.PKNUR4002
   AND D.PKINP1001    = A.FKINP1001
   AND E.BUNHO        = A.BUNHO
   AND NVL(A.VALD, 'Y') = 'Y'
   AND NVL(B.VALD, 'Y') = 'Y'
   AND NVL(C.VALD, 'Y') = 'Y'
   --AND C.NUR_PLAN_OTE = 'P'
 ORDER BY B.SORT_KEY, A.PKNUR4002, C.PKNUR4003
 </value>
  </data>
  <metadata name="layQuery_2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>248, 17</value>
  </metadata>
  <data name="layQuery_2.QuerySQL" xml:space="preserve">
    <value>SELECT C.NUR_PLAN                                                              NUR_PLAN
     , REPLACE(REPLACE(C.NUR_PLAN_NAME, CHR(13), ''), ' ', '')                 NUR_PLAN_NAME
     , NVL(D.NUR_PLAN_DETAIL, '00')                                            NUR_PLAN_DETAIL
     , REPLACE(REPLACE(D.NUR_PLAN_DENAME, CHR(13), ''), ' ', '')               NUR_PLAN_DETAIL_NAME
     , FN_BAS_TO_JAPAN_DATE_CONVERT('5', TO_DATE(:f_reser_date, 'YYYY/MM/DD')) RESER_DATE
  FROM NUR4002 A
     , NUR4003 C
     , NUR4004 D
 WHERE A.HOSP_CODE    = :f_hosp_code
   AND C.HOSP_CODE    = A.HOSP_CODE
   AND D.HOSP_CODE(+) = C.HOSP_CODE 
   AND A.FKINP1001    = :f_fkinp1001
   AND A.BUNHO        = :f_bunho
   AND A.PKNUR4002    = :f_pknur4002
   AND C.FKNUR4002    = A.PKNUR4002
   AND D.FKNUR4003(+) = C.PKNUR4003
   AND NVL(A.VALD, 'Y') = 'Y'
   AND NVL(C.VALD, 'Y') = 'Y'
   AND NVL(D.VALD, 'Y') = 'Y'
   AND C.NUR_PLAN_OTE = :f_nur_plan_ote
 ORDER BY 1, 3</value>
  </data>
  <metadata name="layPrint.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>368, 17</value>
  </metadata>
  <metadata name="layQuery_Nur4005.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>465, 17</value>
  </metadata>
  <data name="layQuery_Nur4005.QuerySQL" xml:space="preserve">
    <value>SELECT FN_BAS_TO_JAPAN_DATE_CONVERT('1', TRUNC(A.VALU_DATE))               VALU_DATE
     , FN_BAS_LOAD_SABUN_NAME(A.UPD_ID)                                   VALU_USRE_NAME
     , A.VALU_CONTENTS                                                     VALU_CONTENTS
     , 'Y'
  FROM NUR4005 A
 WHERE A.HOSP_CODE = :f_hosp_code 
   AND A.FKNUR4002 = :f_pknur4002
 ORDER BY TO_CHAR(A.RESER_DATE, 'YYYYMMDD')||TO_CHAR(A.VALU_DATE, 'YYYYMMDD')</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>49</value>
  </metadata>
</root>