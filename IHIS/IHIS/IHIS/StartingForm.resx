<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlh7wAsAIcAAP///zF7xx9wwhtWoRpVoBlUnwpFkAlEjwEECQQfQgUkTAQcOwQbOQYlTQUdPAYe
        PQYdOwcfPgopUQkkRwsqUgkhQAYVKQwnSg4tVQsjQgcWKgsiQAZBjAdCjQc/hQMcOgMbOQISJgEJEwhG
        kghDjgYxaAUpVglHkwlGkQg/hQc2cgUoVQQhRAg7fAczagYuYAUlTgMXMAlAhgg3cwcyaQtJlQpBhwg0
        bAcvYgtGkQk4dAgzagYmTgMTJwtCiAo9fggwYwcrWAcqVwUePQQYMQxHkgk0awgvYQ1Llw1IkwcnUAcn
        Two1bA5JlA1Eig9NmQ9KlQ5GjQ1AgQs2bQoxYwUZMgMPHgEFChBLlg5ChAw3bhFPmxFOmRFMlwsyZAkp
        UQcgPxBHjQ9Cgw49eQ04bxNRnRJNmA8/fAsvXBNOmQUVKRRSnhJJjxFFhg01aAklSBRPmhNKkA87cg86
        cRVQmw41ZxA7cgkiQRdVoRZRnBVNkxJBfQ83ag83aQkhPwMLFRdSnRE8cw4yXxhTnhZNkxNCfggcNRlX
        oxdOlBI+dhI+dRI9dA8zYQ0tVRRDfwwoTAURIBtZpRhPlRVFgQ4uVhlQlhdLjBdKixI6bRA0YRAzYBQ/
        dhI5awIGC1iU1GCZ1mqf2G2h2m2h2a3L6yV0xDB7x0CFy0eJzUyNzk+Pz1CP0FGQ0FSR0FWS0VeW1FeU
        1FeU01iW01iU01eU0VuY1FuX1FyY1VuW0lyX1FyX012Y01+Z1l+a1mCa1l+Z1V+a1WCa1WCZ1WOc12Kb
        1mKc1mKc1WKb1Gaf2Gaf12mf2Gmg2Gui2mqg2Gmf1mui2W2k2m2i2m2i2W2h12+j2m+k2m+k2W+j2HKl
        23Gk2HSn3Hio23us3nys3nus3Xys3Xur3Hyr236t3YSy4Imz34u14ZW745m/5aHE56TG56vK6bLO61eW
        01uY02ag12mh13Wp2+7u7t3d3czMzLu7u6qqqpmZmYiIiHd3d2ZmZlVVVURERDMzMyIiIhEREQAAAP//
        /yH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAD/ACwAAAAA7wAsAAAI/wABCBxIsKDBgwgTKlzIsKHDhxAj
        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
        6ZMeEAA7
</value>
  </data>
</root>