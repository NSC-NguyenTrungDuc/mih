<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnClose" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="btnGenericText" xml:space="preserve">
    <value>Generic name display</value>
  </data>
  <data name="btnProcessText" xml:space="preserve">
    <value>Reception</value>
  </data>
  <data name="btnProcessText2" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="btnProcessText3" xml:space="preserve">
    <value>Non-availability</value>
  </data>
  <data name="Caption1" xml:space="preserve">
    <value>News</value>
  </data>
  <data name="Caption2" xml:space="preserve">
    <value>Caution</value>
  </data>
  <data name="Caption3" xml:space="preserve">
    <value>ATC information transfer failure</value>
  </data>
  <data name="cbxATCYNText" xml:space="preserve">
    <value>ATC in use</value>
  </data>
  <data name="cbxATCYNUnChecked" xml:space="preserve">
    <value>ATC unused</value>
  </data>
  <data name="Exception" xml:space="preserve">
    <value>Transfer Master (DRG4010) problem to create occurred.</value>
  </data>
  <data name="Exception2" xml:space="preserve">
    <value>It was not reflected in the pharmacy information.</value>
  </data>
  <data name="Exception3" xml:space="preserve">
    <value>Data to be transferred does not exist.</value>
  </data>
  <data name="Exception4" xml:space="preserve">
    <value>The way the problem to transfer the ATC message has occurred. Telegram:</value>
  </data>
  <data name="layBongtuLabel1" xml:space="preserve">
    <value>Medication number:</value>
  </data>
  <data name="layBongtuLabel2" xml:space="preserve">
    <value>Dispensing date:</value>
  </data>
  <data name="layBongtuLabel3" xml:space="preserve">
    <value>Mr</value>
  </data>
  <data name="MessageBox1" xml:space="preserve">
    <value>Please enter a patient number.</value>
  </data>
  <data name="MessageBox2" xml:space="preserve">
    <value>The patient is has not been selected. Please check it.</value>
  </data>
  <data name="MessageBox3_JP" xml:space="preserve">
    <value>There is a medicine that has not been accepted. After the reception, please re-output.</value>
  </data>
  <data name="MessageBox3_Ko" xml:space="preserve">
    <value>We do not receive medication. Please re-output after receipt.</value>
  </data>
  <data name="MessageBox4" xml:space="preserve">
    <value>Not the setting of the label printer.</value>
  </data>
  <data name="SMS_TRIAL" xml:space="preserve">
    <value>Experimental patient</value>
  </data>
  <data name="XMessageBox2" xml:space="preserve">
    <value>Already the order has been forwarded to the accounting.</value>
  </data>
  <data name="XMessageBox5" xml:space="preserve">
    <value>An error occurred during the printer settings.</value>
  </data>
  <data name="XMessageBox6" xml:space="preserve">
    <value>The application of ATC information transfer was successful.</value>
  </data>
  <data name="XMessageBox7" xml:space="preserve">
    <value>ATC information transfer request success</value>
  </data>
  <data name="xrbJubsuChecked" xml:space="preserve">
    <value>Reception</value>
  </data>
  <data name="xrbOrderChecked" xml:space="preserve">
    <value>Order</value>
  </data>
</root>