<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAy
        CAAAAk1TRnQBSQFMAgEBAgEAAQQBAAE8AQABEAEAARABAAT/AQkBEAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAARADAAEBAQABCAYAAQQYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/5cAAewuAAH/DwABBALs
        LAACBwH/DQACAgEEAuwqAAHsAwcB/wsAAfoDAgEEAuwpAAHsBAcB/woAAfoEAgEEAuwoAAHsAgcB7AIH
        Af8JAAH6AgIB+gICAQQC7CcAAewCBwEAAewCBwH/CAAB+gICAewB+gICAQQC7CYAAewCBwIAAewCBwH/
        BwAB+gICAewBAAH6AgIBBALsJgAC7AMAAewCBwH/BwAC+gMAAfoCAgEEAewsAAHsAQcB/w0AAfoBAgEE
        AewtAALsDgAB+gEC4wABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEABP8EAAT/
        BAAC/wH9Af8EAAH7Af8B+AH/BAAB8QH/AfABfwQAAeAB/wHgAT8EAAHgAX8B4AEfBAAB4AE/AeABDwQA
        AeIBHwHgAQcEAAHjAQ8B4QEDBAAB8wGHAfMBgwQAAf8BxwH/AcMEAAH/AecB/wHnBAAE/wQABP8EAAT/
        GgAL
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExcel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAYAAABWzo5XAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAASBJREFUOE+tUsER
        wzAI87Ts5J26k4uEhJ20vWvvqg8GgyScjLUeawiPtXg+a0CmiaohXnKlOI+Yc405VkTGGGsiZj5nMI9b
        nJHR9xlJQry5ZI5hkVIMfbd7iNIdfL0yfweLMOF+VMgi4LPVD7RLuGOhemCmHGkt3L19D9ZLneRZZ02C
        OBeygUXAFyDB0DHswYsjz8GXH5IFQO6azMMQNEnCQkz44hjQCo2DzI/a6obuyMFcakwAE2fsXM4cUT7f
        tuAGwMoZLyvf64Dm+s92A8835dNBke3cQmDqN+LnVvP+OgeZhIpMwr4zTkefEHqPvV6Uuzz3aqWeDb9C
        rns170o1k1K9VvPn3312V5GktIVLvYOb+99RvUk73+R09B+M8QQ0A9tmIrVr9wAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnZoomIn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAItJREFUOE9jGOZA
        rufJfxCGckkHhtOegQ04fvw4eYZ4L3lFmQE5W96RZgBIscG05/99gDZnb3n7v+/Yp/8br3/7f/H5z/9v
        v/75DwJ4wwSk2Xvxy/8gm/uPfvq/CagZpAEd43URSBKGL774BdeAjqHK8YM3X/8SthEfgPmZbAOI8jMh
        QJKfBwAwMAAAEouiO0w4JGMAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnZoomOut.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAEdJREFUOE9jGAWD
        Dfw3YfxPDIYqxwT/C3z+/y/wBWIQjcYuBLEhfKhyTPD/8Jb/KPgQGh+Kjx8/jtsQkCQxGKp8FAwCwMAA
        AEgZeHWyEcRdAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="dloPatientInfo.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>128, 17</value>
  </metadata>
  <data name="dloPatientInfo.QuerySQL" xml:space="preserve">
    <value>SELECT DISTINCT
       A.BUNHO                                           BUNHO      ,
       B.SUNAME                                          SUNAME     ,
       B.SUNAME2                                         SUNAME2    ,
       FN_BAS_TO_JAPAN_DATE_CONVERT('1', B.BIRTH )       BIRTH      ,
       FN_OCS_LOAD_SEX_AGE(A.BUNHO, A.ORDER_DATE)        SEX_AGE    ,
       DECODE( NVL(:f_gwa, C.GWA), C.GWA, C.DOCTOR, :f_doctor )                                           DOCTOR     ,
       FN_BAS_LOAD_DOCTOR_NAME( DECODE( NVL(:f_gwa, C.GWA), C.GWA, C.DOCTOR, :f_doctor ), A.ORDER_DATE)   DOCTOR_NAME,
       DECODE( NVL(:f_gwa, C.GWA), C.GWA, C.GWA, :f_gwa )                                                 GWA        ,
       FN_BAS_LOAD_GWA_NAME( DECODE( NVL(:f_gwa, C.GWA), C.GWA, C.GWA, :f_gwa ), A.ORDER_DATE)            GWA_NAME   ,
       FN_BAS_TO_JAPAN_DATE_CONVERT('1', A.ORDER_DATE )  ORDER_DATE ,
       :f_input_gubun                                    INPUT_GUBUN
  FROM OCS2003        A,
       OUT0101        B,
       VW_OCS_INP1001_RES C
 WHERE A.HOSP_CODE            = :f_hosp_code
   AND A.BUNHO                = :f_bunho
   AND A.FKINP1001            = :f_fkinp1001
   AND A.ORDER_DATE           = TO_DATE(:f_order_date,'YYYY/MM/DD')
   --AND (( A.INPUT_GUBUN = :f_input_gubun AND A.SLIP_CODE NOT LIKE 'P%'   ) OR
   --     ( :f_input_gubun LIKE 'D%' AND A.INPUT_GUBUN LIKE :f_input_gubun ) )
   AND A.IO_GUBUN             IS NULL
   AND A.NALSU                &gt;= 0
   AND NVL(A.DISPLAY_YN,'Y')  = 'Y'
   AND NVL(A.DC_YN,'N')       = 'N'
   AND B.HOSP_CODE            = A.HOSP_CODE
   AND B.BUNHO                = A.BUNHO
   AND C.HOSP_CODE            = A.HOSP_CODE
   AND C.PKINP1001            = A.FKINP1001</value>
  </data>
  <metadata name="dloOCS2001.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>263, 17</value>
  </metadata>
  <data name="dloOCS2001.QuerySQL" xml:space="preserve">
    <value> SELECT A.JU_SANG_YN        ,                                                              
        A.SANG_CODE         ,                                                              
        A.SER               ,                                                              
        RTRIM(A.PRE_MODIFIER_NAME)||RTRIM(A.SANG_NAME)||RTRIM(A.POST_MODIFIER_NAME)    DIS_SANG_NAME,        
        A.SANG_START_DATE   ,                                                              
        A.SANG_END_DATE     ,                                                              
        A.SANG_END_SAYU     ,                                                              
        A.SANG_NAME         ,                                                              
        A.PRE_MODIFIER_NAME ,                                                              
        A.POST_MODIFIER_NAME,                                                              
        DECODE(A.SANG_END_DATE, NULL, 'N', 'Y') END_YN                                
   FROM OUTSANG A                                                                    
  WHERE A.HOSP_CODE   = :f_hosp_code
    AND A.BUNHO       = :f_bunho                                                       
    AND A.FKINP1001   = :f_fkinp1001                                                   
    AND A.GWA         = :f_gwa                                                       
  ORDER BY A.SER                                                                   </value>
  </data>
  <metadata name="dloOCS2003.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>389, 17</value>
  </metadata>
  <data name="dloOCS2003.QuerySQL" xml:space="preserve">
    <value>SELECT A.INPUT_GUBUN                                              INPUT_GUBUN             ,
       C.CODE_NAME                                                INPUT_GUBUN_NAME        ,
       A.GROUP_SER                                                GROUP_SER               ,
       A.MIX_GROUP                                                MIX_GROUP               ,
       A.ORDER_GUBUN                                              ORDER_GUBUN             ,
       NVL(FN_OCS_LOAD_CODE_NAME('ORDER_GUBUN', A.ORDER_GUBUN ), 'Etc')     ORDER_GUBUN_NAME        ,
       B.ORDER_GUBUN                                              ORDER_GUBUN_BAS         ,
       A.HANGMOG_CODE                                             HANGMOG_CODE            ,
       B.HANGMOG_NAME                                             HANGMOG_NAME            ,
       B.SG_CODE                                                  SG_CODE                 ,
       NVL(E.SG_NAME, B.HANGMOG_NAME)                             SG_NAME                 ,
--       A.SURYANG                                                  SURYANG,
       (CASE WHEN B.INPUT_CONTROL = '1' THEN DECODE(SUBSTR(LTRIM(TO_CHAR(A.SURYANG)), 1, 1), '.', '0'||LTRIM(TO_CHAR(A.SURYANG)), LTRIM(TO_CHAR(A.SURYANG)))
             WHEN B.INPUT_CONTROL = 'C' THEN DECODE(SUBSTR(LTRIM(TO_CHAR(A.SURYANG)), 1, 1), '.', '0'||LTRIM(TO_CHAR(A.SURYANG)), LTRIM(TO_CHAR(A.SURYANG)))
             WHEN B.INPUT_CONTROL = '2' THEN DECODE(SUBSTR(LTRIM(TO_CHAR(A.SURYANG)), 1, 1), '.', '0'||LTRIM(TO_CHAR(A.SURYANG)), LTRIM(TO_CHAR(A.SURYANG)))
             WHEN B.INPUT_CONTROL = '3' THEN DECODE(SUBSTR(LTRIM(TO_CHAR(A.SURYANG)), 1, 1), '.', '0'||LTRIM(TO_CHAR(A.SURYANG)), LTRIM(TO_CHAR(A.SURYANG)))
             WHEN B.INPUT_CONTROL = '6' THEN DECODE(SUBSTR(LTRIM(TO_CHAR(A.SURYANG)), 1, 1), '.', '0'||LTRIM(TO_CHAR(A.SURYANG)), LTRIM(TO_CHAR(A.SURYANG)))
             WHEN B.INPUT_CONTROL = '7' THEN DECODE(SUBSTR(LTRIM(TO_CHAR(A.SURYANG)), 1, 1), '.', '0'||LTRIM(TO_CHAR(A.SURYANG)), LTRIM(TO_CHAR(A.SURYANG)))
             ELSE '' END)                                         SURYANG                 ,
       A.ORD_DANUI                                                ORD_DANUI,
--       FN_OCS_LOAD_CODE_NAME('ORD_DANUI', A.ORD_DANUI)      ORD_DANUI_NAME   , 
--       A.DV_TIME                                            DV_TIME,
--       A.DV                                                 DV ,
       (CASE WHEN B.ORDER_GUBUN         = 'K' THEN FN_OCS_LOAD_CODE_NAME('ORD_DANUI', A.ORD_DANUI)
             WHEN B.INPUT_CONTROL       = '1' THEN FN_OCS_LOAD_CODE_NAME('ORD_DANUI', A.ORD_DANUI)
             WHEN B.INPUT_CONTROL       = 'C' THEN FN_OCS_LOAD_CODE_NAME('ORD_DANUI', A.ORD_DANUI)
             WHEN B.INPUT_CONTROL       = '2' THEN FN_OCS_LOAD_CODE_NAME('ORD_DANUI', A.ORD_DANUI)
             WHEN B.INPUT_CONTROL       = '3' AND NVL(E.BUN_CODE, 'XX') = 'T2'              THEN 'L'
             WHEN B.INPUT_CONTROL       = '3' THEN 'H'
             ELSE '' END )                                        ORD_DANUI_NAME          ,
       (CASE WHEN B.INPUT_CONTROL = '1' THEN FN_OCS_LOAD_CODE_NAME('DV_TIME', A.DV_TIME)
             WHEN B.INPUT_CONTROL = '2' THEN FN_OCS_LOAD_CODE_NAME('DV_TIME', A.DV_TIME)
             ELSE '' END )                                        DV_TIME                 ,
       (CASE WHEN B.INPUT_CONTROL = '1' THEN TRIM(TO_CHAR(A.DV, '99'))
             WHEN B.INPUT_CONTROL = '2' THEN TRIM(TO_CHAR(A.DV, '99'))
             ELSE '' END )                                        DV                      ,
       (CASE WHEN B.INPUT_CONTROL = '1' THEN LTRIM(TO_CHAR(A.NALSU, '9999'))||'D'
             WHEN B.INPUT_CONTROL = '2' THEN LTRIM(TO_CHAR(A.NALSU, '9999'))||'D'
             WHEN B.INPUT_CONTROL = '3' THEN LTRIM(TO_CHAR(A.NALSU, '9999'))||'M'
             WHEN B.INPUT_CONTROL = '7' THEN LTRIM(TO_CHAR(A.NALSU, '9999'))||'D'
             WHEN B.INPUT_CONTROL = '8' THEN LTRIM(TO_CHAR(A.NALSU, '9999'))||'D'
             ELSE '' END)                                         NALSU                   ,
       A.WONYOI_ORDER_YN                                          WONYOI_ORDER_YN         ,
       A.SPECIMEN_CODE                                            SPECIMEN_CODE           ,
       D.SPECIMEN_NAME                                            SPECIMEN_NAME           ,
       A.JUSA                                                     JUSA                    ,
       FN_OCS_LOAD_CODE_NAME('JUSA', A.JUSA)                      JUSA_NAME               ,
       A.BOGYONG_CODE                                             BOGYONG_CODE            ,
       FN_OCS_LOAD_BOGYONG_COL_NAME(B.ORDER_GUBUN, A.BOGYONG_CODE)        BOGYONG_NAME            ,
       FN_BAS_TO_JAPAN_DATE_CONVERT('1', A.HOPE_DATE )            HOPE_DATE               ,
       A.ORDER_REMARK                                             ORDER_REMARK            ,
       A.NURSE_REMARK                                             NURSE_REMARK            ,
       A.EMERGENCY                                                EMERGENCY               ,
       A.TEL_YN                                                   TEL_YN                  ,
       A.PRN_YN                                                   PRN_YN                  ,
       DECODE(A.RESER_DATE, NULL, 'N', 'Y')                       RESER_YN                ,
       A.SEQ                                                      SEQ                     ,
       A.BROUGHT_DRG_YN,
       A.POWDER_YN,
       A.DRG_PACK_YN,
       NVL(A.INSTEAD_YN, 'N'),
       NVL(A.APPROVE_YN, 'N'),
       NVL(A.POSTAPPROVE_YN, 'N'),
       TO_CHAR(A.GROUP_SER, '00000000000')
    || TO_CHAR(CASE WHEN A.BOM_SOURCE_KEY IS NULL THEN A.PKOCS2003
                    ELSE A.BOM_SOURCE_KEY END )
    || A.PKOCS2003                                          ORDER_BY_KEY 
 FROM OCS2003 A,
       OCS0103 B,
       OCS0132 C,
       OCS0116 D,
--       BAS0310 E,
        ( SELECT A.SG_CODE,
                 A.BUN_CODE,
                 A.SG_NAME,
                 A.HOSP_CODE
            FROM BAS0310 A
           WHERE A.HOSP_CODE = :f_hosp_code
             AND A.SG_YMD    = (SELECT MAX(Z.SG_YMD)
                                  FROM BAS0310 Z
                                 WHERE Z.HOSP_CODE = A.HOSP_CODE
                                   AND Z.SG_CODE   = A.SG_CODE
                                   AND Z.SG_YMD   &lt;= TRUNC(SYSDATE) )
 		) E,
       OCS0132 F,
       VW_OCS_INP1001_RES G
 WHERE A.HOSP_CODE            = :f_hosp_code
   AND A.BUNHO                = :f_bunho
   AND A.FKINP1001            = :f_fkinp1001
   AND A.ORDER_DATE           = TO_DATE(:f_order_date,'YYYY/MM/DD')
--   AND (   (A.INPUT_GUBUN = :f_input_gubun AND A.SLIP_CODE NOT LIKE 'P%')
   AND (   (A.INPUT_GUBUN = :f_input_gubun)
        OR (:f_input_gubun = 'D%' AND A.INPUT_GUBUN LIKE :f_input_gubun ) 
       )
   AND DECODE( NVL(:f_gwa, G.GWA), G.GWA, G.DOCTOR, A.INPUT_ID )                  = DECODE( NVL(:f_gwa, G.GWA), G.GWA, G.DOCTOR, :f_doctor )
   AND A.IO_GUBUN             IS NULL
   AND A.NALSU                &gt;= 0
   AND NVL(A.DISPLAY_YN,'Y')  = 'Y'
   AND NVL(A.DC_YN,'N')       = 'N'
   AND B.HOSP_CODE             = A.HOSP_CODE
   AND B.HANGMOG_CODE          = A.HANGMOG_CODE
   AND C.HOSP_CODE    (+)      = A.HOSP_CODE
   AND C.CODE         (+)      = A.INPUT_GUBUN
   AND C.CODE_TYPE    (+)      = 'INPUT_GUBUN'
   AND D.HOSP_CODE    (+)      = A.HOSP_CODE
   AND D.SPECIMEN_CODE(+)      = A.SPECIMEN_CODE
   AND E.HOSP_CODE    (+)      = B.HOSP_CODE
   AND E.SG_CODE      (+)      = B.SG_CODE
   AND F.HOSP_CODE    (+)      = A.HOSP_CODE
   AND F.CODE         (+)      = A.ORDER_GUBUN
   AND F.CODE_TYPE    (+)      = 'ORDER_GUBUN'
   AND G.HOSP_CODE             = A.HOSP_CODE
   AND G.PKINP1001             = A.FKINP1001
ORDER BY ORDER_BY_KEY
 --ORDER BY C.SORT_KEY, NVL(F.SORT_KEY, 99), A.GROUP_SER, NVL(A.MIX_GROUP, ' '), A.SEQ
</value>
  </data>
  <metadata name="dloOCS2003_PRINT.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>515, 17</value>
  </metadata>
</root>