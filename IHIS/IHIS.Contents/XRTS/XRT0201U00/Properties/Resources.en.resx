<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CAP_001" xml:space="preserve">
    <value>Storage completion</value>
  </data>
  <data name="CAP_002" xml:space="preserve">
    <value>Save failure</value>
  </data>
  <data name="fwkActorFormText" xml:space="preserve">
    <value>Practitioner inquiry</value>
  </data>
  <data name="fwkActorFormText2" xml:space="preserve">
    <value>Radiologist List</value>
  </data>
  <data name="fwkActorHeader2" xml:space="preserve">
    <value>Practitioner ID</value>
  </data>
  <data name="fwkActorHeader3" xml:space="preserve">
    <value>Practitioner name</value>
  </data>
  <data name="lbPaceMaker" xml:space="preserve">
    <value>pacemaker</value>
  </data>
  <data name="MSG_001" xml:space="preserve">
    <value>Save success</value>
  </data>
  <data name="MSG_002" xml:space="preserve">
    <value>Save failure</value>
  </data>
  <data name="ord_danui" xml:space="preserve">
    <value>Order Unit</value>
  </data>
  <data name="ord_danui_name" xml:space="preserve">
    <value>Order unit name</value>
  </data>
  <data name="SMS_TRIAL" xml:space="preserve">
    <value>Experimental patient</value>
  </data>
  <data name="XMessageBox_Caption1" xml:space="preserve">
    <value>Patient guidance confirmed</value>
  </data>
  <data name="XMessageBox_Caption11" xml:space="preserve">
    <value>Implementation cancellation processing confirmation</value>
  </data>
  <data name="XMessageBox_caption12" xml:space="preserve">
    <value>Transfer confirmation</value>
  </data>
  <data name="XMessageBox_caption2" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="XMessageBox_caption3" xml:space="preserve">
    <value>Responsible engineer confirmation</value>
  </data>
  <data name="XMessageBox_caption4" xml:space="preserve">
    <value>Implementation confirmation</value>
  </data>
  <data name="XMessageBox_caption6" xml:space="preserve">
    <value>Implementation check confirmation</value>
  </data>
  <data name="XMessageBox_Caption7" xml:space="preserve">
    <value>확인</value>
  </data>
  <data name="XMessageBox1" xml:space="preserve">
    <value>Please be guided to the examination room the patient When you have finished shooting!</value>
  </data>
  <data name="XMessageBox10" xml:space="preserve">
    <value>] Please do the cancellation processing of items!</value>
  </data>
  <data name="XMessageBox11" xml:space="preserve">
    <value>Implementation cancellation process done one line at a time.
Before[</value>
  </data>
  <data name="XMessageBox12" xml:space="preserve">
    <value>Do you want to re-transfer?</value>
  </data>
  <data name="XMessageBox13" xml:space="preserve">
    <value>It failed to save.</value>
  </data>
  <data name="XMessageBox13_caption" xml:space="preserve">
    <value>Save failure</value>
  </data>
  <data name="XMessageBox2" xml:space="preserve">
    <value>Already the order is transferred to the accounting.</value>
  </data>
  <data name="XMessageBox3" xml:space="preserve">
    <value>Please enter the responsible engineer.</value>
  </data>
  <data name="XMessageBox4" xml:space="preserve">
    <value>Please put the check in the reception in order to carry out the implementation process!</value>
  </data>
  <data name="XMessageBox5" xml:space="preserve">
    <value>There is a change in material matters. Do you want to save?</value>
  </data>
  <data name="XMessageBox5_Caption" xml:space="preserve">
    <value>There material change matters</value>
  </data>
  <data name="XMessageBox6" xml:space="preserve">
    <value>Please put the implementation check!</value>
  </data>
  <data name="XMessageBox7_JP" xml:space="preserve">
    <value>Please enter the quantity.</value>
  </data>
  <data name="XMessageBox7_Ko" xml:space="preserve">
    <value>수량을 입력해 주세요</value>
  </data>
  <data name="XMessageBox8" xml:space="preserve">
    <value>Material has been fixed. Please register and Delete.</value>
  </data>
  <data name="XMessageBox9" xml:space="preserve">
    <value>Acceptance cancellation process done one line at a time.
Before[</value>
  </data>
  <data name="XMessageBox9_caption" xml:space="preserve">
    <value>Acceptance cancellation processing confirmation</value>
  </data>
</root>