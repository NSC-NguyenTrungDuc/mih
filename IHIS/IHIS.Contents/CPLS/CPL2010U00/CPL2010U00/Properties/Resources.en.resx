<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnJusaText1" xml:space="preserve">
    <value>Injection there</value>
  </data>
  <data name="btnJusaText2" xml:space="preserve">
    <value>Without injection</value>
  </data>
  <data name="Caption1_Ko" xml:space="preserve">
    <value>??</value>
  </data>
  <data name="Caption2_JP" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="caption4" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="caption5" xml:space="preserve">
    <value>Save failure</value>
  </data>
  <data name="Caption6" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="dwBarcodeDataWindowObject" xml:space="preserve">
    <value>d_specimen_ser</value>
  </data>
  <data name="dwBarcodeLibraryList" xml:space="preserve">
    <value>CPLS\\cpls.cpl2010u00.pbd</value>
  </data>
  <data name="dwBarcodeName" xml:space="preserve">
    <value>dwBarcode</value>
  </data>
  <data name="dwOrderPrintDataWindowObject" xml:space="preserve">
    <value>cpl3010u01_1</value>
  </data>
  <data name="dwOrderPrintLibraryList" xml:space="preserve">
    <value>CPLS\\cpls.cpl2010u00.pbd</value>
  </data>
  <data name="dwOrderPrintName" xml:space="preserve">
    <value>dwOrderPrint</value>
  </data>
  <data name="fwkActorText" xml:space="preserve">
    <value>Collection personnel inquiry</value>
  </data>
  <data name="fwkPaText" xml:space="preserve">
    <value>Patient referral</value>
  </data>
  <data name="layChkNames1" xml:space="preserve">
    <value>] Patients "</value>
  </data>
  <data name="layChkNames2" xml:space="preserve">
    <value>Same order in other Department of the order date for "" has been registered.</value>
  </data>
  <data name="mErrMsg" xml:space="preserve">
    <value>An error occurred during the save process.
</value>
  </data>
  <data name="mErrMsg2" xml:space="preserve">
    <value>It has already been accepted by the laboratory. You can not cancel.</value>
  </data>
  <data name="mErrMsg4" xml:space="preserve">
    <value>[PR_CPL_MAKE_SPECIMEN_SER] I failed to processing.</value>
  </data>
  <data name="MSG_DUP_SPECIMEN" xml:space="preserve">
    <value>Specimen code cannot be duplicated.</value>
  </data>
  <data name="MSG_REQUIRED_SPECIMEN" xml:space="preserve">
    <value>Please input specimen code.</value>
  </data>
  <data name="ORDERCANCEL_Execute_Fail" xml:space="preserve">
    <value>Save failed</value>
  </data>
  <data name="SMS_TRIAL" xml:space="preserve">
    <value>Experimental patient</value>
  </data>
  <data name="TEXT1" xml:space="preserve">
    <value>Has been saved.</value>
  </data>
  <data name="TEXT10" xml:space="preserve">
    <value>Selection</value>
  </data>
  <data name="TEXT2" xml:space="preserve">
    <value>I failed to save.</value>
  </data>
  <data name="TEXT3" xml:space="preserve">
    <value>Please select the test items.</value>
  </data>
  <data name="TEXT4" xml:space="preserve">
    <value>Has already been accounting. You can not cancel.</value>
  </data>
  <data name="TEXT5" xml:space="preserve">
    <value>Tests will delete ?</value>
  </data>
  <data name="TEXT6" xml:space="preserve">
    <value>his / her [] right?</value>
  </data>
  <data name="TEXT7" xml:space="preserve">
    <value>warning</value>
  </data>
  <data name="TEXT8" xml:space="preserve">
    <value> Refer who take blood</value>
  </data>
  <data name="TEXT9" xml:space="preserve">
    <value> Refer who take not  blood</value>
  </data>
  <data name="TEXT99" xml:space="preserve">
    <value>Caution</value>
  </data>
  <data name="ToolTipText1" xml:space="preserve">
    <value>Reservation order</value>
  </data>
  <data name="ToolTipText2" xml:space="preserve">
    <value>Emergency prescription</value>
  </data>
  <data name="ToolTipText3" xml:space="preserve">
    <value>Urgent prescription</value>
  </data>
  <data name="XMessageBox1_JP" xml:space="preserve">
    <value>Print item is not been selected.</value>
  </data>
  <data name="XMessageBox1_Ko" xml:space="preserve">
    <value>?? ?? ??? ?? ?? ????.</value>
  </data>
  <data name="XMessageBox10_Jp" xml:space="preserve">
    <value>&gt; Are you sure that you want to implement?</value>
  </data>
  <data name="XMessageBox11_Jp" xml:space="preserve">
    <value>Acceptance can not be. Please confirm the order.</value>
  </data>
  <data name="XMessageBox12" xml:space="preserve">
    <value>I was an error occurred during the acceptance process.
PR_CPL_PART_JUBSU error
</value>
  </data>
  <data name="XMessageBox13" xml:space="preserve">
    <value>Save failure</value>
  </data>
  <data name="XMessageBox15_Jp" xml:space="preserve">
    <value>There is no specimen you want to change the time.</value>
  </data>
  <data name="XMessageBox15_Ko" xml:space="preserve">
    <value>There is no time to change the subject</value>
  </data>
  <data name="XMessageBox16" xml:space="preserve">
    <value>An error occurred during the "printer settings.</value>
  </data>
  <data name="XMessageBox2" xml:space="preserve">
    <value>Đã trật tự đã được chuyển cho kế toán.</value>
  </data>
  <data name="XMessageBox2_Jp" xml:space="preserve">
    <value>Untreated reception</value>
  </data>
  <data name="XMessageBox2_Ko" xml:space="preserve">
    <value>Reception was not processed.</value>
  </data>
  <data name="XMessageBox3_Jp" xml:space="preserve">
    <value>There is no specimen to be saved.</value>
  </data>
  <data name="XMessageBox3_Ko" xml:space="preserve">
    <value>No sample store.</value>
  </data>
  <data name="XMessageBox4_Jp" xml:space="preserve">
    <value>Please enter the collection personnel.</value>
  </data>
  <data name="XMessageBox4_Ko" xml:space="preserve">
    <value>Please enter blood characters.</value>
  </data>
  <data name="XMessageBox5_Jp" xml:space="preserve">
    <value>Please enter the collection personnel.</value>
  </data>
  <data name="XMessageBox5_ko" xml:space="preserve">
    <value>Yeyakil &lt;</value>
  </data>
  <data name="XMessageBox6_Ko" xml:space="preserve">
    <value>&gt; Conduct day &lt;</value>
  </data>
  <data name="XMessageBox7_Ko" xml:space="preserve">
    <value>&gt; Do you want to continue?</value>
  </data>
  <data name="XMessageBox8_Jp" xml:space="preserve">
    <value>Reservation date &lt;</value>
  </data>
  <data name="XMessageBox9_Jp" xml:space="preserve">
    <value>&gt; Implementation date &lt;</value>
  </data>
</root>