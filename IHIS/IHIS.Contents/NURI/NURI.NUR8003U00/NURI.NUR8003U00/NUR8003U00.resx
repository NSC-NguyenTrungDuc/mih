<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABU
        CAAAAk1TRnQBSQFMAwEBAAEIAQABMAEAARABAAEQAQAE/wEJARAI/wFCAU0BNgEEBgABNgEEAgABKAMA
        AUADAAEQAwABAQEAAQgGAAEEGAABgAIAAYADAAKAAQABgAMAAYABAAGAAQACgAIAA8ABAAHAAdwBwAEA
        AfABygGmAQABMwUAATMBAAEzAQABMwEAAjMCAAMWAQADHAEAAyIBAAMpAQADVQEAA00BAANCAQADOQEA
        AYABfAH/AQACUAH/AQABkwEAAdYBAAH/AewBzAEAAcYB1gHvAQAB1gLnAQABkAGpAa0CAAH/ATMDAAFm
        AwABmQMAAcwCAAEzAwACMwIAATMBZgIAATMBmQIAATMBzAIAATMB/wIAAWYDAAFmATMCAAJmAgABZgGZ
        AgABZgHMAgABZgH/AgABmQMAAZkBMwIAAZkBZgIAApkCAAGZAcwCAAGZAf8CAAHMAwABzAEzAgABzAFm
        AgABzAGZAgACzAIAAcwB/wIAAf8BZgIAAf8BmQIAAf8BzAEAATMB/wIAAf8BAAEzAQABMwEAAWYBAAEz
        AQABmQEAATMBAAHMAQABMwEAAf8BAAH/ATMCAAMzAQACMwFmAQACMwGZAQACMwHMAQACMwH/AQABMwFm
        AgABMwFmATMBAAEzAmYBAAEzAWYBmQEAATMBZgHMAQABMwFmAf8BAAEzAZkCAAEzAZkBMwEAATMBmQFm
        AQABMwKZAQABMwGZAcwBAAEzAZkB/wEAATMBzAIAATMBzAEzAQABMwHMAWYBAAEzAcwBmQEAATMCzAEA
        ATMBzAH/AQABMwH/ATMBAAEzAf8BZgEAATMB/wGZAQABMwH/AcwBAAEzAv8BAAFmAwABZgEAATMBAAFm
        AQABZgEAAWYBAAGZAQABZgEAAcwBAAFmAQAB/wEAAWYBMwIAAWYCMwEAAWYBMwFmAQABZgEzAZkBAAFm
        ATMBzAEAAWYBMwH/AQACZgIAAmYBMwEAA2YBAAJmAZkBAAJmAcwBAAFmAZkCAAFmAZkBMwEAAWYBmQFm
        AQABZgKZAQABZgGZAcwBAAFmAZkB/wEAAWYBzAIAAWYBzAEzAQABZgHMAZkBAAFmAswBAAFmAcwB/wEA
        AWYB/wIAAWYB/wEzAQABZgH/AZkBAAFmAf8BzAEAAcwBAAH/AQAB/wEAAcwBAAKZAgABmQEzAZkBAAGZ
        AQABmQEAAZkBAAHMAQABmQMAAZkCMwEAAZkBAAFmAQABmQEzAcwBAAGZAQAB/wEAAZkBZgIAAZkBZgEz
        AQABmQEzAWYBAAGZAWYBmQEAAZkBZgHMAQABmQEzAf8BAAKZATMBAAKZAWYBAAOZAQACmQHMAQACmQH/
        AQABmQHMAgABmQHMATMBAAFmAcwBZgEAAZkBzAGZAQABmQLMAQABmQHMAf8BAAGZAf8CAAGZAf8BMwEA
        AZkBzAFmAQABmQH/AZkBAAGZAf8BzAEAAZkC/wEAAcwDAAGZAQABMwEAAcwBAAFmAQABzAEAAZkBAAHM
        AQABzAEAAZkBMwIAAcwCMwEAAcwBMwFmAQABzAEzAZkBAAHMATMBzAEAAcwBMwH/AQABzAFmAgABzAFm
        ATMBAAGZAmYBAAHMAWYBmQEAAcwBZgHMAQABmQFmAf8BAAHMAZkCAAHMAZkBMwEAAcwBmQFmAQABzAKZ
        AQABzAGZAcwBAAHMAZkB/wEAAswCAALMATMBAALMAWYBAALMAZkBAAPMAQACzAH/AQABzAH/AgABzAH/
        ATMBAAGZAf8BZgEAAcwB/wGZAQABzAH/AcwBAAHMAv8BAAHMAQABMwEAAf8BAAFmAQAB/wEAAZkBAAHM
        ATMCAAH/AjMBAAH/ATMBZgEAAf8BMwGZAQAB/wEzAcwBAAH/ATMB/wEAAf8BZgIAAf8BZgEzAQABzAJm
        AQAB/wFmAZkBAAH/AWYBzAEAAcwBZgH/AQAB/wGZAgAB/wGZATMBAAH/AZkBZgEAAf8CmQEAAf8BmQHM
        AQAB/wGZAf8BAAH/AcwCAAH/AcwBMwEAAf8BzAFmAQAB/wHMAZkBAAH/AswBAAH/AcwB/wEAAv8BMwEA
        AcwB/wFmAQAC/wGZAQAC/wHMAQACZgH/AQABZgH/AWYBAAFmAv8BAAH/AmYBAAH/AWYB/wEAAv8BZgEA
        ASEBAAGlAQADXwEAA3cBAAOGAQADlgEAA8sBAAOyAQAD1wEAA90BAAPjAQAD6gEAA/EBAAP4AQAB8AH7
        Af8BAAGkAqABAAOAAwAB/wIAAf8DAAL/AQAB/wMAAf8BAAH/AQAC/wIAA/8EAAH/AfABcgFJAScBSQFy
        AQgB/zYAAfQBcgEuAzQBMwItAXIB8zQAAfUBUANVAZcBeAI0Ai0BTwHzMgAB/wGXA1YBVQEbAf8BCAM0
        AS0BcgH/MQAB8wFPA1YBVQF4Av8BCAM0AS0BCDEAAZgDVgJVAVYBeAL/AQgDNAFyMQABlwFWAXgI/wEI
        AjQBTzEAAVUBVgF4CP8BGwJVAS4xAAGXBlYBmAL/ARsCVgFVAU8xAAGYBVYBeAH1Af8BGwRWAZcxAAH0
        AVUCeAJWAQgB/wEbBFYBTwHwMQAB/wGYAXgBmAF4AlYBmQVWAZcB/zIAAfYBlwF4AZgCeAZWAfQ0AAH2
        AZgBVQKYAXgBVwFWAVUBlwH0NgAB/wH0AZgBlwFVAZcBmAHzAf90AAFCAU0BPgcAAT4DAAEoAwABQAMA
        ARADAAEBAQABAQUAAYAXAAP/AQAB4AEPBgABwAEHBgABgAEDBwABAQcAAQEHAAEBBwABAQcAAQEHAAEB
        BwABAQcAAQEHAAEBBgABgAEDBgABwAEHBgAB4AEPBgAC/xwACw==
</value>
  </data>
  <data name="grdPalist.QuerySQL" xml:space="preserve">
    <value>SELECT A.HO_CODE1                                                   		HO_CODE
     , A.BUNHO                                                			BUNHO
     , C.SUNAME                                                        		SUNAME
     , A.PKINP1001                                           			PKINP1001
     , FN_BAS_LOAD_AGE(:f_date,C.BIRTH,'')||'/'||C.SEX            		AGE_SEX
     --, NVL(A.SIL_IPWON_DATE,NVL(A.CHT_IPWON_DATE, A.IPWON_DATE))    		IPWON_DATE
     , A.IPWON_DATE                                 				IPWON_DATE
     , A.TOIWON_DATE								TOIWON_DATE
     , FN_BAS_LOAD_DOCTOR_NAME(A.DOCTOR, TO_DATE(:f_date, 'YYYY/MM/DD'))	DOCTOR_NAME
     , A.KAIKEI_HODONG								KAIKEI_HODONG
  FROM INP1001        A
     , BAS0250        B
     , OUT0101        C
 WHERE A.HOSP_CODE     = :f_hosp_code
   AND A.HO_DONG1      = :f_ho_dong
   AND A.IPWON_DATE   &lt;= TO_DATE(:f_date, 'YYYY/MM/DD')
   AND NVL(A.TOIWON_DATE, '9998/12/31')  &gt;= TO_DATE(:f_date, 'YYYY/MM/DD')
   AND B.HOSP_CODE = A.HOSP_CODE
   AND B.HO_DONG = A.HO_DONG1
   AND B.HO_CODE = A.HO_CODE1
   AND C.HOSP_CODE = A.HOSP_CODE
   AND C.BUNHO   = A.BUNHO   
   AND ((NVL(:f_a, 'N') = 'Y' and B.TEAM = 'A') OR
        (NVL(:f_b, 'N') = 'Y' and B.TEAM = 'B') OR
        (NVL(:f_c, 'N') = 'Y' and B.TEAM = 'C') OR
        (NVL(:f_d, 'N') = 'Y' and B.TEAM = 'D') OR        
        (NVL(:f_a, 'N') = 'N' AND 
         NVL(:f_b, 'N') = 'N' AND
         NVL(:f_c, 'N') = 'N' AND
         NVL(:f_d, 'N') = 'N' )
       )   
 ORDER BY B.HO_SORT, A.BED_NO</value>
  </data>
  <metadata name="fwkGrdB.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>122, 17</value>
  </metadata>
  <data name="grdB.QuerySQL" xml:space="preserve">
    <value>SELECT A.FIRST_GUBUN    FIRST_GUBUN
     , A.CODE           GR_CODE
     , A.CODE_NAME      GR_NAME
     , B.SM_CODE        SM_CODE 
     , B.SM_DETAIL      SM_DETAIL
     , NVL(B.NUR_POINT, 0) NUR_POINT
     , B.NEW_SM_CODE    NEW_SM_CODE
     , B.NEW_SM_DETAIL  NEW_SM_DETAIL
     , NVL(B.NEW_NUR_POINT, 0) NEW_NUR_POINT
     , A.MENT            MENT
  FROM
 (SELECT Z.HOSP_CODE
      , Z.CODE
      , Z.CODE_NAME
      , 'B' FIRST_GUBUN
      , Z.GROUP_KEY
      , Z.MENT
      , Z.SORT_KEY
  FROM NUR0102 Z 
 WHERE CODE_TYPE LIKE 'NUR8003_D_TEXT'
   AND :f_write_date BETWEEN NVL(Z.START_DATE, '1900/01/01') AND NVL(Z.END_DATE, '9998/12/31')
 )  A
 , NUR8003 B
 WHERE A.HOSP_CODE = :f_hosp_code
   AND B.HOSP_CODE(+) = A.HOSP_CODE
   AND B.BUNHO(+) = :f_bunho
   AND B.WRITE_DATE(+) = :f_write_date
   AND B.FIRST_GUBUN(+) = A.FIRST_GUBUN
   AND B.GR_CODE(+) = A.CODE
   --AND B.WRITE_HODONG(+) = :f_ho_dong
   AND ((:f_ho_dong = 'A' AND A.GROUP_KEY = 'A') OR (:f_ho_dong = 'C3') OR (B.SM_DETAIL IS NOT NULL))
 ORDER BY A.SORT_KEY, A.CODE</value>
  </data>
  <data name="grdA.QuerySQL" xml:space="preserve">
    <value>SELECT A.FIRST_GUBUN
     , A.CODE           GR_CODE
     , A.CODE_NAME      GR_NAME
     , B.SM_DETAIL 
     , NVL(B.NUR_POINT, 0) NUR_POINT
     , B.NEW_SM_DETAIL
     , NVL(B.NEW_NUR_POINT, 0) NEW_NUR_POINT
     , A.GROUP_KEY      GET_POINT
  FROM
 (SELECT Z.HOSP_CODE
      , Z.CODE
      , Z.CODE_NAME
      , 'A' FIRST_GUBUN
      , Z.GROUP_KEY
      , Z.SORT_KEY
  FROM NUR0102 Z 
 WHERE CODE_TYPE LIKE 'NUR8003_C_TEXT'
   AND :f_write_date BETWEEN NVL(Z.START_DATE, '1900/01/01') AND NVL(Z.END_DATE, '9998/12/31')
 )  A
 , NUR8003 B
 WHERE A.HOSP_CODE = :f_hosp_code
   AND B.HOSP_CODE(+) = A.HOSP_CODE
   AND B.BUNHO(+) = :f_bunho
   AND B.WRITE_DATE(+) = :f_write_date
   AND B.FIRST_GUBUN(+) = A.FIRST_GUBUN
   AND B.GR_CODE(+) = A.CODE
   AND B.WRITE_HODONG(+) = :f_ho_dong
 ORDER BY A.SORT_KEY, A.CODE</value>
  </data>
  <metadata name="layNurPoints.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>220, 17</value>
  </metadata>
  <data name="layNurPoints.QuerySQL" xml:space="preserve">
    <value>SELECT A.DAYOFMON, A.A_POINT || '/' || A.B_POINT NEED_POINT, FN_NUR_LOAD_NUR_NEED_COUNT(A.A_POINT, A.B_POINT) NEED_YN, B.WRITE_CNT, B.WRITE_HODONG
FROM 
 (SELECT TO_DATE(:f_start_date, 'YYYY/MM/DD') + Y.CNT DAYOFMON
       , FN_NUR_LOAD_NUR_NEED_POINT(:f_hosp_code, :f_bunho, TO_DATE(:f_start_date, 'YYYY/MM/DD') + Y.CNT ,'A') A_POINT 
       , FN_NUR_LOAD_NUR_NEED_POINT(:f_hosp_code, :f_bunho, TO_DATE(:f_start_date, 'YYYY/MM/DD') + Y.CNT ,'B') B_POINT
       , :f_bunho BUNHO     
    FROM SYS.DUAL X, 
 (SELECT LEVEL-1 CNT
   FROM SYS.DUAL
CONNECT BY LEVEL &lt; 43) Y) A,
(SELECT Z.WRITE_DATE, COUNT(*) WRITE_CNT , Z.BUNHO, Z.WRITE_HODONG
  FROM NUR8003 Z
 WHERE Z.HOSP_CODE = :f_hosp_code
   AND Z.WRITE_DATE BETWEEN TRUNC(TO_DATE(:f_query_date,'YYYY/MM/DD'), 'MONTH') AND LAST_DAY(:f_query_date)
 GROUP BY Z.WRITE_DATE, Z.BUNHO, Z.WRITE_HODONG) B
 WHERE B.WRITE_DATE(+) = A.DAYOFMON
   AND B.BUNHO(+) = A.BUNHO
 ORDER BY DAYOFMON</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>54</value>
  </metadata>
</root>