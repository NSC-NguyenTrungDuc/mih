<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="grdReserList.QuerySQL" xml:space="preserve">
    <value>SELECT A.PKSCH0201                       PKSCH0201
      ,A.IN_OUT_GUBUN                    IN_OUT_GUBUN
      ,A.FKOCS                           FKOCS
      ,A.BUNHO                           BUNHO
      ,A.GWA                             GWA
      ,A.GUMSAJA                         GUMSAJA
      ,A.HANGMOG_CODE                    HANGMOG_CODE
      ,A.JUNDAL_TABLE                    JUNDAL_TABLE
      ,A.JUNDAL_PART                     JUNDAL_PART
      ,A.RESER_DATE                      RESER_DATE
      ,A.RESER_TIME                      RESER_TIME
      ,A.INPUT_DATE                      INPUT_DATE
      ,A.INPUT_ID                        INPUT_ID
      ,NVL(A.SUNAME,B.SUNAME)            SUNAME
      ,A.RESER_YN                        RESER_YN
      ,A.CANCEL_YN                       CANCEL_YN
      ,A.ACTING_DATE                     ACTING_DATE
      ,A.HOPE_DATE                       HOPE_DATE
      ,A.COMMENTS                        COMMENTS
      ,C.HANGMOG_NAME                    HANGMOG_NAME
      ,D.JUNDAL_PART_NAME                JUNDAL_PART_NAME
      ,A.ORDER_DATE                      ORDER_DATE
      ,FN_BAS_LOAD_DOCTOR_NAME(A.DOCTOR, A.ORDER_DATE)   DOCTOR_NAME
      ,E.SEQ                             SEQ
      ,E.ORDER_REMARK                    ORDER_REMARK
  FROM OCS1003 E,
       SCH0001 D,
       OCS0103 C,
       OUT0101 B,
       SCH0201 A
 WHERE A.HOSP_CODE        = :f_hosp_code
   AND B.HOSP_CODE     (+)= A.HOSP_CODE
   AND C.HOSP_CODE        = A.HOSP_CODE
   AND D.HOSP_CODE     (+)= A.HOSP_CODE
   AND E.HOSP_CODE        = A.HOSP_CODE  
   AND A.BUNHO            = :f_bunho
   AND A.JUNDAL_PART      = :f_jundal_part
   AND A.RESER_DATE       = :f_reser_date
   AND NVL(A.CANCEL_YN,'N')     = 'N'
   AND A.ACTING_DATE   IS NULL
   AND B.BUNHO         (+)= A.BUNHO
   AND C.HANGMOG_CODE     = A.HANGMOG_CODE
   AND D.JUNDAL_PART   (+)= A.JUNDAL_PART
   AND A.IN_OUT_GUBUN     = 'O'
   AND E.PKOCS1003        = A.FKOCS
 UNION ALL
SELECT A.PKSCH0201                       PKSCH0201
      ,A.IN_OUT_GUBUN                    IN_OUT_GUBUN
      ,A.FKOCS                           FKOCS
      ,A.BUNHO                           BUNHO
      ,A.GWA                             GWA
      ,A.GUMSAJA                         GUMSAJA
      ,A.HANGMOG_CODE                    HANGMOG_CODE
      ,A.JUNDAL_TABLE                    JUNDAL_TABLE
      ,A.JUNDAL_PART                     JUNDAL_PART
      ,A.RESER_DATE                      RESER_DATE
      ,A.RESER_TIME                      RESER_TIME
      ,A.INPUT_DATE                      INPUT_DATE
      ,A.INPUT_ID                        INPUT_ID
      ,NVL(A.SUNAME,B.SUNAME)            SUNAME
      ,A.RESER_YN                        RESER_YN
      ,A.CANCEL_YN                       CANCEL_YN
      ,A.ACTING_DATE                     ACTING_DATE
      ,A.HOPE_DATE                       HOPE_DATE
      ,A.COMMENTS                        COMMENTS
      ,C.HANGMOG_NAME                    HANGMOG_NAME
      ,D.JUNDAL_PART_NAME                JUNDAL_PART_NAME
      ,A.ORDER_DATE                      ORDER_DATE
      ,FN_BAS_LOAD_DOCTOR_NAME(A.DOCTOR, A.ORDER_DATE)   DOCTOR_NAME
      ,E.SEQ                             SEQ
      ,E.ORDER_REMARK                    ORDER_REMARK
  FROM OCS2003 E,
       SCH0001 D,
       OCS0103 C,
       OUT0101 B,
       SCH0201 A
 WHERE A.HOSP_CODE        = :f_hosp_code
   AND B.HOSP_CODE     (+)= A.HOSP_CODE
   AND C.HOSP_CODE        = A.HOSP_CODE
   AND D.HOSP_CODE     (+)= A.HOSP_CODE
   AND E.HOSP_CODE        = A.HOSP_CODE  
   AND A.BUNHO         = :f_bunho
   AND A.JUNDAL_PART   = :f_jundal_part
   AND A.RESER_DATE    = :f_reser_date
   AND NVL(A.CANCEL_YN,'N')     = 'N'
   AND A.ACTING_DATE   IS NULL
   AND B.BUNHO         (+)= A.BUNHO
   AND C.HANGMOG_CODE  = A.HANGMOG_CODE
   AND D.JUNDAL_PART   (+)= A.JUNDAL_PART
   AND A.IN_OUT_GUBUN  = 'I'
   AND E.PKOCS2003     = A.FKOCS
 UNION ALL
SELECT A.PKSCH0201                       PKSCH0201
      ,A.IN_OUT_GUBUN                    IN_OUT_GUBUN
      ,A.FKOCS                           FKOCS
      ,A.BUNHO                           BUNHO
      ,A.GWA                             GWA
      ,A.GUMSAJA                         GUMSAJA
      ,A.HANGMOG_CODE                    HANGMOG_CODE
      ,A.JUNDAL_TABLE                    JUNDAL_TABLE
      ,A.JUNDAL_PART                     JUNDAL_PART
      ,A.RESER_DATE                      RESER_DATE
      ,A.RESER_TIME                      RESER_TIME
      ,A.INPUT_DATE                      INPUT_DATE
      ,A.INPUT_ID                        INPUT_ID
      ,NVL(A.SUNAME,B.SUNAME)            SUNAME
      ,A.RESER_YN                        RESER_YN
      ,A.CANCEL_YN                       CANCEL_YN
      ,A.ACTING_DATE                     ACTING_DATE
      ,A.HOPE_DATE                       HOPE_DATE
      ,A.COMMENTS                        COMMENTS
      ,C.HANGMOG_NAME                    HANGMOG_NAME
      ,D.JUNDAL_PART_NAME                JUNDAL_PART_NAME
      ,A.ORDER_DATE                      ORDER_DATE
      ,FN_BAS_LOAD_DOCTOR_NAME(A.DOCTOR, A.ORDER_DATE)   DOCTOR_NAME
      ,E.SEQ                             SEQ
      ,E.ORDER_REMARK                    ORDER_REMARK
  FROM OCS1003 E,
       SCH0001 D,
       OCS0103 C,
       OUT0101 B,
       SCH0201 A
 WHERE A.HOSP_CODE        = :f_hosp_code
   AND B.HOSP_CODE     (+)= A.HOSP_CODE
   AND C.HOSP_CODE        = A.HOSP_CODE
   AND D.HOSP_CODE     (+)= A.HOSP_CODE
   AND E.HOSP_CODE        = A.HOSP_CODE  
   AND A.BUNHO         = :f_bunho
   AND A.JUNDAL_PART   = :f_jundal_part
   AND A.ORDER_DATE    = :f_order_date
   AND A.RESER_DATE    IS NULL
   AND :f_reser_date   IS NULL
   AND NVL(A.CANCEL_YN,'N')     = 'N'
   AND A.ACTING_DATE   IS NULL
   AND B.BUNHO         (+)= A.BUNHO
   AND C.HANGMOG_CODE  = A.HANGMOG_CODE
   AND D.JUNDAL_PART   (+)= A.JUNDAL_PART     
   AND A.IN_OUT_GUBUN  = 'O'
   AND E.PKOCS1003     = A.FKOCS
 UNION ALL
SELECT A.PKSCH0201                       PKSCH0201
      ,A.IN_OUT_GUBUN                    IN_OUT_GUBUN
      ,A.FKOCS                           FKOCS
      ,A.BUNHO                           BUNHO
      ,A.GWA                             GWA
      ,A.GUMSAJA                         GUMSAJA
      ,A.HANGMOG_CODE                    HANGMOG_CODE
      ,A.JUNDAL_TABLE                    JUNDAL_TABLE
      ,A.JUNDAL_PART                     JUNDAL_PART
      ,A.RESER_DATE                      RESER_DATE
      ,A.RESER_TIME                      RESER_TIME
      ,A.INPUT_DATE                      INPUT_DATE
      ,A.INPUT_ID                        INPUT_ID
      ,NVL(A.SUNAME,B.SUNAME)            SUNAME
      ,A.RESER_YN                        RESER_YN
      ,A.CANCEL_YN                       CANCEL_YN
      ,A.ACTING_DATE                     ACTING_DATE
      ,A.HOPE_DATE                       HOPE_DATE
      ,A.COMMENTS                        COMMENTS
      ,C.HANGMOG_NAME                    HANGMOG_NAME
      ,D.JUNDAL_PART_NAME                JUNDAL_PART_NAME
      ,A.ORDER_DATE                      ORDER_DATE
      ,FN_BAS_LOAD_DOCTOR_NAME(A.DOCTOR, A.ORDER_DATE)   DOCTOR_NAME
      ,E.SEQ                             SEQ
      ,E.ORDER_REMARK                    ORDER_REMARK
  FROM OCS2003 E,
       SCH0001 D,
       OCS0103 C,
       OUT0101 B,
       SCH0201 A
 WHERE A.HOSP_CODE        = :f_hosp_code
   AND B.HOSP_CODE     (+)= A.HOSP_CODE
   AND C.HOSP_CODE        = A.HOSP_CODE
   AND D.HOSP_CODE     (+)= A.HOSP_CODE
   AND E.HOSP_CODE        = A.HOSP_CODE  
   AND A.BUNHO         = :f_bunho
   AND A.JUNDAL_PART   = :f_jundal_part
   AND A.ORDER_DATE    = :f_order_date
   AND A.RESER_DATE    IS NULL
   AND :f_reser_date   IS NULL
   AND NVL(A.CANCEL_YN,'N')     = 'N'
   AND A.ACTING_DATE   IS NULL
   AND B.BUNHO         (+)= A.BUNHO
   AND C.HANGMOG_CODE  = A.HANGMOG_CODE
   AND D.JUNDAL_PART   (+)= A.JUNDAL_PART     
   AND A.IN_OUT_GUBUN  = 'I'
   AND E.PKOCS2003     = A.FKOCS
 ORDER BY 22 DESC, 9, 24</value>
  </data>
</root>