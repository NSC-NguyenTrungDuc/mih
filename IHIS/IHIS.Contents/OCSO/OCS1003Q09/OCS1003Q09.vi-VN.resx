<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnAPLResult.Text" xml:space="preserve">
    <value>Kết quả XNDT</value>
  </data>
  <data name="btnCplResult.Text" xml:space="preserve">
    <value>Tham chiếu kết quả XNDT</value>
  </data>
  <data name="btnHope_date.Text" xml:space="preserve">
    <value>Chọn đồng loạt ngày dự kiến</value>
  </data>
  <data name="btnINJResult.Text" xml:space="preserve">
    <value>Ghi chép quá trình tiêm</value>
  </data>
  <data name="btnNalsu.Text" xml:space="preserve">
    <value>Chọn đồng loạt số ngày</value>
  </data>
  <data name="btnPFEResult.Text" xml:space="preserve">
    <value>KQ Tham chiếu</value>
  </data>
  <data name="btnProcessD0.Text" xml:space="preserve">
    <value>Áp dụng[Thông thường]</value>
  </data>
  <data name="btnProcessD4.Text" xml:space="preserve">
    <value>Áp dụng[Lâm thời]</value>
  </data>
  <data name="btnProcessD7.Text" xml:space="preserve">
    <value>Áp dụng[Khi ra viện]</value>
  </data>
  <data name="btnXRTResult.Text" xml:space="preserve">
    <value>Tham chiếu CDHA</value>
  </data>
  <data name="cbxGeneric_YN.Text" xml:space="preserve">
    <value>Hiển thị tên thông thường</value>
  </data>
  <data name="chkAll.Text" xml:space="preserve">
    <value>      Khoa khám toàn bộ</value>
  </data>
  <data name="chkIsNewGroup.Text" xml:space="preserve">
    <value>    Có/không thể tạo MS nhóm YC mới</value>
  </data>
  <data name="gbxHopeDate.Text" xml:space="preserve">
    <value>Chọn đồng loạt ngày dự kiến</value>
  </data>
  <data name="gbxNalsu.Text" xml:space="preserve">
    <value>Chọn đồng loạt số ngày</value>
  </data>
  <data name="grdOCS1003.QuerySQL" xml:space="preserve">
    <value>SELECT F.CODE_NAME                                                INPUT_GUBUN_NAME        ,
       A.GROUP_SER                                                GROUP_SER               ,
       NVL(C.CODE_NAME, 'Etc')                                    ORDER_GUBUN_NAME        ,
       A.HANGMOG_CODE                                             HANGMOG_CODE            ,
--       DECODE(A.GENERAL_DISP_YN, 'Y', I.GENERIC_NAME 
--                               , 'N', B.HANGMOG_NAME)             HANGMOG_NAME,
       DECODE(:f_generic_yn, 'N', B.HANGMOG_NAME,
                                  DECODE(A.GENERAL_DISP_YN, 'Y', I.GENERIC_NAME
					 		       , B.HANGMOG_NAME)) HANGMOG_NAME,
--       ( CASE WHEN B.ORDER_GUBUN IN ('A', 'B', 'C', 'D')
--              THEN NVL(FN_DRG_SPEC_NAME(B.HANGMOG_CODE), '')||B.HANGMOG_NAME
--              ELSE B.HANGMOG_NAME  END )                          HANGMOG_NAME            ,
       A.SPECIMEN_CODE                                            SPECIMEN_CODE           ,
       D.SPECIMEN_NAME                                            SPECIMEN_NAME           ,
       A.SURYANG                                                  SURYANG                 ,
       A.ORD_DANUI                                                ORD_DANUI               ,
       FN_OCS_LOAD_CODE_NAME('ORD_DANUI', A.ORD_DANUI)            ORD_DANUI_NAME          ,
       A.DV_TIME                                                  DV_TIME                 ,
       A.DV                                                       DV                      ,
       A.NALSU                                                    NALSU                   ,
       A.JUSA						          JUSA                    ,
       DECODE(B.ORDER_GUBUN, 'A', FN_OCS_LOAD_CODE_NAME('JUSA', A.JUSA), 
                             'B', FN_OCS_LOAD_CODE_NAME('JUSA', A.JUSA),
                                  NULL)                           JUSA_NAME               ,
       A.BOGYONG_CODE                                             BOGYONG_CODE            ,
       FN_OCS_BOGYONG_COL_NAME(B.ORDER_GUBUN, A.BOGYONG_CODE, A.JUSA_SPD_GUBUN)
                                                                  BOGYONG_NAME            ,
       A.JUSA_SPD_GUBUN                                           JUSA_SPD_GUBUN          ,
       A.HUBAL_CHANGE_YN                                          HUBAL_CHANGE_YN         ,
       A.PHARMACY                                                 PHARMACY                ,
       A.DRG_PACK_YN                                              DRG_PACK_YN             ,
       A.POWDER_YN                                                POWDER_YN               ,
       NVL(A.WONYOI_ORDER_YN       , 'N')                         WONYOI_ORDER_YN         ,
       NVL(A.DANGIL_GUMSA_ORDER_YN , 'N')                         DANGIL_GUMSA_ORDER_YN   ,
       NVL(A.DANGIL_GUMSA_RESULT_YN, 'N')                         DANGIL_GUMSA_RESULT_YN  ,
       NVL(A.EMERGENCY             , 'N')                         EMERGENCY               ,
       A.PAY                                                      PAY                     ,
       A.ANTI_CANCER_YN                                           ANTI_CANCER_YN          ,
       A.MUHYO                                                    MUHYO                   ,
       A.PORTABLE_YN                                              PORTABLE_YN             ,
       A.OCS_FLAG                                                 OCS_FLAG                ,
       A.ORDER_GUBUN                                              ORDER_GUBUN             ,
       A.INPUT_TAB                                                INPUT_TAB               ,
       A.INPUT_GUBUN                                              INPUT_GUBUN             ,
       A.AFTER_ACT_YN                                             AFTER_ACT_YN            ,
       A.JUNDAL_TABLE                                             JUNDAL_TABLE            ,
       A.JUNDAL_PART                                              JUNDAL_PART             ,
       A.MOVE_PART                                                MOVE_PART               ,
       A.BUNHO                                                    BUNHO                   ,
       A.ORDER_DATE                                               ORDER_DATE              ,
       A.GWA                                                      GWA                     ,
       A.DOCTOR                                                   DOCTOR                  ,
       A.NAEWON_TYPE                                              NAEWON_TYPE             ,
       A.FKOUT1001                                                PK_ORDER                ,
       A.SEQ                                                      SEQ                     ,
       A.PKOCS1003                                                PKOCS1003               ,
       A.SUB_SUSUL                                                SUB_SUSUL               ,
       A.SUTAK_YN                                                 SUTAK_YN                ,
       A.AMT                                                      AMT                     ,
       DECODE(A.DV_1, 0, NULL, A.DV_1)                            DV_1                    ,
       DECODE(A.DV_2, 0, NULL, A.DV_2)                            DV_2                    ,
       DECODE(A.DV_3, 0, NULL, A.DV_3)                            DV_3                    ,
       DECODE(A.DV_4, 0, NULL, A.DV_4)                            DV_4                    ,
       ''                                                         HOPE_DATE               ,
       A.ORDER_REMARK                                             ORDER_REMARK            ,
       A.MIX_GROUP                                                MIX_GROUP               ,
       A.HOME_CARE_YN                                             HOME_CARE_YN            ,
       NVL(A.REGULAR_YN, 'N')                                     REGULAR_YN              ,
       A.GONGBI_CODE                                              GONGBI_CODE             ,
       FN_BAS_LOAD_GONGBI_NAME(A.GONGBI_CODE, A.ORDER_DATE)       GONGBI_NAME             ,
       DECODE( B.ORDER_GUBUN, 'C', FN_DRG_LOAD_DONBOK_YN(A.BOGYONG_CODE), 'N' )
                                                                  DONBOK_YN               ,
       FN_OCS_LOAD_DV_NAME(A.DV, A.DV_1, A.DV_2, A.DV_3, A.DV_4, A.DV_5, A.DV_6, A.DV_7, A.DV_8)  DV_NAME                 ,
       B.SLIP_CODE                                                SLIP_CODE               ,
       B.GROUP_YN                                                 GROUP_YN                ,
       B.SG_CODE                                                  SG_CODE                 ,
       SUBSTR(B.ORDER_GUBUN,1,1)                                  ORDER_GUBUN_BAS         ,
       B.INPUT_CONTROL                                            INPUT_CONTROL           ,
       NVL(B.SUGA_YN,'N')                                         SUGA_YN                 ,
       DECODE(NVL(B.EMERGENCY,'Z'),'Y','N','N','N','Y')           EMERGENCY_CHECK         ,
       B.LIMIT_SURYANG                                            LIMIT_SURYANG           ,
       NVL(B.SPECIMEN_YN,'N')                                     SPECIMEN_YN             ,
       NVL(B.JAERYO_YN,'N')                                       JAERYO_YN               ,
       DECODE(B.ORD_DANUI, NULL, 'N', 'Y')                        ORD_DANUI_CHECK         ,
       B.ORD_DANUI                                                ORD_DANUI_BAS           ,
       A.JUNDAL_TABLE                                             JUNDAL_TABLE_OUT        ,
       A.JUNDAL_PART                                              JUNDAL_PART_OUT         ,
       A.MOVE_PART                                                MOVE_PART_OUT           ,
       B.JUNDAL_TABLE_INP                                         JUNDAL_TABLE_INP        ,
       B.JUNDAL_PART_INP                                          JUNDAL_PART_INP         ,
       B.MOVE_PART                                                MOVE_PART_INP           ,
       ( CASE WHEN FN_OCS_BULYONG_CHECK_OUT(B.HANGMOG_CODE, SYSDATE) &lt;&gt; 'Y'
              THEN 'N'
              WHEN FN_OCS_BULYONG_CHECK_OUT   (B.HANGMOG_CODE, SYSDATE) = 'Y'
               AND FN_OCS_CONVERT_HANGMOG_CODE('2', '1', A.HANGMOG_CODE, A.BUNHO, TRUNC(SYSDATE)) &lt;&gt; A.HANGMOG_CODE
              THEN 'Z'
              ELSE 'Y' END )                                      BULYONG_CHECK           ,

--       FN_OCS_BULYONG_CHECK_OUT_CVT(A.HANGMOG_CODE, B.HANGMOG_CODE, A.BUNHO) BULYONG_CHECK,

       FN_OCS_LOAD_WONYOI_CHECK(B.HANGMOG_CODE)                   WONYOI_ORDER_CR_YN      ,
       B.WONYOI_ORDER_YN                                          DEFAULT_WONYOI_ORDER_YN ,
       NVL(B.NDAY_YN,'N')                                         NDAY_YN                 ,
       NVL(B.MUHYO_YN,'N')                                        MUHYO_YN                ,
       A.TEL_YN                                                   TEL_YN                  ,
       FN_DRG_LOAD_COMMENT(A.HANGMOG_CODE)                        DRG_INFO                ,
       ''                                                         DRG_BUNRYU              ,
       CASE WHEN A.BOM_SOURCE_KEY IS NULL THEN 'N' ELSE 'Y' END  CHILD_YN,
       A.BOM_SOURCE_KEY                                          BOM_SOURCE_KEY,
       A.BOM_OCCUR_YN                                            BOM_OCCUR_YN,
       A.PKOCS1003                                               ORG_KEY,
       A.BOM_SOURCE_KEY                                          PARENT_KEY,
       H.BUN_CODE                                                BUN_CODE  ,
       TO_CHAR(SUBSTR(LPAD(A.GROUP_SER, 4, 0), 0, 2)) || TO_CHAR(DECODE(A.BOM_SOURCE_KEY, NULL, A.PKOCS1003, A.BOM_SOURCE_KEY))
       || TO_CHAR(A.PKOCS1003)                                   CONT_KEY,
	A.FKOUT1001, --insert by jc
       NVL(B.WONNAE_DRG_YN, 'N') WONNAE_DRG_YN, -- insert by jc (院内採用薬ROW)色を塗るため
       A.DC_YN                                                   DC_YN,
       A.RESULT_DATE                                             RESULT_DATE,                                             
       DECODE(A.NURSE_CONFIRM_DATE, NULL, 'N', 'Y')              CONFIRM_CHECK,
       DECODE(A.SUNAB_DATE, NULL, 'N','Y')                       SUNAB_CHECK,
       DECODE(A.DV_5, 0, NULL, A.DV_5)				 DV_5,
       DECODE(A.DV_6, 0, NULL, A.DV_6)				 DV_6,
       DECODE(A.DV_7, 0, NULL, A.DV_7)				 DV_7,
       DECODE(A.DV_8, 0, NULL, A.DV_8)				 DV_8,
       NVL(A.GENERAL_DISP_YN, 'N') GENERAL_DISP_YN,
       I.GENERIC_NAME,
       'N',
       A.BOGYONG_CODE_SUB,
       CASE WHEN (SUBSTR(A.ORDER_GUBUN, 2) = 'A' OR SUBSTR(A.ORDER_GUBUN, 2) = 'B' OR SUBSTR(A.ORDER_GUBUN, 2) = 'D')
            THEN FN_CHT_LOAD_CHT0117_NAME ( A.BOGYONG_CODE_SUB )
            ELSE FN_DRG_LOAD_BOGYONG_NAME ( A.BOGYONG_CODE_SUB )  
       END                                                  BOGYONG_NAME_SUB,
       TO_CHAR(A.HOPE_DATE, 'YYYY/MM/DD')                   ORI_HOPE_DATE,
       NVL(J.IO_GUBUN, 'A')                                 IO_YN,
       'N'                                                  BROUGHT_DRG_YN
  FROM 
        DRG0120 J,
	VW_OCS_GENERIC I,
	( SELECT X.SG_CODE
              , X.SG_NAME
              , X.BUN_CODE
              , X.BULYONG_YMD
              , X.HOSP_CODE
           FROM BAS0310 X
          WHERE X.HOSP_CODE = :f_hosp_code
            AND X.SG_YMD = ( SELECT MAX(Z.SG_YMD)
                               FROM BAS0310 Z
                              WHERE Z.HOSP_CODE = X.HOSP_CODE
                                AND Z.SG_CODE = X.SG_CODE ) ) H,
       OCS0140 G,
       OCS0132 F,
       OCS0116 D,
       OCS0132 C,
       OCS0103 B,
       OCS1003 A

 WHERE A.HOSP_CODE    = :f_hosp_code
   AND A.FKOUT1001    = :f_pk_order
   AND A.INPUT_TAB LIKE :f_input_tab
   AND (
         (     :f_input_gubun = 'D%'
           AND A.INPUT_GUBUN LIKE 'D%' )
         OR
         ( :f_input_gubun = 'NR'
           AND (   A.INPUT_GUBUN LIKE 'D%'
                OR A.INPUT_GUBUN = 'NR' ) )
         OR
         ( :f_input_gubun NOT IN ('D%', 'NR')
           AND (   A.INPUT_GUBUN LIKE 'D%'
                OR A.INPUT_GUBUN = :f_input_gubun ) )
       )
--   AND (   (:f_input_gubun = 'D0')
--        OR (:f_input_gubun IN ('D4', 'D7') AND SUBSTR(A.ORDER_GUBUN, 2, 1) IN ('B', 'C', 'D'))
--       )
   AND NVL(A.TEL_YN     , 'N') LIKE :f_tel_yn
   AND NVL(A.DISPLAY_YN , 'Y') = 'Y'
   AND NVL(A.DC_YN,'N')   = 'N'
   AND A.NALSU           &gt;= 0
   AND B.HOSP_CODE        = A.HOSP_CODE
   AND B.HANGMOG_CODE     = A.HANGMOG_CODE
   AND A.ORDER_DATE BETWEEN B.START_DATE AND B.END_DATE
   AND C.HOSP_CODE(+)     = A.HOSP_CODE
   AND C.CODE     (+)     = A.ORDER_GUBUN
   AND C.CODE_TYPE(+)     = 'ORDER_GUBUN'
   AND D.HOSP_CODE(+)     = A.HOSP_CODE
   AND D.SPECIMEN_CODE(+) = A.SPECIMEN_CODE
   AND F.HOSP_CODE(+)     = A.HOSP_CODE
   AND F.CODE     (+)     = A.INPUT_GUBUN
   AND F.CODE_TYPE(+)     = 'INPUT_GUBUN'
   AND G.HOSP_CODE        = A.HOSP_CODE
   AND G.ORDER_GUBUN      = A.ORDER_GUBUN
   AND G.INPUT_TAB        = A.INPUT_TAB
   AND H.HOSP_CODE(+)     = B.HOSP_CODE
   AND H.SG_CODE (+)      = B.SG_CODE
--
   AND I.HOSP_CODE        (+) = B.HOSP_CODE
--   AND I.GENERIC_CODE     (+) = SUBSTR(B.YAK_KIJUN_CODE, 1, 9)
   AND I.HANGMOG_CODE     (+) = B.HANGMOG_CODE
   AND J.HOSP_CODE    (+)= A.HOSP_CODE
   AND J.BOGYONG_CODE (+)= A.BOGYONG_CODE
UNION ALL
SELECT F.CODE_NAME                                                INPUT_GUBUN_NAME        ,
       A.GROUP_SER                                                GROUP_SER               ,
       NVL(C.CODE_NAME, 'Etc')                                    ORDER_GUBUN_NAME        ,
       A.HANGMOG_CODE                                             HANGMOG_CODE            ,
       ( CASE WHEN B.ORDER_GUBUN IN ('A', 'B', 'C', 'D')
              THEN NVL(FN_DRG_SPEC_NAME(B.HANGMOG_CODE), '')||B.HANGMOG_NAME
              ELSE B.HANGMOG_NAME  END )                          HANGMOG_NAME            ,
       A.SPECIMEN_CODE                                            SPECIMEN_CODE           ,
       D.SPECIMEN_NAME                                            SPECIMEN_NAME           ,
       A.SURYANG                                                  SURYANG                 ,
       A.ORD_DANUI                                                ORD_DANUI               ,
       FN_OCS_LOAD_CODE_NAME('ORD_DANUI', A.ORD_DANUI)            ORD_DANUI_NAME          ,
       A.DV_TIME                                                  DV_TIME                 ,
       A.DV                                                       DV                      ,
       A.NALSU                                                    NALSU                   ,
       A.JUSA                                                     JUSA                    ,
       FN_OCS_LOAD_CODE_NAME('JUSA', A.JUSA)                      JUSA_NAME               ,
       A.BOGYONG_CODE                                             BOGYONG_CODE            ,
       FN_OCS_BOGYONG_COL_NAME(B.ORDER_GUBUN, A.BOGYONG_CODE, A.JUSA_SPD_GUBUN)
                                                                  BOGYONG_NAME            ,
       A.JUSA_SPD_GUBUN                                           JUSA_SPD_GUBUN          ,
       A.HUBAL_CHANGE_YN                                          HUBAL_CHANGE_YN         ,
       A.PHARMACY                                                 PHARMACY                ,
       A.DRG_PACK_YN                                              DRG_PACK_YN             ,
       A.POWDER_YN                                                POWDER_YN               ,
       A.WONYOI_ORDER_YN                                          WONYOI_ORDER_YN         ,
       'N'                                                        DANGIL_GUMSA_ORDER_YN   ,
       'N'                                                        DANGIL_GUMSA_RESULT_YN  ,
       NVL(A.EMERGENCY  , 'N')                                    EMERGENCY               ,
       A.PAY                                                      PAY                     ,
       A.ANTI_CANCER_YN                                           ANTI_CANCER_YN          ,
       A.MUHYO                                                    MUHYO                   ,
       A.PORTABLE_YN                                              PORTABLE_YN             ,
       A.OCS_FLAG                                                 OCS_FLAG                ,
       A.ORDER_GUBUN                                              ORDER_GUBUN             ,
       A.INPUT_TAB                                                INPUT_TAB               ,
       A.INPUT_GUBUN                                              INPUT_GUBUN             ,
       'N'                                                        AFTER_ACT_YN            ,
       A.JUNDAL_TABLE                                             JUNDAL_TABLE            ,
       A.JUNDAL_PART                                              JUNDAL_PART             ,
       NULL                                                       MOVE_PART               ,
       A.BUNHO                                                    BUNHO                   ,
       A.ORDER_DATE                                               NAEWON_DATE             ,
       A.INPUT_GWA                                                GWA                     ,
       A.INPUT_DOCTOR                                             DOCTOR                  ,
       '0'                                                        NAEWON_TYPE             ,
       A.FKINP1001                                                PK_ORDER                ,
       A.SEQ                                                      SEQ                     ,
       A.PKOCS2003                                                PKOCS1003               ,
       A.SUB_SUSUL                                                SUB_SUSUL               ,
       NULL                                                       SUTAK_YN                ,
       A.AMT                                                      AMT                     ,
       DECODE(A.DV_1, 0, NULL, A.DV_1)                            DV_1                    ,
       DECODE(A.DV_2, 0, NULL, A.DV_2)                            DV_2                    ,
       DECODE(A.DV_3, 0, NULL, A.DV_3)                            DV_3                    ,
       DECODE(A.DV_4, 0, NULL, A.DV_4)                            DV_4                    ,
       ''                                                         HOPE_DATE               ,
       A.ORDER_REMARK                                             ORDER_REMARK            ,
       A.MIX_GROUP                                                MIX_GROUP               ,
       'N'                                                        HOME_CARE_YN            ,
       NVL(A.REGULAR_YN, 'N')                                     REGULAR_YN              ,
       A.GONGBI_CODE                                              GONGBI_CODE             ,
       FN_BAS_LOAD_GONGBI_NAME(A.GONGBI_CODE, A.ORDER_DATE)       GONGBI_NAME             ,
       DECODE( B.ORDER_GUBUN, 'C', FN_DRG_LOAD_DONBOK_YN(A.BOGYONG_CODE), 'N' )
                                                                  DONBOK_YN               ,
       FN_OCS_LOAD_DV_NAME(A.DV, A.DV_1, A.DV_2, A.DV_3, A.DV_4, A.DV_5, A.DV_6, A.DV_7, A.DV_8)  DV_NAME                 ,
       B.SLIP_CODE                                                SLIP_CODE               ,
       B.GROUP_YN                                                 GROUP_YN                ,
       B.SG_CODE                                                  SG_CODE                 ,
       B.ORDER_GUBUN                                              ORDER_GUBUN_BAS         ,
       B.INPUT_CONTROL                                            INPUT_CONTROL           ,
       NVL(B.SUGA_YN,'N')                                         SUGA_YN                 ,
       DECODE(NVL(B.EMERGENCY,'Z'),'Y','N','N','N','Y')           EMERGENCY_CHECK         ,
       B.LIMIT_SURYANG                                            LIMIT_SURYANG           ,
       NVL(B.SPECIMEN_YN,'N')                                     SPECIMEN_YN             ,
       NVL(B.JAERYO_YN,'N')                                       JAERYO_YN               ,
       DECODE(B.ORD_DANUI, NULL, 'N', 'Y')                        ORD_DANUI_CHECK         ,
       B.ORD_DANUI                                                ORD_DANUI_BAS           ,
       B.JUNDAL_TABLE_OUT                                         JUNDAL_TABLE_OUT        ,
       B.JUNDAL_PART_OUT                                          JUNDAL_PART_OUT         ,
       B.MOVE_PART                                                MOVE_PART_OUT           ,
       A.JUNDAL_TABLE                                             JUNDAL_TABLE_INP        ,
       A.JUNDAL_PART                                              JUNDAL_PART_INP         ,
       A.MOVE_PART                                                MOVE_PART_INP           ,
       FN_OCS_BULYONG_CHECK_OUT(B.HANGMOG_CODE, SYSDATE)          BULYONG_CHECK           ,
       FN_OCS_LOAD_WONYOI_CHECK(B.HANGMOG_CODE)                   WONYOI_ORDER_CR_YN      ,
       B.WONYOI_ORDER_YN                                          DEFAULT_WONYOI_ORDER_YN ,
       NVL(B.NDAY_YN,'N')                                         NDAY_YN                 ,
       NVL(B.MUHYO_YN,'N')                                        MUHYO_YN                ,
       A.TEL_YN                                                   TEL_YN                  ,
       FN_DRG_LOAD_COMMENT(A.HANGMOG_CODE)                        DRG_INFO                ,
       ''                                                         DRG_BUNRYU              ,
       CASE WHEN A.BOM_SOURCE_KEY IS NULL THEN 'N' ELSE 'Y' END  CHILD_YN,
       A.BOM_SOURCE_KEY                                          BOM_SOURCE_KEY,
       A.BOM_OCCUR_YN                                            BOM_OCCUR_YN,
       A.PKOCS2003                                               ORG_KEY,
       A.BOM_SOURCE_KEY                                          PARENT_KEY,
       H.BUN_CODE                                                BUN_CODE  ,
       TO_CHAR(SUBSTR(LPAD(A.GROUP_SER, 4, 0), 0, 2)) || TO_CHAR(DECODE(A.BOM_SOURCE_KEY, NULL, A.PKOCS2003, A.BOM_SOURCE_KEY))
       || TO_CHAR(A.PKOCS2003)                                   CONT_KEY,
       A.FKINP1001, --insert by jc
       NVL(B.WONNAE_DRG_YN, 'N') WONNAE_DRG_YN, -- insert by jc (院内採用薬ROW)色を塗るため
       A.DC_YN                                                   DC_YN,
       A.RESULT_DATE                                             RESULT_DATE,                                             
       DECODE(A.NURSE_CONFIRM_DATE, NULL, 'N', 'Y')              CONFIRM_CHECK,
       DECODE(A.SUNAB_DATE, NULL, 'N','Y')                       SUNAB_CHECK,
       DECODE(A.DV_5, 0, NULL, A.DV_5)				 DV_5,
       DECODE(A.DV_6, 0, NULL, A.DV_6)				 DV_6,
       DECODE(A.DV_7, 0, NULL, A.DV_7)				 DV_7,
       DECODE(A.DV_8, 0, NULL, A.DV_8)				 DV_8,
       'N',
       B.HANGMOG_NAME,
       'N',
       A.BOGYONG_CODE_SUB,
       CASE WHEN (SUBSTR(A.ORDER_GUBUN, 2) = 'A' OR SUBSTR(A.ORDER_GUBUN, 2) = 'B' OR SUBSTR(A.ORDER_GUBUN, 2) = 'D')
            THEN FN_CHT_LOAD_CHT0117_NAME ( A.BOGYONG_CODE_SUB )
            ELSE FN_DRG_LOAD_BOGYONG_NAME ( A.BOGYONG_CODE_SUB )  
       END                                                  BOGYONG_NAME_SUB,
       TO_CHAR(A.HOPE_DATE, 'YYYY/MM/DD')                   ORI_HOPE_DATE,
       NVL(J.IO_GUBUN, 'A')                                 IO_YN,
       NVL(A.BROUGHT_DRG_YN, 'N')                           BROUGHT_DRG_YN
  FROM 
       DRG0120 J,
       ( SELECT X.SG_CODE
              , X.SG_NAME
              , X.BUN_CODE
              , X.BULYONG_YMD
              , X.HOSP_CODE
           FROM BAS0310 X
          WHERE X.HOSP_CODE = :f_hosp_code
            AND X.SG_YMD = ( SELECT MAX(Z.SG_YMD)
                               FROM BAS0310 Z
                              WHERE Z.HOSP_CODE = X.HOSP_CODE
                                AND Z.SG_CODE = X.SG_CODE ) ) H,
       OCS0140 G,
       OCS0132 F,
       OCS0116 D,
       OCS0132 C,
       OCS0103 B,
       OCS2003 A
 WHERE A.HOSP_CODE        = :f_hosp_code
   AND A.BUNHO            = :f_bunho
   AND A.FKINP1001        = :f_jubsu_no
   AND DECODE(:f_kijun, 'H', NVL(A.HOPE_DATE, NVL(A.RESER_DATE, A.ORDER_DATE)), A.ORDER_DATE)  = :f_naewon_date
   AND A.INPUT_GWA        = :f_gwa
   AND A.INPUT_DOCTOR     = :f_doctor
   AND A.INPUT_TAB     LIKE :f_input_tab
   AND (
         (     :f_input_gubun LIKE 'D%'
           AND A.INPUT_GUBUN LIKE 'D%')
         OR
         ( :f_input_gubun = 'NR'
           AND (   A.INPUT_GUBUN LIKE 'D%'
                OR A.INPUT_GUBUN = 'NR' ) )
         OR
         ( :f_input_gubun NOT IN ('D%', 'NR')
           AND (   A.INPUT_GUBUN LIKE 'D%'
                OR A.INPUT_GUBUN = :f_input_gubun ) )
       )
--   AND (   (:f_input_gubun = 'D0')
--        OR (:f_input_gubun IN ('D4', 'D7') AND SUBSTR(A.ORDER_GUBUN, 2, 1) IN ('B', 'C', 'D'))
--       )
   AND NVL(A.DISPLAY_YN , 'Y') = 'Y'
   AND NVL(A.DC_YN,'N')   = 'N'
   AND A.NALSU           &gt;= 0
   AND B.HOSP_CODE        = A.HOSP_CODE
   AND B.HANGMOG_CODE     = A.HANGMOG_CODE
   AND A.ORDER_DATE BETWEEN B.START_DATE AND B.END_DATE
   AND C.HOSP_CODE(+)     = A.HOSP_CODE
   AND C.CODE     (+)     = A.ORDER_GUBUN
   AND C.CODE_TYPE(+)     = 'ORDER_GUBUN'
   AND F.HOSP_CODE(+)     = A.HOSP_CODE
   AND F.CODE     (+)     = A.INPUT_GUBUN
   AND F.CODE_TYPE(+)     = 'INPUT_GUBUN'
   AND D.HOSP_CODE(+)     = A.HOSP_CODE
   AND D.SPECIMEN_CODE(+) = A.SPECIMEN_CODE
   AND G.HOSP_CODE        = A.HOSP_CODE
   AND G.ORDER_GUBUN      = A.ORDER_GUBUN
   AND G.INPUT_TAB        = A.INPUT_TAB
   AND H.HOSP_CODE(+)     = B.HOSP_CODE
   AND H.SG_CODE (+)      = B.SG_CODE
   AND J.HOSP_CODE    (+)= A.HOSP_CODE
   AND J.BOGYONG_CODE (+)= A.BOGYONG_CODE
 ORDER BY CONT_KEY</value>
  </data>
  <data name="grdOUT1001.QuerySQL" xml:space="preserve">
    <value>SELECT DECODE(:f_kijun, 'H', NVL(B.HOPE_DATE, NVL(B.RESER_DATE, B.ORDER_DATE)), B.ORDER_DATE)   ORDER_DATE ,    -- ORIGINAL
       A.GWA                             							GWA,
       FN_BAS_LOAD_GWA_NAME( A.GWA, A.NAEWON_DATE) 	                                        GWA_NAME,
       FN_BAS_LOAD_DOCTOR_NAME(A.DOCTOR, A.NAEWON_DATE)                                         DOCTOR_NAME,
       0                                 							NALSU,
       A.BUNHO                           							BUNHO,
       A.DOCTOR                          							DOCTOR,
       FN_BAS_LOAD_GUBUN_NAME(A.GUBUN, A.NAEWON_DATE)                                           GUBUN_NAME ,
       FN_BAS_LOAD_CODE_NAME ('CHOJAE', A.CHOJAE)	                                        CHOJAE_NAME,
       A.NAEWON_TYPE                     							NAEWON_TYPE,
       A.JUBSU_NO                        							JUBSU_NO   ,
       A.PKOUT1001                       							PK_ORDER,
       TRIM(RPAD(:f_input_gubun,10))     							INPUT_GUBUN,
       :f_tel_yn                         							TEL_YN,
       'N'                               							TOIWON_DRG,
       :f_input_tab                      							INPUT_TAB,
       :f_io_gubun                       							IO_GUBUN,
       DECODE(:f_selected_input_tab, '%', 'Y'
                                        , FN_OCS_DO_ORDER_COUNT(  :f_hosp_code, 'O', :f_bunho, A.PKOUT1001, A.DOCTOR, :f_selected_input_tab
                                                                , :f_input_gubun, :f_kijun, A.NAEWON_DATE ))  OCS_CNT
  FROM OUT1001 A
     , OCS1003 B
 WHERE :f_io_gubun    = 'O'
   AND A.HOSP_CODE    = :f_hosp_code   
   AND A.BUNHO        = :f_bunho
   AND A.NAEWON_DATE  &lt;= :f_naewon_date
   AND A.GWA         LIKE :f_gwa
   AND EXISTS( SELECT 'X'
                 FROM OCS0140 C,
                      OCS1003 B
                WHERE B.BUNHO        = A.BUNHO
                  AND B.FKOUT1001    = A.PKOUT1001
                  AND B.HOSP_CODE    = A.HOSP_CODE
                  AND NVL(B.TEL_YN     , 'N') LIKE :f_tel_yn
                  AND NVL(B.DISPLAY_YN , 'Y') = 'Y'
                  AND NVL(B.DC_YN,'N')   = 'N'
                  AND B.NALSU           &gt;= 0
                  AND B.INPUT_TAB       LIKE :f_input_tab
                  AND (
                        (     :f_input_gubun LIKE  'D%'
                          AND B.INPUT_GUBUN LIKE 'D%' )
                        OR
                        ( :f_input_gubun = 'NR'
                          AND (   B.INPUT_GUBUN LIKE 'D%'
                               OR B.INPUT_GUBUN = 'NR' ) )
		        OR
                        ( :f_input_gubun NOT IN ('D%', 'NR')
                          AND (   B.INPUT_GUBUN LIKE 'D%'
                               OR B.INPUT_GUBUN = :f_input_gubun ) )
                      )
                  AND C.ORDER_GUBUN     = B.ORDER_GUBUN
                  AND C.HOSP_CODE       = B.HOSP_CODE
                  AND C.INPUT_TAB       = B.INPUT_TAB
                  AND ROWNUM = 1 )
    AND B.HOSP_CODE = A.HOSP_CODE
    AND B.FKOUT1001 = A.PKOUT1001
 GROUP BY 
       DECODE(:f_kijun, 'H', NVL(B.HOPE_DATE, NVL(B.RESER_DATE, B.ORDER_DATE)), B.ORDER_DATE)   ,
       A.GWA                             							,
       FN_BAS_LOAD_GWA_NAME( A.GWA, A.NAEWON_DATE) 	                                        ,
       FN_BAS_LOAD_DOCTOR_NAME(A.DOCTOR, A.NAEWON_DATE)                                         ,
       0                                 							,
       A.BUNHO                           							,
       A.DOCTOR                          							,
       FN_BAS_LOAD_GUBUN_NAME(A.GUBUN, A.NAEWON_DATE)                                           ,
       FN_BAS_LOAD_CODE_NAME ('CHOJAE', A.CHOJAE)	                                        ,
       A.NAEWON_TYPE                     							,
       A.JUBSU_NO                        							,
       A.PKOUT1001                       							,
       TRIM(RPAD(:f_input_gubun,10))     							,
       :f_tel_yn                         							,
       'N'                               							,
       :f_input_tab                      							,
       :f_io_gubun                       							,
       DECODE(:f_selected_input_tab, '%', 'Y'
                                        , FN_OCS_DO_ORDER_COUNT(  :f_hosp_code, 'O', :f_bunho, A.PKOUT1001, A.DOCTOR, :f_selected_input_tab
                                                                , :f_input_gubun, :f_kijun, A.NAEWON_DATE ))
  UNION ALL
  SELECT DECODE(:f_kijun, 'H', NVL(A.HOPE_DATE, NVL(A.RESER_DATE, A.ORDER_DATE)), A.ORDER_DATE)      	ORDER_DATE ,
         A.INPUT_GWA                       				GWA        ,
       	 FN_BAS_LOAD_GWA_NAME( A.INPUT_GWA, A.ORDER_DATE) 		GWA_NAME,
         FN_BAS_LOAD_DOCTOR_NAME(A.INPUT_DOCTOR, A.ORDER_DATE)  	DOCTOR_NAME,
         0                                 				NALSU,
         A.BUNHO                           				BUNHO      ,
         A.INPUT_DOCTOR                    				DOCTOR     ,
         ' '                               				GUBUN_NAME ,
         ' '                               				CHOJAE_NAME,
         '0'                               				NAEWON_TYPE,
         A.FKINP1001                       				JUBSU_NO   ,
         A.FKINP1001                       				PK_ORDER   ,
         TRIM(RPAD(:f_input_gubun,10))     				INPUT_GUBUN,
         :f_tel_yn                         				TEL_YN     ,
         FN_OCS_EXISTS_TOIWON_DRG(A.BUNHO, A.FKINP1001, A.ORDER_DATE) 	TOIWON_DRG,
         :f_input_tab                      				INPUT_TAB,
         :f_io_gubun                       				IO_GUBUN,
	 DECODE(:f_selected_input_tab, '%', 'Y'
                                          , FN_OCS_DO_ORDER_COUNT(  :f_hosp_code, 'I', :f_bunho, A.FKINP1001, A.INPUT_DOCTOR, :f_selected_input_tab
                                                                  , :f_input_gubun, :f_kijun, DECODE(:f_kijun, 'H', NVL(A.HOPE_DATE, NVL(A.RESER_DATE, A.ORDER_DATE)), A.ORDER_DATE)) )  OCS_CNT
  FROM OCS0140  B,
       OCS2003  A
 WHERE :f_io_gubun            = 'I'
   AND A.HOSP_CODE            = :f_hosp_code
   AND A.IO_GUBUN             IS NULL   
   AND A.BUNHO                = :f_bunho
   AND A.ORDER_DATE           &lt;= :f_naewon_date
   AND A.INPUT_GWA            LIKE :f_gwa
   --   AND A.INPUT_TAB            = :f_input_tab
   AND (
         (     :f_input_gubun LIKE 'D%'
           AND A.INPUT_GUBUN LIKE 'D%' )
         OR
         ( :f_input_gubun = 'NR'
           AND (   A.INPUT_GUBUN LIKE 'D%'
                OR A.INPUT_GUBUN = 'NR' ) )
         OR
         ( ( :f_input_gubun NOT LIKE 'D%' AND :f_input_gubun != 'NR' )
           AND (   A.INPUT_GUBUN LIKE 'D%'
                OR A.INPUT_GUBUN = :f_input_gubun ) )
       )
   AND A.NALSU               &gt;= 0
   AND NVL(A.DISPLAY_YN ,'Y') = 'Y'
   AND NVL(A.DC_YN      ,'N') = 'N'
   AND B.ORDER_GUBUN   = A.ORDER_GUBUN
   AND B.HOSP_CODE     = A.HOSP_CODE
   AND B.INPUT_TAB     = A.INPUT_TAB

 GROUP BY DECODE(:f_kijun, 'H', NVL(A.HOPE_DATE, NVL(A.RESER_DATE, A.ORDER_DATE)), A.ORDER_DATE)
        , A.INPUT_GWA                                                 
        , FN_BAS_LOAD_GWA_NAME( A.INPUT_GWA, A.ORDER_DATE)            
        , FN_BAS_LOAD_DOCTOR_NAME(A.INPUT_DOCTOR, A.ORDER_DATE)       
        , 0                                                           
        , BUNHO                                                       
        , A.INPUT_DOCTOR                                              
        , ' '                                                         
        , ' '                                                         
        , '0'                                                         
        , A.FKINP1001                                                 
        , A.FKINP1001                                                 
        , TRIM(RPAD('',10))                                           
        , ''                                                          
        , FN_OCS_EXISTS_TOIWON_DRG(A.BUNHO, A.FKINP1001, A.ORDER_DATE)
        , ''                                                          
        , ''                                                          

/*  SELECT DISTINCT
       A.ORDER_DATE                      NAEWON_DATE,
       A.INPUT_GWA                       GWA        ,
       FN_BAS_LOAD_GWA_NAME( A.INPUT_GWA, A.ORDER_DATE)
                                         GWA_NAME,
       FN_BAS_LOAD_DOCTOR_NAME(A.INPUT_DOCTOR, A.ORDER_DATE)
                                         DOCTOR_NAME,
       0                                 NALSU,
       A.BUNHO                           BUNHO      ,
       A.INPUT_DOCTOR                    DOCTOR     ,
       ' '                               GUBUN_NAME ,
       ' '                               CHOJAE_NAME,
       '0'                               NAEWON_TYPE,
       A.FKINP1001                       JUBSU_NO   ,
       A.FKINP1001                       PK_ORDER   ,
       TRIM(RPAD(:f_input_gubun,10))     INPUT_GUBUN,
       :f_tel_yn                         TEL_YN     ,
       FN_OCS_EXISTS_TOIWON_DRG(A.BUNHO, A.FKINP1001, A.ORDER_DATE)
                                         TOIWON_DRG,
       :f_input_tab                      INPUT_TAB,
       :f_io_gubun                       IO_GUBUN
  FROM OCS0140  B,
       OCS2003  A
 WHERE :f_io_gubun            = 'I'
   AND A.HOSP_CODE            = :f_hosp_code
   AND A.IO_GUBUN             IS NULL   
   AND A.BUNHO                = :f_bunho
   AND A.ORDER_DATE           &lt;= :f_naewon_date
   AND A.INPUT_GWA            LIKE :f_gwa
   --   AND A.INPUT_TAB            = :f_input_tab
   AND (
         ( :f_input_gubun LIKE 'D%'
           AND
           A.INPUT_GUBUN LIKE 'D%' )
         OR
         ( :f_input_gubun = 'NR'
           AND
           ( A.INPUT_GUBUN LIKE 'D%'
             OR
             A.INPUT_GUBUN = 'NR' ) )
         OR
         ( ( :f_input_gubun NOT LIKE 'D%' AND :f_input_gubun != 'NR' )
           AND
           ( A.INPUT_GUBUN LIKE 'D%'
             OR
             A.INPUT_GUBUN = :f_input_gubun ) )
       )
   AND A.NALSU               &gt;= 0
   AND NVL(A.DISPLAY_YN ,'Y') = 'Y'
   AND NVL(A.DC_YN      ,'N') = 'N'
   AND B.ORDER_GUBUN   = A.ORDER_GUBUN
   AND B.HOSP_CODE     = A.HOSP_CODE
   AND B.INPUT_TAB     = A.INPUT_TAB*/

/*   AND A.ORDER_DATE    &gt;= ( SELECT NVL(MAX(C.TOIWON_DATE), :f_naewon_date) - 90
                              FROM VW_OCS_INP1001_02 C
                             WHERE C.BUNHO       = :f_bunho
                               AND C.IPWON_DATE &lt;= :f_naewon_date   
                               AND C.HOSP_CODE   = :f_hosp_code  )*/
  ORDER BY 1 DESC, 12 DESC</value>
  </data>
  <data name="grdSangInfo.QuerySQL" xml:space="preserve">
    <value>SELECT A.JU_SANG_YN        ,
       A.SANG_CODE         ,
       --inser by jc [診療科追加] 2012/05/09
　　　　FN_BAS_LOAD_GWA_NAME(A.GWA, sysdate) GWA_NAME,
       A.SER               ,
       A.PRE_MODIFIER_NAME||A.SANG_NAME||A.POST_MODIFIER_NAME
                                                DIS_SANG_NAME,
       A.SANG_START_DATE   ,
       A.SANG_END_DATE     ,
       A.SANG_END_SAYU     ,
       FN_BAS_LOAD_CODE_NAME ('SANG_END_SAYU', A.SANG_END_SAYU)
                                                SANG_END_SAYU_NAME,
       A.BUNHO             ,
       A.NAEWON_DATE       ,
       A.GWA               ,
       A.DOCTOR            ,
       A.NAEWON_TYPE       ,
       A.JUBSU_NO          ,
       ( CASE WHEN :f_io_gubun = 'I'
              THEN A.BUNHO||:f_jubsu_no||TO_CHAR( TO_DATE(:f_naewon_date, 'YYYY/MM/DD'),'YYYYMMDD')||RPAD(:f_gwa, 10)||RPAD(:f_doctor, 10)
              ELSE A.BUNHO||TO_CHAR( TO_DATE(:f_naewon_date, 'YYYY/MM/DD'),'YYYYMMDD')||:f_gwa||:f_doctor||:f_naewon_type||:f_jubsu_no END )
                                                                    PK_ORDER,
       A.SANG_NAME         ,
       A.PRE_MODIFIER1     ,
       A.PRE_MODIFIER2     ,
       A.PRE_MODIFIER3     ,
       A.PRE_MODIFIER4     ,
       A.PRE_MODIFIER5     ,
       A.PRE_MODIFIER6     ,
       A.PRE_MODIFIER7     ,
       A.PRE_MODIFIER8     ,
       A.PRE_MODIFIER9     ,
       A.PRE_MODIFIER10    ,
       A.PRE_MODIFIER_NAME ,
       A.POST_MODIFIER1    ,
       A.POST_MODIFIER2    ,
       A.POST_MODIFIER3    ,
       A.POST_MODIFIER4    ,
       A.POST_MODIFIER5    ,
       A.POST_MODIFIER6    ,
       A.POST_MODIFIER7    ,
       A.POST_MODIFIER8    ,
       A.POST_MODIFIER9    ,
       A.POST_MODIFIER10   ,
       A.POST_MODIFIER_NAME,
       A.SANG_JINDAN_DATE,
--       DECODE(A.SANG_END_DATE, NULL, 'N', 'Y')               END_YN
       ( CASE WHEN A.SANG_END_DATE IS NULL THEN '0' ELSE '1' END )||
         TO_CHAR(A.SANG_START_DATE, 'YYYYMMDD')||LTRIM(TO_CHAR(A.SER, '0000000000')) ORDER_BY_KEY
  FROM OUTSANG A
 WHERE A.HOSP_CODE   = :f_hosp_code
   AND A.BUNHO       = :f_bunho
--   AND A.GWA        IN (:f_gwa,'%')
   AND A.IO_GUBUN    = :f_io_gubun
   AND A.SANG_START_DATE                                    &lt;= :f_naewon_date
   AND NVL(A.SANG_END_DATE, TO_DATE('99991231','YYYYMMDD')) &gt;= :f_naewon_date
   AND A.DATA_GUBUN != 'D'
 ORDER BY ORDER_BY_KEY</value>
  </data>
  <data name="lblKijun.Text" xml:space="preserve">
    <value>Tiêu chuẩn tham chiếu</value>
  </data>
  <data name="rbtIn.Text" xml:space="preserve">
    <value>Nội trú</value>
  </data>
  <data name="rbtOut.Text" xml:space="preserve">
    <value>Ngoại trú</value>
  </data>
  <data name="tabPage1.Title" xml:space="preserve">
    <value>Toàn bộ</value>
  </data>
  <data name="tabPage2.Title" xml:space="preserve">
    <value>Thuốc</value>
  </data>
  <data name="tabPage3.Title" xml:space="preserve">
    <value>Tiêm</value>
  </data>
  <data name="tabPage4.Title" xml:space="preserve">
    <value>Xét nghiệm</value>
  </data>
  <data name="tabPage5.Title" xml:space="preserve">
    <value>Khác</value>
  </data>
  <data name="xComboItem1.DisplayItem" xml:space="preserve">
    <value>Tìm kiếm theo tiêu chuẩn ngày yêu cầu đã chọn.</value>
  </data>
  <data name="xComboItem2.DisplayItem" xml:space="preserve">
    <value>Tìm kiếm theo tiêu chuẩn ngày dự kiến thực hiện.</value>
  </data>
  <data name="xComboItem3.DisplayItem" xml:space="preserve">
    <value>Đợi</value>
  </data>
  <data name="xComboItem4.DisplayItem" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="xComboItem5.DisplayItem" xml:space="preserve">
    <value>Thường</value>
  </data>
  <data name="xComboItem6.DisplayItem" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="xComboItem7.DisplayItem" xml:space="preserve">
    <value>Dự kiến</value>
  </data>
  <data name="xComboItem8.DisplayItem" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="xEditGridCell1.HeaderText" xml:space="preserve">
    <value>Ngày YC</value>
  </data>
  <data name="xEditGridCell10.HeaderText" xml:space="preserve">
    <value>bun_code</value>
  </data>
  <data name="xEditGridCell100.HeaderText" xml:space="preserve">
    <value>Ngày KT</value>
  </data>
  <data name="xEditGridCell101.HeaderText" xml:space="preserve">
    <value>Lý do KT</value>
  </data>
  <data name="xEditGridCell102.HeaderText" xml:space="preserve">
    <value>PLYC</value>
  </data>
  <data name="xEditGridCell103.HeaderText" xml:space="preserve">
    <value>pre_modifier1</value>
  </data>
  <data name="xEditGridCell104.HeaderText" xml:space="preserve">
    <value>pre_modifier2</value>
  </data>
  <data name="xEditGridCell105.HeaderText" xml:space="preserve">
    <value>pre_modifier3</value>
  </data>
  <data name="xEditGridCell106.HeaderText" xml:space="preserve">
    <value>pre_modifier4</value>
  </data>
  <data name="xEditGridCell107.HeaderText" xml:space="preserve">
    <value>pre_modifier5</value>
  </data>
  <data name="xEditGridCell108.HeaderText" xml:space="preserve">
    <value>pre_modifier6</value>
  </data>
  <data name="xEditGridCell109.HeaderText" xml:space="preserve">
    <value>pre_modifier7</value>
  </data>
  <data name="xEditGridCell110.HeaderText" xml:space="preserve">
    <value>pre_modifier8</value>
  </data>
  <data name="xEditGridCell111.HeaderText" xml:space="preserve">
    <value>pre_modifier9</value>
  </data>
  <data name="xEditGridCell112.HeaderText" xml:space="preserve">
    <value>pre_modifier10</value>
  </data>
  <data name="xEditGridCell113.HeaderText" xml:space="preserve">
    <value>pre_modifier_name</value>
  </data>
  <data name="xEditGridCell114.HeaderText" xml:space="preserve">
    <value>post_modifier1</value>
  </data>
  <data name="xEditGridCell115.HeaderText" xml:space="preserve">
    <value>post_modifier2</value>
  </data>
  <data name="xEditGridCell116.HeaderText" xml:space="preserve">
    <value>post_modifier3</value>
  </data>
  <data name="xEditGridCell117.HeaderText" xml:space="preserve">
    <value>post_modifier4</value>
  </data>
  <data name="xEditGridCell118.HeaderText" xml:space="preserve">
    <value>post_modifier5</value>
  </data>
  <data name="xEditGridCell119.HeaderText" xml:space="preserve">
    <value>post_modifier6</value>
  </data>
  <data name="xEditGridCell120.HeaderText" xml:space="preserve">
    <value>post_modifier7</value>
  </data>
  <data name="xEditGridCell121.HeaderText" xml:space="preserve">
    <value>post_modifier8</value>
  </data>
  <data name="xEditGridCell122.HeaderText" xml:space="preserve">
    <value>post_modifier9</value>
  </data>
  <data name="xEditGridCell123.HeaderText" xml:space="preserve">
    <value>post_modifier10</value>
  </data>
  <data name="xEditGridCell124.HeaderText" xml:space="preserve">
    <value>post_modifier_name</value>
  </data>
  <data name="xEditGridCell125.HeaderText" xml:space="preserve">
    <value>ser</value>
  </data>
  <data name="xEditGridCell126.HeaderText" xml:space="preserve">
    <value>sang_name</value>
  </data>
  <data name="xEditGridCell127.HeaderText" xml:space="preserve">
    <value>gwa</value>
  </data>
  <data name="xEditGridCell128.HeaderText" xml:space="preserve">
    <value>ord_danui_bas</value>
  </data>
  <data name="xEditGridCell129.HeaderText" xml:space="preserve">
    <value>jubsu_no</value>
  </data>
  <data name="xEditGridCell130.HeaderText" xml:space="preserve">
    <value>jubsu_no</value>
  </data>
  <data name="xEditGridCell131.HeaderText" xml:space="preserve">
    <value>Tên thông thường</value>
  </data>
  <data name="xEditGridCell132.HeaderText" xml:space="preserve">
    <value>tel_yn</value>
  </data>
  <data name="xEditGridCell134.HeaderText" xml:space="preserve">
    <value>specimen_code</value>
  </data>
  <data name="xEditGridCell135.HeaderText" xml:space="preserve">
    <value>ord_danui</value>
  </data>
  <data name="xEditGridCell136.HeaderText" xml:space="preserve">
    <value>jusa</value>
  </data>
  <data name="xEditGridCell137.HeaderText" xml:space="preserve">
    <value>bogyong_code</value>
  </data>
  <data name="xEditGridCell138.HeaderText" xml:space="preserve">
    <value>Mã 
bộ phận</value>
  </data>
  <data name="xEditGridCell139.HeaderText" xml:space="preserve">
    <value>Ngày
dự kiến</value>
  </data>
  <data name="xEditGridCell140.HeaderText" xml:space="preserve">
    <value>Thực hiện trong ngày</value>
  </data>
  <data name="xEditGridCell141.HeaderText" xml:space="preserve">
    <value>Kết quả 
trong ngày</value>
  </data>
  <data name="xEditGridCell142.HeaderText" xml:space="preserve">
    <value>tel_yn</value>
  </data>
  <data name="xEditGridCell143.HeaderText" xml:space="preserve">
    <value>Tên bộ phận</value>
  </data>
  <data name="xEditGridCell144.HeaderText" xml:space="preserve">
    <value>Ngày dự kiến quá khứ</value>
  </data>
  <data name="xEditGridCell145.HeaderText" xml:space="preserve">
    <value>PL 
nhập</value>
  </data>
  <data name="xEditGridCell146.HeaderText" xml:space="preserve">
    <value>Loại BH</value>
  </data>
  <data name="xEditGridCell147.HeaderText" xml:space="preserve">
    <value>Khám lại lần đầu</value>
  </data>
  <data name="xEditGridCell148.HeaderText" xml:space="preserve">
    <value>io_yn</value>
  </data>
  <data name="xEditGridCell149.HeaderText" xml:space="preserve">
    <value>input_tab</value>
  </data>
  <data name="xEditGridCell15.HeaderText" xml:space="preserve">
    <value>fk_key1001</value>
  </data>
  <data name="xEditGridCell150.HeaderText" xml:space="preserve">
    <value>is_order_yn</value>
  </data>
  <data name="xEditGridCell151.HeaderText" xml:space="preserve">
    <value>Thuốc 
mang theo</value>
  </data>
  <data name="xEditGridCell153.HeaderText" xml:space="preserve">
    <value>Tại
nhà</value>
  </data>
  <data name="xEditGridCell154.HeaderText" xml:space="preserve">
    <value>Chỉ định
thời gian</value>
  </data>
  <data name="xEditGridCell155.HeaderText" xml:space="preserve">
    <value>BHNN</value>
  </data>
  <data name="xEditGridCell156.HeaderText" xml:space="preserve">
    <value>BHNN</value>
  </data>
  <data name="xEditGridCell16.HeaderText" xml:space="preserve">
    <value>wonnae_drg_yn</value>
  </data>
  <data name="xEditGridCell162.HeaderText" xml:space="preserve">
    <value>toiwon_drg</value>
  </data>
  <data name="xEditGridCell163.HeaderText" xml:space="preserve">
    <value>ml
hr</value>
  </data>
  <data name="xEditGridCell164.HeaderText" xml:space="preserve">
    <value>Không thể
phát hành sau</value>
  </data>
  <data name="xEditGridCell165.HeaderText" xml:space="preserve">
    <value>Đơn
giản</value>
  </data>
  <data name="xEditGridCell166.HeaderText" xml:space="preserve">
    <value>Bao
thuốc</value>
  </data>
  <data name="xEditGridCell167.HeaderText" xml:space="preserve">
    <value>input_tab</value>
  </data>
  <data name="xEditGridCell169.HeaderText" xml:space="preserve">
    <value>donbog_yn</value>
  </data>
  <data name="xEditGridCell17.HeaderText" xml:space="preserve">
    <value>dc_yn</value>
  </data>
  <data name="xEditGridCell170.HeaderText" xml:space="preserve">
    <value>dv_name</value>
  </data>
  <data name="xEditGridCell171.HeaderText" xml:space="preserve">
    <value>drg_info</value>
  </data>
  <data name="xEditGridCell172.HeaderText" xml:space="preserve">
    <value>drg_bunryu</value>
  </data>
  <data name="xEditGridCell173.HeaderText" xml:space="preserve">
    <value>Tán
thuốc</value>
  </data>
  <data name="xEditGridCell175.HeaderText" xml:space="preserve">
    <value>io_gubun</value>
  </data>
  <data name="xEditGridCell18.HeaderText" xml:space="preserve">
    <value>confirm_check</value>
  </data>
  <data name="xEditGridCell19.HeaderText" xml:space="preserve">
    <value>G
R</value>
  </data>
  <data name="xEditGridCell2.HeaderText" xml:space="preserve">
    <value>Khoa khám</value>
  </data>
  <data name="xEditGridCell20.HeaderText" xml:space="preserve">
    <value>Mã YC</value>
  </data>
  <data name="xEditGridCell21.HeaderText" xml:space="preserve">
    <value>Tên YC</value>
  </data>
  <data name="xEditGridCell22.HeaderText" xml:space="preserve">
    <value>Dịch thể</value>
  </data>
  <data name="xEditGridCell23.HeaderText" xml:space="preserve">
    <value>Số lượng</value>
  </data>
  <data name="xEditGridCell24.HeaderText" xml:space="preserve">
    <value>Đơn vị</value>
  </data>
  <data name="xEditGridCell25.HeaderText" xml:space="preserve">
    <value>dv_time</value>
  </data>
  <data name="xEditGridCell26.HeaderText" xml:space="preserve">
    <value>dv</value>
  </data>
  <data name="xEditGridCell27.HeaderText" xml:space="preserve">
    <value>Số ngày</value>
  </data>
  <data name="xEditGridCell28.HeaderText" xml:space="preserve">
    <value>Tiêm</value>
  </data>
  <data name="xEditGridCell29.HeaderText" xml:space="preserve">
    <value>HD dùng thuốc</value>
  </data>
  <data name="xEditGridCell3.HeaderText" xml:space="preserve">
    <value>BS</value>
  </data>
  <data name="xEditGridCell30.HeaderText" xml:space="preserve">
    <value>Ngoài BV</value>
  </data>
  <data name="xEditGridCell31.HeaderText" xml:space="preserve">
    <value>result_date</value>
  </data>
  <data name="xEditGridCell32.HeaderText" xml:space="preserve">
    <value>Khẩn
cấp</value>
  </data>
  <data name="xEditGridCell33.HeaderText" xml:space="preserve">
    <value>PL
YC</value>
  </data>
  <data name="xEditGridCell34.HeaderText" xml:space="preserve">
    <value>Chính</value>
  </data>
  <data name="xEditGridCell35.HeaderText" xml:space="preserve">
    <value>Mã CT/bệnh</value>
  </data>
  <data name="xEditGridCell36.HeaderText" xml:space="preserve">
    <value>Thuốc chống ung thư</value>
  </data>
  <data name="xEditGridCell37.HeaderText" xml:space="preserve">
    <value>muhyo</value>
  </data>
  <data name="xEditGridCell38.HeaderText" xml:space="preserve">
    <value>Chụp 
chiếu động</value>
  </data>
  <data name="xEditGridCell39.HeaderText" xml:space="preserve">
    <value>Khoa khám</value>
  </data>
  <data name="xEditGridCell4.HeaderText" xml:space="preserve">
    <value>Số ngày</value>
  </data>
  <data name="xEditGridCell40.HeaderText" xml:space="preserve">
    <value>ocs_flag</value>
  </data>
  <data name="xEditGridCell41.HeaderText" xml:space="preserve">
    <value>order_gubun</value>
  </data>
  <data name="xEditGridCell42.HeaderText" xml:space="preserve">
    <value>input_gubun</value>
  </data>
  <data name="xEditGridCell43.HeaderText" xml:space="preserve">
    <value>after_act_yn</value>
  </data>
  <data name="xEditGridCell44.HeaderText" xml:space="preserve">
    <value>jundal_table</value>
  </data>
  <data name="xEditGridCell45.HeaderText" xml:space="preserve">
    <value>jundal_part</value>
  </data>
  <data name="xEditGridCell46.HeaderText" xml:space="preserve">
    <value>move_part</value>
  </data>
  <data name="xEditGridCell47.HeaderText" xml:space="preserve">
    <value>bunho</value>
  </data>
  <data name="xEditGridCell48.HeaderText" xml:space="preserve">
    <value>Ngày YC</value>
  </data>
  <data name="xEditGridCell49.HeaderText" xml:space="preserve">
    <value>gwa</value>
  </data>
  <data name="xEditGridCell5.HeaderText" xml:space="preserve">
    <value>bunho</value>
  </data>
  <data name="xEditGridCell50.HeaderText" xml:space="preserve">
    <value>doctor</value>
  </data>
  <data name="xEditGridCell51.HeaderText" xml:space="preserve">
    <value>naewon_type</value>
  </data>
  <data name="xEditGridCell52.HeaderText" xml:space="preserve">
    <value>pk_order</value>
  </data>
  <data name="xEditGridCell53.HeaderText" xml:space="preserve">
    <value>seq</value>
  </data>
  <data name="xEditGridCell54.HeaderText" xml:space="preserve">
    <value>pkocs1003</value>
  </data>
  <data name="xEditGridCell55.HeaderText" xml:space="preserve">
    <value>sub_susul</value>
  </data>
  <data name="xEditGridCell56.HeaderText" xml:space="preserve">
    <value>sutak_yn</value>
  </data>
  <data name="xEditGridCell57.HeaderText" xml:space="preserve">
    <value>Tên CT/bệnh</value>
  </data>
  <data name="xEditGridCell58.HeaderText" xml:space="preserve">
    <value>bunho</value>
  </data>
  <data name="xEditGridCell59.HeaderText" xml:space="preserve">
    <value>amt</value>
  </data>
  <data name="xEditGridCell6.HeaderText" xml:space="preserve">
    <value>doctor</value>
  </data>
  <data name="xEditGridCell60.HeaderText" xml:space="preserve">
    <value>naewon_date</value>
  </data>
  <data name="xEditGridCell61.HeaderText" xml:space="preserve">
    <value>gwa</value>
  </data>
  <data name="xEditGridCell62.HeaderText" xml:space="preserve">
    <value>doctor</value>
  </data>
  <data name="xEditGridCell63.HeaderText" xml:space="preserve">
    <value>naewon_type</value>
  </data>
  <data name="xEditGridCell64.HeaderText" xml:space="preserve">
    <value>dv_1</value>
  </data>
  <data name="xEditGridCell65.HeaderText" xml:space="preserve">
    <value>dv_2</value>
  </data>
  <data name="xEditGridCell66.HeaderText" xml:space="preserve">
    <value>dv_3</value>
  </data>
  <data name="xEditGridCell67.HeaderText" xml:space="preserve">
    <value>dv_4</value>
  </data>
  <data name="xEditGridCell68.HeaderText" xml:space="preserve">
    <value>mix_group</value>
  </data>
  <data name="xEditGridCell69.HeaderText" xml:space="preserve">
    <value>slip_code</value>
  </data>
  <data name="xEditGridCell7.HeaderText" xml:space="preserve">
    <value>naewon_type</value>
  </data>
  <data name="xEditGridCell70.HeaderText" xml:space="preserve">
    <value>group_yn</value>
  </data>
  <data name="xEditGridCell71.HeaderText" xml:space="preserve">
    <value>sg_code</value>
  </data>
  <data name="xEditGridCell72.HeaderText" xml:space="preserve">
    <value>order_gubun_bas</value>
  </data>
  <data name="xEditGridCell73.HeaderText" xml:space="preserve">
    <value>input_control</value>
  </data>
  <data name="xEditGridCell74.HeaderText" xml:space="preserve">
    <value>pk_order</value>
  </data>
  <data name="xEditGridCell75.HeaderText" xml:space="preserve">
    <value>sunab_check</value>
  </data>
  <data name="xEditGridCell76.HeaderText" xml:space="preserve">
    <value>suga_yn</value>
  </data>
  <data name="xEditGridCell77.HeaderText" xml:space="preserve">
    <value>emergency_check</value>
  </data>
  <data name="xEditGridCell78.HeaderText" xml:space="preserve">
    <value>Ngày chẩn đoán</value>
  </data>
  <data name="xEditGridCell79.HeaderText" xml:space="preserve">
    <value>dv_5</value>
  </data>
  <data name="xEditGridCell8.HeaderText" xml:space="preserve">
    <value>pk_order</value>
  </data>
  <data name="xEditGridCell80.HeaderText" xml:space="preserve">
    <value>limit_suryang</value>
  </data>
  <data name="xEditGridCell81.HeaderText" xml:space="preserve">
    <value>specimen_yn</value>
  </data>
  <data name="xEditGridCell82.HeaderText" xml:space="preserve">
    <value>jaeryo_yn</value>
  </data>
  <data name="xEditGridCell83.HeaderText" xml:space="preserve">
    <value>ord_danui_check</value>
  </data>
  <data name="xEditGridCell84.HeaderText" xml:space="preserve">
    <value>jundal_table_out</value>
  </data>
  <data name="xEditGridCell85.HeaderText" xml:space="preserve">
    <value>jundal_part_out</value>
  </data>
  <data name="xEditGridCell86.HeaderText" xml:space="preserve">
    <value>dv_6</value>
  </data>
  <data name="xEditGridCell87.HeaderText" xml:space="preserve">
    <value>bulyong_check</value>
  </data>
  <data name="xEditGridCell88.HeaderText" xml:space="preserve">
    <value>wonyoi_order_cr_yn</value>
  </data>
  <data name="xEditGridCell89.HeaderText" xml:space="preserve">
    <value>default_wonyoi_order_yn</value>
  </data>
  <data name="xEditGridCell9.HeaderText" xml:space="preserve">
    <value>input_gubun</value>
  </data>
  <data name="xEditGridCell90.HeaderText" xml:space="preserve">
    <value>dv_7</value>
  </data>
  <data name="xEditGridCell91.HeaderText" xml:space="preserve">
    <value>dv_8</value>
  </data>
  <data name="xEditGridCell92.HeaderText" xml:space="preserve">
    <value>nday_yn</value>
  </data>
  <data name="xEditGridCell93.HeaderText" xml:space="preserve">
    <value>muhyo_yn</value>
  </data>
  <data name="xEditGridCell94.HeaderText" xml:space="preserve">
    <value>Ghi chú</value>
  </data>
  <data name="xEditGridCell95.HeaderText" xml:space="preserve">
    <value>Lựa chọn</value>
  </data>
  <data name="xEditGridCell96.HeaderText" xml:space="preserve">
    <value>Hiển thị tên 
thông thường</value>
  </data>
  <data name="xEditGridCell97.HeaderText" xml:space="preserve">
    <value>Lựa chọn</value>
  </data>
  <data name="xEditGridCell98.HeaderText" xml:space="preserve">
    <value>bulyong_check</value>
  </data>
  <data name="xEditGridCell99.HeaderText" xml:space="preserve">
    <value>Ngày phát triệu chứng</value>
  </data>
  <data name="xGridHeader1.HeaderText" xml:space="preserve">
    <value>Số lần</value>
  </data>
  <data name="xLabel5.Text" xml:space="preserve">
    <value>Ngày YC</value>
  </data>
</root>