<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADw
        DQAAAk1TRnQBSQFMAgEBBgEAAQgBAAEgAQABEAEAARABAAT/AQkBEAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wQAAf8B8AFyAUkBJwFJ
        AXIBCAH/BQAB8QG1Cq0BtQHxIwAB9AFyAS4DNAEzAi0BcgHzBAABtAH0BfMD9AL1Af8BtCIAAf8BUANV
        AZcBeAI0Ai0BTwHzAwABrQHzChkB/wGtIQAB/wGXA1YBVQEbAf8BCAM0AS0BcgH/AgABrQHzChkB9QGt
        IQAB8wFPA1YBVQF4Av8BCAM0AS0BCAIAAbMB9AIZAfAEcgMZAfUBrSEAAZgDVgJVAVYBeAL/AQgDNAFy
        AQABUANJAVABcgEIAXgCcgMZAfUBrSEAAZcBVgF4CP8BCAI0AU8BAAHwAUkBcgJQAQgBlwFyAVABSQMZ
        AfUBsyEAAVUBVgF4CP8BGwJVAS4CAAGQAUkBUAEIAngBUAHvBBkB9AGzIQABlwZWAZgC/wEbAlYBVQFP
        AgABtAFyAQgCeAFQAXIFGQH0AbQhAAGYBVYBeAL/ARsEVgGXAQAB/wFyAQgBmAF4AXIBUAJyBBkB9AG0
        IQAB9AFVAngCVgEIAf8BGwRWAU8B8AEAAZgBCAGZAXgBcgFQBHIDCQH1AbQhAAH/AZgBeAGYAXgCVgGZ
        BVYBlwH/AQAEcgGYAe0CSQJPAZgB9AH1AfQBsyIAAfYBlwF4AZgCeAZWAfQDAAG0AfUGGQHdAf8CGQG7
        AQkjAAH2AZgBVQKYAXgBVwFWAVUBlwH0BAABtAH1BhkB3QH/AQkBugG0Af8kAAH/AfQBmAGXAVUBlwGY
        AfMB/wUAAbsI9AEZAboBtAH/MwAB8gG7CLQBCQH/IwANIwMADSMDAA9xAccB0gGUBVgCeQVYAXQB0gEj
        DGoBIwIAASMM1AEjAgABhgFyAZcKeAFyAWwBoQHSAbcCegLlAaAB9gH/AaAD5QF6AZQB0gEjDWoBIwEA
        ASMN1AEjAgABhgFyAXgHmAF4AZcBbAGhAQAB0gG3AZQBegGgAfYBGgOaAfYCoAF0AbcB0gEjBmoC/wZq
        AiMFzgT/Bc4BIwEAAaYBcgGYAggBeAJPAggBmQGXAWwCAAHSAbcBvQGaAf8BwwGaARoCmgEaAf8BeQK9
        AdIBIwVqBP8FagIjBc4E/wXOASMCAAGGAZcBCAGYAXQBmgF6AXgBCAF4AWwDAAHSAbcCvQGaAXkBmgGU
        AXQBmgF0AZkDvQHSASMEagb/BGoCIwXOBP8FzgEjAwABhgGLAXMBdAFuAnQB6wGLBAAB0gG3Ar0BkwGa
        ARoBRQEBApoBkwO9AdIBIwNjCP8DYwIjBawE/wWsASMEAAFuAZkBHAGZAW4BegF0AacEAAHSAbcCvQFt
        AcMBGgGUAXQCmgFuAd4CvQHSASMCRgr/AkYCIwGsAa0K/wGsAa0BIwQAAXQBmQPqAZoBdAGnBAAB0gG3
        Ab0B6wESARoBkwEaAZoBmQF0AesBEgK9AbcBIwVpBP8FaQIjA60I/wOtASMCAAGhAewCvAIaAZoBmQF6
        AXQBpwMAAdICvQHrARIB7AK8AgcBkgHqARICvQHSASMFaQT/BWkCIwStBv8ErQEjAQABoQHPAbsCCQG7
        AhoBdAGZAewB6wMAAdIBtwG9AesBEgGuBLUBtAHqARICvQHSASMBaQGOA28E/wVvAiMBrQS0BP8FtAEj
        AQABtAHcARkC4gEZAbQBGgGaAZkB7AHqAwAB0gG3Ab0B6wGtAQkB9AK3AfQBGQHPARICvQHSASMBQASO
        BP8FjgIjAccFtAL/BrQBIwEAAbMC4gIJAv8BrQLvAe0BEgMAAdIBtwG9Ac8BGQH/Ab0CsQG3Af8B8wGt
        Ar0B0gEjAUABaQyTAiMBxwGtDAkBIwEAAbQC4gEJARkC/wGtAvIB8AGGAwAB0gK3AbUB3QH/Ab0CsQG3
        Af8BGQHPAb0BtwHSAQABIwFADJMBIwEAASMBxwwJASMBAAG0AQkB4gH0Av8BCQGuAuwBbQQAAdIDtwHd
        AhkCtgIZAd0DtwHSAgABIwxAASMCAAEjDMcBIwEAAacBtAEZAv8BCQGuA20BhgQAAdIEtwa9BLcB0gMA
        DSMDAA0jAgABzwO0AYsDEgGGBQAQ0gFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/
        AQAB4AEPAYABAQQAAcABBwGAAQEEAAGAAQMBgAEBBQABAQGAAQEFAAEBAYABAQUAAQEBAAEBBQABAQEA
        AQEFAAEBAYABAQUAAQEBgAEBBQABAQEAAQEFAAEBAQABAQUAAQEBAAEBBAABgAEDAYABAQQAAcABBwGA
        AQEEAAHgAQ8BgAEDBAAC/wGAAQcFAAEHAQABBwUAAQMBAAEDBQABAQEAAQEBgAEBBgABgAEDBgABwAEH
        BgAB4AEPBgAB8AEPBgAB8AEPBgABwAEHBgABgAEHBgABgAEHBgABgAEHBgABgAEHAgABgAEAAYABAAGA
        AQ8CAAHAAQABwAEAAYABDwIAAeABAAHgAQABwAEfGAAL
</value>
  </data>
  <metadata name="layCommon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>122, 17</value>
  </metadata>
  <data name="grdNUR8003.QuerySQL" xml:space="preserve">
    <value>SELECT Z.WRITE_DATE
     , SUM(DECODE(Z.COUNT_YN, 'Y', 1, 0)) COUNT
     , SUM(DECODE(Z.DATA_YN, 'Y', 1, 0)) ALL_COUNT
     , ROUND(SUM(DECODE(Z.COUNT_YN, 'Y', 1, 0)) / SUM(DECODE(Z.DATA_YN, 'Y', 1, 0)) * 100) PER
     , SUM(DECODE(Z.COUNT_YN, 'Y', 1, 0)) || '/' || SUM(DECODE(Z.DATA_YN, 'Y', 1, 0)) CAL
FROM 
(SELECT A.BUNHO, A.WRITE_DATE, 'Y' DATA_YN
     , FN_NUR_LOAD_NUR_NEED_POINT(A.HOSP_CODE, A.BUNHO, A.WRITE_DATE,'A') A
     , FN_NUR_LOAD_NUR_NEED_POINT(A.HOSP_CODE, A.BUNHO, A.WRITE_DATE,'B') B
     , FN_NUR_LOAD_NUR_NEED_COUNT(FN_NUR_LOAD_NUR_NEED_POINT(A.HOSP_CODE, A.BUNHO, A.WRITE_DATE,'A'), FN_NUR_LOAD_NUR_NEED_POINT(A.HOSP_CODE, A.BUNHO, A.WRITE_DATE,'B')) COUNT_YN 
  FROM NUR8003 A
 WHERE A.HOSP_CODE = :f_hosp_code
   AND A.WRITE_DATE BETWEEN TRUNC(TO_DATE(:f_query_date,'YYYY/MM/DD'), 'MONTH') AND LAST_DAY(:f_query_date)
   AND A.WRITE_HODONG = :f_ho_dong
 GROUP BY A.HOSP_CODE, A.BUNHO, WRITE_DATE) Z 
 GROUP BY WRITE_DATE 
 ORDER BY Z.WRITE_DATE </value>
  </data>
  <data name="grdWrited.QuerySQL" xml:space="preserve">
    <value>SELECT X.BUNHO
     , X.SUNAME
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  0, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  0, X.WRITE_HODONG, 'B') AS "01"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  1, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  1, X.WRITE_HODONG, 'B') AS "02"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  2, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  2, X.WRITE_HODONG, 'B') AS "03"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  3, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  3, X.WRITE_HODONG, 'B') AS "04"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  4, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  4, X.WRITE_HODONG, 'B') AS "05"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  5, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  5, X.WRITE_HODONG, 'B') AS "06"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  6, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  6, X.WRITE_HODONG, 'B') AS "07"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  7, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  7, X.WRITE_HODONG, 'B') AS "08"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  8, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  8, X.WRITE_HODONG, 'B') AS "09"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  9, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  9, X.WRITE_HODONG, 'B') AS "10"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 10, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 10, X.WRITE_HODONG, 'B') AS "11"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 11, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 11, X.WRITE_HODONG, 'B') AS "12"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 12, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 12, X.WRITE_HODONG, 'B') AS "13"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 13, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 13, X.WRITE_HODONG, 'B') AS "14"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 14, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 14, X.WRITE_HODONG, 'B') AS "15"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 15, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 15, X.WRITE_HODONG, 'B') AS "16"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 16, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 16, X.WRITE_HODONG, 'B') AS "17"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 17, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 17, X.WRITE_HODONG, 'B') AS "18"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 18, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 18, X.WRITE_HODONG, 'B') AS "19"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 19, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 19, X.WRITE_HODONG, 'B') AS "20"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 20, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 20, X.WRITE_HODONG, 'B') AS "21"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 21, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 21, X.WRITE_HODONG, 'B') AS "22"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 22, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 22, X.WRITE_HODONG, 'B') AS "23"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 23, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 23, X.WRITE_HODONG, 'B') AS "24"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 24, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 24, X.WRITE_HODONG, 'B') AS "25"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 25, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 25, X.WRITE_HODONG, 'B') AS "26"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 26, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 26, X.WRITE_HODONG, 'B') AS "27"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 27, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 27, X.WRITE_HODONG, 'B') AS "28"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 28, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 28, X.WRITE_HODONG, 'B') AS "29"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 29, X.WRITE_HODONG, 'A') || '/' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 29, X.WRITE_HODONG, 'B') AS "30"
     , '''' 
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 30, X.WRITE_HODONG, 'A') || '/'
    || FN_NUR_NEED_DONG_POINT(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 30, X.WRITE_HODONG, 'B') AS "31"
FROM 
(SELECT A.HOSP_CODE
      , B.SUNAME
      , A.BUNHO
      , A.WRITE_HODONG
  FROM NUR8003 A
     , OUT0101 B
 WHERE A.HOSP_CODE = :f_hosp_code
   AND A.WRITE_HODONG = :f_ho_dong
   AND B.HOSP_CODE = A.HOSP_CODE
   AND B.BUNHO = A.BUNHO
   AND A.WRITE_DATE BETWEEN TO_DATE(:f_date, 'YYYY/MM') AND LAST_DAY(TO_DATE(:f_date, 'YYYY/MM'))
 GROUP BY A.HOSP_CODE, A.BUNHO, B.SUNAME, A.WRITE_HODONG) X
 ORDER BY X.BUNHO</value>
  </data>
  <metadata name="layWritedHodong.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>241, 17</value>
  </metadata>
  <data name="layWritedHodong.QuerySQL" xml:space="preserve">
    <value>SELECT X.BUNHO
     , X.SUNAME
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  0) AS "01"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  1) AS "02"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  2) AS "03"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  3) AS "04"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  4) AS "05"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  5) AS "06"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  6) AS "07"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  7) AS "08"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  8) AS "09"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') +  9) AS "10"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 10) AS "11"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 11) AS "12"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 12) AS "13"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 13) AS "14"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 14) AS "15"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 15) AS "16"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 16) AS "17"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 17) AS "18"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 18) AS "19"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 19) AS "20"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 20) AS "21"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 21) AS "22"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 22) AS "23"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 23) AS "24"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 24) AS "25"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 25) AS "26"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 26) AS "27"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 27) AS "28"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 28) AS "29"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 29) AS "30"
     , FN_NUR_LOAD_NUR_NEED_WRITED(X.HOSP_CODE, X.BUNHO, TO_DATE(:f_date, 'YYYY/MM') + 30) AS "31"
FROM 
(SELECT A.HOSP_CODE
      , B.SUNAME
      , A.BUNHO
  FROM NUR8003 A
     , OUT0101 B
 WHERE A.HOSP_CODE = :f_hosp_code
   AND A.WRITE_HODONG = :f_ho_dong
   AND B.HOSP_CODE = A.HOSP_CODE
   AND B.BUNHO = A.BUNHO
   AND A.WRITE_DATE BETWEEN TO_DATE(:f_date, 'YYYY/MM') AND LAST_DAY(TO_DATE(:f_date, 'YYYY/MM'))
 GROUP BY A.HOSP_CODE, A.BUNHO, B.SUNAME) X
 ORDER BY X.BUNHO
 </value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>43</value>
  </metadata>
</root>