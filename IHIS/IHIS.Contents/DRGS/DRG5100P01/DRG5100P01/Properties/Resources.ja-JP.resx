<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnClose" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="btnGenericText" xml:space="preserve">
    <value>一般名表示</value>
  </data>
  <data name="btnProcessText" xml:space="preserve">
    <value>受　付</value>
  </data>
  <data name="btnProcessText2" xml:space="preserve">
    <value>取　消</value>
  </data>
  <data name="btnProcessText3" xml:space="preserve">
    <value>不　可</value>
  </data>
  <data name="Caption1" xml:space="preserve">
    <value>知らせ</value>
  </data>
  <data name="Caption2" xml:space="preserve">
    <value>注意</value>
  </data>
  <data name="Caption3" xml:space="preserve">
    <value>ATC情報転送失敗</value>
  </data>
  <data name="cbxATCYNText" xml:space="preserve">
    <value>ATC 使用中</value>
  </data>
  <data name="cbxATCYNUnChecked" xml:space="preserve">
    <value>ATC 未使用</value>
  </data>
  <data name="Exception" xml:space="preserve">
    <value>転送マスタ（DRG4010）作成に問題が発生しました。</value>
  </data>
  <data name="Exception2" xml:space="preserve">
    <value>薬局情報に反映されませんでした。</value>
  </data>
  <data name="Exception3" xml:space="preserve">
    <value>転送するデータが存在しません。</value>
  </data>
  <data name="Exception4" xml:space="preserve">
    <value>ATC電文を転送する途中問題が発生しました。電文：</value>
  </data>
  <data name="layBongtuLabel1" xml:space="preserve">
    <value>投薬番号 : </value>
  </data>
  <data name="layBongtuLabel2" xml:space="preserve">
    <value>調剤日付 : </value>
  </data>
  <data name="layBongtuLabel3" xml:space="preserve">
    <value>　様</value>
  </data>
  <data name="MessageBox1" xml:space="preserve">
    <value>患者番号を入力してください。</value>
  </data>
  <data name="MessageBox2" xml:space="preserve">
    <value>患者が選択されていないです。ご確認下さい。</value>
  </data>
  <data name="MessageBox3_JP" xml:space="preserve">
    <value>受付されていない薬があります。受付後、再出力して下さい。</value>
  </data>
  <data name="MessageBox3_Ko" xml:space="preserve">
    <value>접수되지 않은 약이 있습니다. 접수 후 재출력해 주세요.</value>
  </data>
  <data name="MessageBox4" xml:space="preserve">
    <value>ラベルプリンタの設定がされていません。</value>
  </data>
  <data name="SMS_TRIAL" xml:space="preserve">
    <value>実験患者</value>
  </data>
  <data name="XMessageBox2" xml:space="preserve">
    <value>既にオーダが会計に転送されています。</value>
  </data>
  <data name="XMessageBox5" xml:space="preserve">
    <value>プリンタ設定中にエラーが発生しました。</value>
  </data>
  <data name="XMessageBox6" xml:space="preserve">
    <value>ATC情報転送の申請を成功しました。</value>
  </data>
  <data name="XMessageBox7" xml:space="preserve">
    <value>ATC情報転送要請成功</value>
  </data>
  <data name="xrbJubsuChecked" xml:space="preserve">
    <value>受付</value>
  </data>
  <data name="xrbOrderChecked" xml:space="preserve">
    <value>オーダ</value>
  </data>
</root>