<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.ClientSize" type="System.Drawing.Size, System.Drawing">
    <value>239, 45</value>
  </data>
</root>