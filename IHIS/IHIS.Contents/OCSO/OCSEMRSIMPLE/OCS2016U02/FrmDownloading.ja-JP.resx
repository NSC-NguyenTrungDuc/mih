<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlh7wAsAIZ9AAZBjAdCjQhDjglEjwpFkAlGkQtGkQhGkglHkwxHkg1IkwtJlQ5JlA9KlQ1Llw9N
        mRBLlhFMlxJNmBFOmRNOmRFPmxRPmhVQmxNRnRZRnBdSnRRSnhhTnhlUnxdVoRpVoBtWoRlXoxtZpR9w
        wiV0xDB7xzF7x0CFy0eJzUyNzk+Pz1CP0FGQ0FOS0FSR0VWS0VeU0VeU01eW01eU1FeW1FiU01iW01uW
        0lyX01iU1FuX1FyX1FuY012Y01uY1FyY1V+Z1V+a1V+Z1l+a1mCZ1WCa1WKb1GOb1WCZ1mCa1mKb1mKc
        1WKc1mOc12Sd12af12mf1maf2Gmf2Gqf2Gag12mh122h12+j12mg2Gqg2Gui2Wui2m2h2W2i2W+j2G2h
        2m2i2m+j2m+k2W2k2m+k2nGk2HKl23Sn23Sn3HWp23io23yr23ur3Hus3Xus3nys3X6t3Xys3omz34Sy
        4Iu14ZS74pe95Jm/5aDD5qPF56vK6a3L67LO6////wAAAAAAACH/C05FVFNDQVBFMi4wAwEBAAAh+QQA
        AAAAACwAAAAA7wAsAAAI/wD7CBxIsKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsaPHh2tImBhpooTJ
        EiRTqlw58iRKljBXmoxJs+TJmjFd4oSpc6fMmz5Zzgz6k2jKnipJpCDoZYTTp1CjSp1KtarVq1izat3K
        tavXr2DDOj1BsIzYs2jTql3Ltm1bFAShuJ1Lt67du3idwh0oN6/fv4AD590rsK/gw4gTK766dKCRxZAj
        S/7bWODjyZgzaxZbuc/lzaBDi47a2UgCCiIwLPAggsGD1AsweHjw4IOH2CIeLLCNm8JqDxBeW1gdIngI
        1R4+PGAg4jaG3Aua437gwMPtCiKGJz8Nm/WC16plL/+XjkH57tuofVt38Fq3d/CrP7gmr7y2c+jWF2BX
        X/8Dcujk5eZACPdRlx9qFcT3XWoHvMcga/NhYIB4r3lwwHO6BfhAg7eB12Br4CXA2gMQNGdABCwQdAME
        H1AgwAUcGJBAiwZYIJ8BH1hw4o0aaDAAAzx28GOLA2ggpAIfRDDABR0kAKSLFNz4gQYGRMmAARxwIECU
        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
        aZZvWZZ42Zd5qZeFaZiDGZh5UBZOQAVOEAVRgAWTiQVUcJmRiQWUGZmSeZmTeZma6ZmWSZmWKZmWeZlU
        UJlRAJmdmZqniZqYOZmr+ZiiSZmo6QSa2ZqsGQVNsJtRQJuZOZuSuZqwCZqk+Zq0eZutGZqoeZywWZm+
        CZuaaZuxyZyoCZ3POZys+ZqX2QS66ZqbOZyf/9mclvmYp1merNmYA3EGWSAFUZAFWTCdWACfVVAF8KmZ
        8CkFWWCf9wmf/jmd94mf/nmZ8emf/mmf83mZ/LmfCGqg9TmfBkoFC+qfUBCfEDqfGIoF9Wmh+KmfVGCh
        C4qf07mhBRqf+rmgHxqgABqg/amf+JmiDjqh9Bmi8CmhJWqgACqf7SmhAqqZLjqdMHqhF0qiekAQaOAF
        SOoFWTAGWaCkStqkW0AGWSAG8JmkTeqfT0qlVLqkV7oFTtqkUiqlT4qkXDoGY6CkYrClWeClTTqmYVCl
        ajqmbfqmZLqmTpqlUwqfYYCmeQqfYsCkcsqnTNqmX8qnS/qmV4qkWqqnSv/KpFTqpV76pIg6po3KpXfa
        pvB5pmVKpWTqpFQKqJjKpJrKpX36qVWaBUU6EGmQpqzaql6QpmTQqmKwp7L6qmJgq7Kaq15ABmGQq2lq
        q4pqq7EKrMPKqrHqq7jqq2SwrIq6rM56q6yarMl6q7t6rMaqq7i6rGf6qmHgrMeKq8lqrbDqq7dKq9cK
        ruT6q8Bardjqqu7KqntAEHPgBvRar/UaB3FAr/jqBvnKr/iar/tqrwLbr/YasP/6rwKbsAMLsPpKsAt7
        sAFbsP16sA3Lr/7qsA1LsfcKsRG7sRybsAY7sQirryALsRe7rxj7sCO7sPc6sGXABx8RszI7szRbszYL
        e7M4m7M6u7M7GxAAOw==
</value>
  </data>
  <data name="$this.ClientSize" type="System.Drawing.Size, System.Drawing">
    <value>238, 44</value>
  </data>
</root>