<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABU
        CAAAAk1TRnQBSQFMAwEBAAEIAQABSAEAARABAAEQAQAE/wEJARAI/wFCAU0BNgEEBgABNgEEAgABKAMA
        AUADAAEQAwABAQEAAQgGAAEEGAABgAIAAYADAAKAAQABgAMAAYABAAGAAQACgAIAA8ABAAHAAdwBwAEA
        AfABygGmAQABMwUAATMBAAEzAQABMwEAAjMCAAMWAQADHAEAAyIBAAMpAQADVQEAA00BAANCAQADOQEA
        AYABfAH/AQACUAH/AQABkwEAAdYBAAH/AewBzAEAAcYB1gHvAQAB1gLnAQABkAGpAa0CAAH/ATMDAAFm
        AwABmQMAAcwCAAEzAwACMwIAATMBZgIAATMBmQIAATMBzAIAATMB/wIAAWYDAAFmATMCAAJmAgABZgGZ
        AgABZgHMAgABZgH/AgABmQMAAZkBMwIAAZkBZgIAApkCAAGZAcwCAAGZAf8CAAHMAwABzAEzAgABzAFm
        AgABzAGZAgACzAIAAcwB/wIAAf8BZgIAAf8BmQIAAf8BzAEAATMB/wIAAf8BAAEzAQABMwEAAWYBAAEz
        AQABmQEAATMBAAHMAQABMwEAAf8BAAH/ATMCAAMzAQACMwFmAQACMwGZAQACMwHMAQACMwH/AQABMwFm
        AgABMwFmATMBAAEzAmYBAAEzAWYBmQEAATMBZgHMAQABMwFmAf8BAAEzAZkCAAEzAZkBMwEAATMBmQFm
        AQABMwKZAQABMwGZAcwBAAEzAZkB/wEAATMBzAIAATMBzAEzAQABMwHMAWYBAAEzAcwBmQEAATMCzAEA
        ATMBzAH/AQABMwH/ATMBAAEzAf8BZgEAATMB/wGZAQABMwH/AcwBAAEzAv8BAAFmAwABZgEAATMBAAFm
        AQABZgEAAWYBAAGZAQABZgEAAcwBAAFmAQAB/wEAAWYBMwIAAWYCMwEAAWYBMwFmAQABZgEzAZkBAAFm
        ATMBzAEAAWYBMwH/AQACZgIAAmYBMwEAA2YBAAJmAZkBAAJmAcwBAAFmAZkCAAFmAZkBMwEAAWYBmQFm
        AQABZgKZAQABZgGZAcwBAAFmAZkB/wEAAWYBzAIAAWYBzAEzAQABZgHMAZkBAAFmAswBAAFmAcwB/wEA
        AWYB/wIAAWYB/wEzAQABZgH/AZkBAAFmAf8BzAEAAcwBAAH/AQAB/wEAAcwBAAKZAgABmQEzAZkBAAGZ
        AQABmQEAAZkBAAHMAQABmQMAAZkCMwEAAZkBAAFmAQABmQEzAcwBAAGZAQAB/wEAAZkBZgIAAZkBZgEz
        AQABmQEzAWYBAAGZAWYBmQEAAZkBZgHMAQABmQEzAf8BAAKZATMBAAKZAWYBAAOZAQACmQHMAQACmQH/
        AQABmQHMAgABmQHMATMBAAFmAcwBZgEAAZkBzAGZAQABmQLMAQABmQHMAf8BAAGZAf8CAAGZAf8BMwEA
        AZkBzAFmAQABmQH/AZkBAAGZAf8BzAEAAZkC/wEAAcwDAAGZAQABMwEAAcwBAAFmAQABzAEAAZkBAAHM
        AQABzAEAAZkBMwIAAcwCMwEAAcwBMwFmAQABzAEzAZkBAAHMATMBzAEAAcwBMwH/AQABzAFmAgABzAFm
        ATMBAAGZAmYBAAHMAWYBmQEAAcwBZgHMAQABmQFmAf8BAAHMAZkCAAHMAZkBMwEAAcwBmQFmAQABzAKZ
        AQABzAGZAcwBAAHMAZkB/wEAAswCAALMATMBAALMAWYBAALMAZkBAAPMAQACzAH/AQABzAH/AgABzAH/
        ATMBAAGZAf8BZgEAAcwB/wGZAQABzAH/AcwBAAHMAv8BAAHMAQABMwEAAf8BAAFmAQAB/wEAAZkBAAHM
        ATMCAAH/AjMBAAH/ATMBZgEAAf8BMwGZAQAB/wEzAcwBAAH/ATMB/wEAAf8BZgIAAf8BZgEzAQABzAJm
        AQAB/wFmAZkBAAH/AWYBzAEAAcwBZgH/AQAB/wGZAgAB/wGZATMBAAH/AZkBZgEAAf8CmQEAAf8BmQHM
        AQAB/wGZAf8BAAH/AcwCAAH/AcwBMwEAAf8BzAFmAQAB/wHMAZkBAAH/AswBAAH/AcwB/wEAAv8BMwEA
        AcwB/wFmAQAC/wGZAQAC/wHMAQACZgH/AQABZgH/AWYBAAFmAv8BAAH/AmYBAAH/AWYB/wEAAv8BZgEA
        ASEBAAGlAQADXwEAA3cBAAOGAQADlgEAA8sBAAOyAQAD1wEAA90BAAPjAQAD6gEAA/EBAAP4AQAB8AH7
        Af8BAAGkAqABAAOAAwAB/wIAAf8DAAL/AQAB/wMAAf8BAAH/AQAC/wIAA/8EAAH/AfABcgFJAScBSQFy
        AQgB/zYAAfQBcgEuAzQBMwItAXIB8zQAAfUBUANVAZcBeAI0Ai0BTwHzMgAB/wGXA1YBVQEbAf8BCAM0
        AS0BcgH/MQAB8wFPA1YBVQF4Av8BCAM0AS0BCDEAAZgDVgJVAVYBeAL/AQgDNAFyMQABlwFWAXgI/wEI
        AjQBTzEAAVUBVgF4CP8BGwJVAS4xAAGXBlYBmAL/ARsCVgFVAU8xAAGYBVYBeAH1Af8BGwRWAZcxAAH0
        AVUCeAJWAQgB/wEbBFYBTwHwMQAB/wGYAXgBmAF4AlYBmQVWAZcB/zIAAfYBlwF4AZgCeAZWAfQ0AAH2
        AZgBVQKYAXgBVwFWAVUBlwH0NgAB/wH0AZgBlwFVAZcBmAHzAf90AAFCAU0BPgcAAT4DAAEoAwABQAMA
        ARADAAEBAQABAQUAAYAXAAP/AQAB4AEPBgABwAEHBgABgAEDBwABAQcAAQEHAAEBBwABAQcAAQEHAAEB
        BwABAQcAAQEHAAEBBgABgAEDBgABwAEHBgAB4AEPBgAC/xwACw==
</value>
  </data>
  <data name="grdNUR1035.QuerySQL" xml:space="preserve">
    <value>SELECT A.FKINP1001
     , A.PKNUR1035
     , A.METHOD_CODE
     , A.START_DATE
     , A.END_DATE
     , A.INPUT_ID
     , FN_ADM_USER_NM(A.INPUT_ID)
     , NVL(B.YN, 'N') YN
  FROM NUR1035 A
     , (SELECT X.HOSP_CODE
             , X.FKNUR1035 FKNUR1035
             , 'Y' YN 
          FROM NUR1036 X
         WHERE X.HOSP_CODE = :f_hosp_code
           AND X.CHECK_DATE = TRUNC(SYSDATE)
        )B
 WHERE A.HOSP_CODE = :f_hosp_code
   AND A.FKINP1001 = :f_fkinp1001
   --AND :f_date BETWEEN NVL(A.START_DATE, '1900/01/01') AND NVL(A.END_DATE, '9998/12/31')   
   AND B.FKNUR1035(+) = A.PKNUR1035
 ORDER BY A.END_DATE DESC NULLS FIRST, A.START_DATE DESC, A.METHOD_CODE DESC</value>
  </data>
  <data name="grdNUR1036.QuerySQL" xml:space="preserve">
    <value>SELECT FKNUR1035
     , CHECK_DATE
     , CHECK_TIME
     , DANGER_ACT
     , CHANGED_SKIN
     , EDEMA
     , NUMBNESS
     , SCRATCH
     , TUBE_TROUBLE
     , PETECHIA
     , INPUT_ID
     , FN_ADM_USER_NM(INPUT_ID)
     , REMARK             
  FROM NUR1036
 WHERE HOSP_CODE = :f_hosp_code
   AND FKNUR1035 = :f_fknur1035
 ORDER BY CHECK_DATE DESC, CHECK_TIME DESC</value>
  </data>
  <metadata name="layState.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>128, 17</value>
  </metadata>
  <data name="grdPalist.QuerySQL" xml:space="preserve">
    <value> SELECT A.HO_CODE1                                                              HO_CODE
     , A.BUNHO                                                                 BUNHO
     , A.SUNAME                                                                SUNAME
     , A.PKINP1001                                                             PKINP1001
     , FN_BAS_LOAD_AGE(:f_date,A.BIRTH,'')||'/'||A.SEX                   AGE_SEX
     --, NVL(A.SIL_IPWON_DATE,NVL(A.CHT_IPWON_DATE, A.IPWON_DATE))               IPWON_DATE
     , A.IPWON_DATE                                                            IPWON_DATE
     , FN_BAS_LOAD_DOCTOR_NAME(A.DOCTOR, TO_DATE(:f_date, 'YYYY/MM/DD')) DOCTOR_NAME
     , A.CYCLE_ORDER_GROUP
     , C.YN
  FROM VW_OCS_INP1001_01 A
     , BAS0250           B
     , (SELECT Z.HOSP_CODE
             , Z.FKINP1001
             , MIN(NVL(Y.YN, 'N')) YN
          FROM NUR1035 Z
             , (SELECT X.HOSP_CODE
                     , X.FKNUR1035 FKNUR1035
                     , 'Y' YN 
                  FROM NUR1036 X
                 WHERE X.HOSP_CODE = :f_hosp_code
                   AND X.CHECK_DATE = TRUNC(SYSDATE)
                )Y
         WHERE Z.HOSP_CODE = :f_hosp_code
         --  AND A.FKINP1001 = :f_fkinp1001
           AND TRUNC(SYSDATE) BETWEEN Z.START_DATE AND NVL(Z.END_DATE, '9998/12/31')   
           AND Y.FKNUR1035(+) = Z.PKNUR1035
           GROUP BY Z.HOSP_CODE, Z.FKINP1001) C
 WHERE A.HOSP_CODE     = :f_hosp_code
   AND A.HO_DONG1      = :f_ho_dong
   AND A.IPWON_DATE   &lt;= TO_DATE(:f_date, 'YYYY/MM/DD')
   AND A.JAEWON_FLAG   = 'Y'
   AND B.HOSP_CODE = A.HOSP_CODE
   AND B.HO_DONG = A.HO_DONG1
   AND B.HO_CODE = A.HO_CODE1  
   AND C.HOSP_CODE(+) = A.HOSP_CODE
   AND C.FKINP1001(+) = A.PKINP1001
   AND ((NVL(:f_a, 'N') = 'Y' and B.TEAM = 'A') OR
        (NVL(:f_b, 'N') = 'Y' and B.TEAM = 'B') OR
        (NVL(:f_c, 'N') = 'Y' and B.TEAM = 'C') OR
        (NVL(:f_d, 'N') = 'Y' and B.TEAM = 'D') OR        
        (NVL(:f_a, 'N') = 'N' AND 
         NVL(:f_b, 'N') = 'N' AND
         NVL(:f_c, 'N') = 'N' AND
         NVL(:f_d, 'N') = 'N' )
       )
    
 ORDER BY B.HO_SORT, A.BED_NO</value>
  </data>
  <metadata name="layModifyLimit.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>228, 17</value>
  </metadata>
  <metadata name="layTime.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>366, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>37</value>
  </metadata>
</root>