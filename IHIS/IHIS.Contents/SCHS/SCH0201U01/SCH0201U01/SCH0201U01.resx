<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACg
        DQAAAk1TRnQBSQFMAgEBBgEAAQkBAAEMAQABEAEAARABAAT/AQkBEAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wIAAu8TAANSJwAB7wFK
        AesB7xEAAVICegFSJwABmQFTASoB6wHvDgACUgN6AlImAAHDAXoBUwEqAesB7wsAAlIFmgJSJwABwwF6
        AVMBKgHrAe8EvAYAAVIGmgJSAQABTyYAAcMBegF0AesBbQLtAesBbQG8BQABUgaaAlIBAAJPJgABGwG8
        AbUBCQEZAf8B9AHtARIDvAIAAVIGoANPAlYBTyYAAfcCCQEZAfMB/wEZAZEDiwG8AQABUgagAU8CfQJW
        AVUBTyUAAQcCuwIZAfMBGQEIAtwBiwG8AQABUgagAU8CfQJWAVUBTyUAAQcBCQG7BBkBvAEZAQkBiwG8
        AQABUgagA08CVgFPJgABtQEZAf8BGQEJAbsBCQEHAhkBiwG8AQABUgagAlIBAAJPKAABtQL/ARkBCQG7
        AxkBiwG8AQABUgTDBFIBAAFPKgACtQHvARwB9AMZAYsBvAEAAVIDwwVSLAABtAX/AfQBGQGLAgABUgHD
        B1ItAAeyAwAIUgGaagABHAFJAgIBIQEoAXIBvAcAAf8B8AFyAUkBJwFJAXIBCAH/JgABCAFPAS4CNAQt
        AQIBHAUAAfQBcgEuAzQBMwItAXIB8wMADrwTAAHwAS4DVQE0AVUBNAMtAQIBkgMAAf8BUANVAZcBeAI0
        Ai0BTwHzAgAOrAG8BAABIAFMBwABFwEgAgABCAFPA1YBVQF4Af8BCAE0Ay0BAgG8AQAB/wGXA1YBVQEb
        Af8BCAM0AS0BcgH/AQABrAL5Af8CuwH/ArsB/wLUAf8BrAG8BAACJQFGBQABTAEgAeMCAAEIAU8DVgF4
        Av8BmQM0Ai0BcgEAAfMBTwNWAVUBeAL/AQgDNAEtAQgBAAGsAvkB/wK7Af8CuwH/AtQB/wGsAbwEAAGU
        AiUBRgMAAUYBIAHjAwABHANWAXgC/wEIA1UCNAEtASgBAAGYA1YCVQFWAXgC/wEIAzQBcgEAAawM/wGs
        AbwFAAEaAUYBJQFGAQABRgElARYEAAFVAlYBeAP/AZgBmQOYAjQBAgEAAZcBVgF4CP8BCAI0AU8BAAGs
        AvkB8wGXAlUBlwG7Af8C1AH/AawBvAYAAb0BTQMlAeMFAAFVAVYBeAn/AlUBLQEAAVUBVgF4CP8BGwJV
        AS4BAAGsAvkBnQGXAZgBwgKXAf8C1AH/AawBvAgAAU0BJQFNBgABVQJWAXgD/wEIBJkBVgFVASgBAAGX
        BlYBmAL/ARsCVgFVAU8BAAGsAv8BVQHCAv8BwgFVBP8BrAG8BwABlAMmAZoFAAF4A1YBeAL/ARsGVgFP
        AQABmAVWAXgC/wEbBFYBlwEAAawC+QFVAZgBuwH/AZgBVQH/AtQB/wGsAbwGAAF1AiYBFgFNASYBmgQA
        AQgBVQJ4AVYBeAL/AQgEVgFPARwBAAH0AVUCeAJWAQgB/wEbBFYBTwHwAQABrAL5AZ0BlwGYAcIClwH/
        AtQB/wGsAbwFAAHjAiYBFgIAAU0BJgGUAwABCAFWA3gBVgF4AfYBmARWAS4CAAH/AZgBeAGYAXgCVgGZ
        BVYBlwH/AQABrAL/AfMBnQJVAZ0B8wT/AawBvAQAAU0CJgF1BAABdQEmBAABCAFVAXgBmQJ4BVYBLgEI
        AwAB9gGXAXgBmAJ4BlYB9AIAAawI/wIAAv8BrAG8BAACJgF1DAACCAFVApgBeAJWATQBVQEIBQAB9gGY
        AVUCmAF4AVcBVgFVAZcB9AMAAawI/wIAAv8BrAG8FQABCAF4A1UBVgEICAAB/wH0AZgBlwFVAZcBmAHz
        Af8EAA6sAbxRAAFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/AQABnwH/AfwBfwQA
        AQ8B/wH4AX8EAAEHAf8B4AE/BAABAwH/AYABPwQAAYABHwGAAS8EAAHAAQ8BgAEnBAAB4AEBAYABAwQA
        AfABAAGAAQEEAAHwAQABgAEBBAAB8AEAAYABAwQAAfABAAGAAScEAAH4AQABgAEvBAAB/AEAAYABPwQA
        AfwBAQGAAT8EAAH+AQMBgAE/BAAE/wQAAfABDwHgAQ8E/wHAAQcBwAEHAQABAwL/AYABAwGAAQMBAAEB
        AecB8wEAAQEBAAEBAQABAQLjAQABAQEAAQEBAAEBAeEBxwEAAQEBAAEBAQABAQHwAY8BAAEBAQABAQEA
        AQEB+AEfAQABAQEAAQEBAAEBAf4BPwEAAQEBAAEBAQABAQH8AR8BAAEBAQABAQEAAQEB+AEPAQABAQEA
        AQEBAAEBAfABxwEAAQMBAAEBAQABAQHhAecBgAEDAYABAwEAAQEB4wH/AcABBwHAAQcBAAEBAv8B8AEf
        AeABDwEAAQEK/xYACw==
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEtcOrder.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAQBJREFUOE9jYKAm
        KK7f9B8ZI5uNTw6sDqTgzoN/cIyuAZs83AKY5L9////DMEjs25fvcFxYswMuB1IDsgykBm4zPs0wg0Aa
        YOpwGoBs87LX5f/rrjr9X3urE+4SmCFwA2D+B5mMrHnKk9j/HZ9C/1c8dPpfcszl/5wDjSiGgAzIr9r+
        HyUckP0MsrnoptP/gtMu//N2uvzPnOeMEiZg/6NHE7IBNfs9/xftdwHj/HXO/1vXpKIYgGE7zE/IhlSu
        DQLb3L05A8N2ogIR2TD0mCAYjejpAJawcEYjyETktACLFZjGlZtfo6QBjGhETqowTeiBjJ7UMfIhNo24
        MhTVMjEA1U9rI65mkaMAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnXrtOrder.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAUpJREFUOE+tk89K
        w0AQxvMCHrx41dfwWbx78lKt0FMVQT1ZLzbYmxZEDxahvXiQaAlYaI/bVlSUKqHQivin0BQk/cysHbIb
        k2LBgY/dBOY338ywhvEfIYTAJDJNE1pdSp4kYgHTRwDLSDuQWrI0UaGxgO06QMqWP39pdu9DGo0FUEUV
        EG5r/tQDQeIBvl0CkG1ywDGTnpJXBhAkcoiUGAZQcuZ9AXQSgKVBeAvqwMgBJc0dB6LvSgcQ3SGWN3YD
        F1FrjGqh1v5CxVf1eYDEeiYAWJYlB6OKAdU2pJNrZ4jLloeLJw9XDy4SawpAHQi5sW1bGyIPs3TfR+Gu
        j1Kz5ztQWmBAlANOPrkZIF93cdh0URAEiHHAMGqh5vSkyo9vOL99RbHxgrNGF0UfkNzM6qsMP8rkVg4/
        2h+dOayO/qV2DrC4khoP+Osr/wYj2y4dI+z/YwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnLabOrder.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAKNJREFUOE9jYKAq
        SD/znwEfJmgZULPX0v9YMcjgc2cO/sdvBlDR2tt//+99+O//hVf//j/+9O//55/////79x/sMqIN2PcI
        2YB/pBmw7va//3sf/YW64D8ZLrgF9AKyC36R6IK1YBdQEAb/56v/x4aJDkSw5h3WEAwCt4PA1AAZALKd
        JBeAkhkwwaCHAXHOR06jaPmBcArEksBBmmCYYB6iRAEAWVRVfKWXCbMAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="fwHosp_name.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>607, 17</value>
  </metadata>
  <metadata name="layReserList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>128, 17</value>
  </metadata>
  <data name="layReserList.QuerySQL" xml:space="preserve">
    <value>SELECT A.HANGMOG_CODE
      ,A.HANGMOG_NAME
      ,NULL                                 RESER_DATE
      ,'    '                               RESER_TIME
      ,NULL                                 D_1
      ,NULL                                 D_2
      ,NULL                                 D_3
      ,NULL                                 D_4
      ,NULL                                 D_5
      ,NULL                                 D_6
      ,NULL                                 D_7
      ,NULL                                 D_8
      ,NULL                                 D_9
      ,NULL                                 D_10
      ,NULL                                 D_11
      ,NULL                                 D_12
      ,NULL                                 D_13
      ,NULL                                 D_14
      ,NULL                                 D_15
      ,NULL                                 D_16
      ,NULL                                 D_17
      ,NULL                                 D_18
      ,NULL                                 D_19
      ,NULL                                 D_20
      ,NULL                                 D_21
      ,NULL                                 D_22
      ,NULL                                 D_23
      ,NULL                                 D_24
      ,NULL                                 D_25
      ,NULL                                 D_26
      ,NULL                                 D_27
      ,NULL                                 D_28
      ,NULL                                 D_29
      ,NULL                                 D_30
      ,NULL                                 D_31
      ,NVL(B.JUNDAL_TABLE ,A.JUNDAL_TABLE_OUT) JUNDAL_TABLE
      ,NVL(B.JUNDAL_PART,A.JUNDAL_PART_OUT) JUNDAL_PART
      ,0                                    KEY
      ,'N'                                  RESER_YN
      , ''                                  RESER_GUMSA_YN
      , ''                                  GWA_NAME
      , ''                                  GWA
      
      /*,NVL(MAX((SELECT 'Y' FROM DUAL WHERE 
                EXISTS (SELECT 'Y' FROM SCH3000 X  WHERE X.JUNDAL_PART = A.JUNDAL_PART 
                  UNION SELECT 'Y' FROM SCH3101 X  WHERE X.JUNDAL_PART = A.JUNDAL_PART))), 'N')   TIME_YN */
      , '' TIME_YN
  FROM SCH0001 C
      ,SCH0002 B
      ,OCS0103 A
 WHERE A.HOSP_CODE            = :f_hosp_code
   AND A.HANGMOG_CODE         = :f_hangmog_code
   AND B.HANGMOG_CODE      (+)= A.HANGMOG_CODE
   AND C.JUNDAL_TABLE      (+)= B.JUNDAL_TABLE
   AND C.JUNDAL_PART       (+)= B.JUNDAL_PART
   AND NVL(C.GWA_GUBUN,'%')  &lt;&gt; 'H'
ORDER BY 1, 2</value>
  </data>
  <metadata name="layHoliYN.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>252, 17</value>
  </metadata>
  <metadata name="layReserChk.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>481, 17</value>
  </metadata>
  <metadata name="layTimeList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>361, 17</value>
  </metadata>
  <data name="layTimeList.QuerySQL" xml:space="preserve">
    <value>SELECT A.RESER_DATE          RESER_DATE
      ,A.FROM_TIME           FROM_TIME
      ,A.BUNHO               BUNHO
      ,A.SUNAME              SUNAME
      ,A.HANGMOG_CODE        HANGMOG_CODE
      ,A.HANGMOG_NAME        HANGMOG_NAME
      ,A.GWA                 GWA
      ,FN_BAS_LOAD_DOCTOR_NAME(NVL(FN_OCS_LOAD_ORDER_DOCTOR(B.FKOCS), B.DOCTOR), B.ORDER_DATE) DOCTOR_NAME
      ,DECODE(B.ACTING_DATE, NULL, 'N', 'Y') ACT_YN
  FROM SCH0201 B
      ,SCH_TEMP A
 WHERE  A.HOSP_CODE    = :f_hosp_code
   AND B.HOSP_CODE(+) = A.HOSP_CODE
   AND A.IP_ADDRESS   = :q_ip_addr
   AND B.PKSCH0201(+) = A.PKSCH0201
   AND ((:f_am_pm_gubun = 'A' AND A.TO_TIME BETWEEN '0000' AND '1300')
    OR  (:f_am_pm_gubun = 'P' AND A.TO_TIME BETWEEN '1301' AND '2400'))
 ORDER BY A.FROM_TIME, A.BUNHO

/*
SELECT A.RESER_DATE          RESER_DATE
      ,A.FROM_TIME           FROM_TIME
      ,A.BUNHO               BUNHO
      ,A.SUNAME              SUNAME
      ,A.HANGMOG_CODE        HANGMOG_CODE
      ,A.HANGMOG_NAME        HANGMOG_NAME
      ,A.GWA                 GWA
  FROM SCH_TEMP A
 WHERE A.HOSP_CODE      = :f_hosp_code
   AND A.IP_ADDRESS     = :q_ip_addr
   AND ((:f_am_pm_gubun = 'A' AND A.TO_TIME BETWEEN '0000' AND '1300')
    OR  (:f_am_pm_gubun = 'P' AND A.TO_TIME BETWEEN '1301' AND '2400'))
 ORDER BY A.FROM_TIME
*/</value>
  </data>
  <metadata name="layLoadRES0101.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>745, 17</value>
  </metadata>
  <data name="layLoadRES0101.QuerySQL" xml:space="preserve">
    <value>SELECT A.HOLI_DAY,
       TO_DATE(:f_reser_date,'YYYY/MM/DD') + 24,
       A.YOIL_GUBUN,
       ltrim(to_char(rownum,'00')),
       A.DAY_GUBUN,
       FN_SCH_DAY_RESER_CHECK(:o_jundal_table, :o_jundal_part, :o_hangmog_code, A.HOLI_DAY) CNT                                          
  FROM RES0101 A
 WHERE A.HOSP_CODE = :f_hosp_code
   AND A.HOLI_DAY BETWEEN TO_DATE(:f_reser_date,'YYYY/MM/DD') AND TO_DATE(:f_reser_date,'YYYY/MM/DD') + 24
 ORDER BY A.HOLI_DAY</value>
  </data>
  <metadata name="layLoadReser.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 58</value>
  </metadata>
  <data name="layLoadReser.QuerySQL" xml:space="preserve">
    <value>SELECT B.HANGMOG_CODE                                                                        HANGMOG_CODE
      ,B.HANGMOG_NAME                                                                        HANGMOG_CODE
      ,TO_CHAR(NVL(A.RESER_DATE,A.HOPE_DATE),'YYYY/MM/DD')                                   RESER_DATE
      ,A.RESER_TIME                                                                          RESER_TIME
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 0  ,'YYYYMMDD'), 'R','')   DATE_1
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 1  ,'YYYYMMDD'), 'R','')   DATE_2
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 2  ,'YYYYMMDD'), 'R','')   DATE_3
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 3  ,'YYYYMMDD'), 'R','')   DATE_4
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 4  ,'YYYYMMDD'), 'R','')   DATE_5
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 5  ,'YYYYMMDD'), 'R','')   DATE_6
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 6  ,'YYYYMMDD'), 'R','')   DATE_7
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 7  ,'YYYYMMDD'), 'R','')   DATE_8
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 8  ,'YYYYMMDD'), 'R','')   DATE_9
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 9  ,'YYYYMMDD'), 'R','')   DATE_10
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 10 ,'YYYYMMDD'), 'R','')   DATE_11
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 11 ,'YYYYMMDD'), 'R','')   DATE_12
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 12 ,'YYYYMMDD'), 'R','')   DATE_13
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 13 ,'YYYYMMDD'), 'R','')   DATE_14
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 14 ,'YYYYMMDD'), 'R','')   DATE_15
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 15 ,'YYYYMMDD'), 'R','')   DATE_16
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 16 ,'YYYYMMDD'), 'R','')   DATE_17
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 17 ,'YYYYMMDD'), 'R','')   DATE_18
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 18 ,'YYYYMMDD'), 'R','')   DATE_19
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 19 ,'YYYYMMDD'), 'R','')   DATE_20
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 20 ,'YYYYMMDD'), 'R','')   DATE_21
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 21 ,'YYYYMMDD'), 'R','')   DATE_22
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 22 ,'YYYYMMDD'), 'R','')   DATE_23
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 23 ,'YYYYMMDD'), 'R','')   DATE_24
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 24 ,'YYYYMMDD'), 'R','')   DATE_25
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 25 ,'YYYYMMDD'), 'R','')   DATE_26
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 26 ,'YYYYMMDD'), 'R','')   DATE_27
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 27 ,'YYYYMMDD'), 'R','')   DATE_28
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 28 ,'YYYYMMDD'), 'R','')   DATE_29
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 29 ,'YYYYMMDD'), 'R','')   DATE_30
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 30 ,'YYYYMMDD'), 'R','')   DATE_31
      ,A.JUNDAL_TABLE                                                                        JUNDAL_TABLE
      ,A.JUNDAL_PART                                                                         JUNDAL_PART
      ,A.PKSCH0201                                                                           KEY
      ,'Y'                                                                                   RESER_YN
      , ''                                                                                   RESER_GUMSA_YN
      , ''                                                                                   GWA_NAME
      , ''                                                                                   GWA
      /*,NVL(MAX((SELECT 'Y' FROM DUAL WHERE 
                                                            EXISTS (SELECT 'Y' FROM SCH3000 X  WHERE X.JUNDAL_PART = A.JUNDAL_PART 
                                                              UNION SELECT 'Y' FROM SCH3101 X  WHERE X.JUNDAL_PART = A.JUNDAL_PART))), 'N')   TIME_YN */
     , '' TIME_YN     
  FROM OCS0103 B,
       SCH0201 A
 WHERE A.HOSP_CODE          = :f_hosp_code
   AND B.HOSP_CODE          = A.HOSP_CODE
   AND A.BUNHO              = :f_bunho
   AND A.RESER_DATE         IS NOT NULL
   AND NVL(A.CANCEL_YN,'N') = 'N'
   AND A.ACTING_DATE        IS NULL
   AND B.HANGMOG_CODE       (+)= A.HANGMOG_CODE
   AND :f_suname            IS NULL
UNION ALL
SELECT B.HANGMOG_CODE                                                                        HANGMOG_CODE
      ,B.HANGMOG_NAME                                                                        HANGMOG_CODE
      ,TO_CHAR(NVL(A.RESER_DATE,A.HOPE_DATE),'YYYY/MM/DD')                                   RESER_DATE
      ,A.RESER_TIME                                         RESER_TIME
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 0  ,'YYYYMMDD'), 'R','')   DATE_1
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 1  ,'YYYYMMDD'), 'R','')   DATE_2
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 2  ,'YYYYMMDD'), 'R','')   DATE_3
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 3  ,'YYYYMMDD'), 'R','')   DATE_4
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 4  ,'YYYYMMDD'), 'R','')   DATE_5
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 5  ,'YYYYMMDD'), 'R','')   DATE_6
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 6  ,'YYYYMMDD'), 'R','')   DATE_7
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 7  ,'YYYYMMDD'), 'R','')   DATE_8
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 8  ,'YYYYMMDD'), 'R','')   DATE_9
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 9  ,'YYYYMMDD'), 'R','')   DATE_10
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 10 ,'YYYYMMDD'), 'R','')   DATE_11
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 11 ,'YYYYMMDD'), 'R','')   DATE_12
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 12 ,'YYYYMMDD'), 'R','')   DATE_13
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 13 ,'YYYYMMDD'), 'R','')   DATE_14
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 14 ,'YYYYMMDD'), 'R','')   DATE_15
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 15 ,'YYYYMMDD'), 'R','')   DATE_16
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 16 ,'YYYYMMDD'), 'R','')   DATE_17
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 17 ,'YYYYMMDD'), 'R','')   DATE_18
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 18 ,'YYYYMMDD'), 'R','')   DATE_19
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 19 ,'YYYYMMDD'), 'R','')   DATE_20
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 20 ,'YYYYMMDD'), 'R','')   DATE_21
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 21 ,'YYYYMMDD'), 'R','')   DATE_22
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 22 ,'YYYYMMDD'), 'R','')   DATE_23
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 23 ,'YYYYMMDD'), 'R','')   DATE_24
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 24 ,'YYYYMMDD'), 'R','')   DATE_25
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 25 ,'YYYYMMDD'), 'R','')   DATE_26
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 26 ,'YYYYMMDD'), 'R','')   DATE_27
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 27 ,'YYYYMMDD'), 'R','')   DATE_28
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 28 ,'YYYYMMDD'), 'R','')   DATE_29
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 29 ,'YYYYMMDD'), 'R','')   DATE_30
      ,DECODE(TO_CHAR(A.RESER_DATE,'YYYYMMDD'), TO_CHAR(TO_DATE(:f_reser_date,'YYYY/MM/DD') + 30 ,'YYYYMMDD'), 'R','')   DATE_31
      ,A.JUNDAL_TABLE                                                                        JUNDAL_TABLE
      ,A.JUNDAL_PART                                                                         JUNDAL_PART
      ,A.PKSCH0201                                                                           KEY
      ,'Y'                                                                                   RESER_YN
      , ''                                                                                   RESER_GUMSA_YN
      , ''                                                                                   GWA_NAME
      , ''                                                                                   GWA
      , NVL((SELECT 'Y' FROM DUAL WHERE 
                 EXISTS (SELECT 'Y' FROM SCH3000 X  WHERE X.JUNDAL_PART = A.JUNDAL_PART 
                          UNION 
                         SELECT 'Y' FROM SCH3101 Y  WHERE Y.JUNDAL_PART = A.JUNDAL_PART)), 'N')   TIME_YN  
  FROM OCS0103 B,
       SCH0201 A
 WHERE A.HOSP_CODE          = :f_hosp_code
   AND B.HOSP_CODE          = A.HOSP_CODE
   AND A.SUNAME             = :f_suname
   AND A.RESER_DATE         IS NOT NULL
   AND NVL(A.CANCEL_YN,'N') = 'N'
   AND A.ACTING_DATE        IS NULL
   AND B.HANGMOG_CODE       (+)= A.HANGMOG_CODE
   AND :f_bunho             IS NULL</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>76</value>
  </metadata>
</root>