import "rpc.proto";
import "nuro_model.proto";
import "common_model.proto";
import "orca_model.proto";
import "system_service.proto";

option java_package = "nta.med.service.ihis.proto";
option java_outer_classname = "NuroServiceProto";
option (version) = "1.0.0";
option (service) = "nuro";

//Nuro Patient List request
message NuroPatientListRequest {
    required string hospital_code = 1;
    required string coming_date = 2;
    required string department_code = 3;
    required string doctor_code = 4;
    required string patient_code = 5;
    required string reception_type = 6;
    required string exam_status = 7;
    required string coming_status = 8;
    required string current_system_id = 9;
}

//Nuro Patient List response
message NuroPatientListResponse {
    repeated NuroPatientListItemInfo patient_list_item = 1;
}

// NURO Make deparment Combo Request
message NuroMakeDeptComboRequest {
}

//Nuro Make deparment Combo response
message NuroMakeDeptComboResponse {
    repeated ComboListItemInfo dept_combo_item = 1;
}

// NURO Out order status Request
message NuroOutOrderStatusRequest {
    required string comming_date = 1;
    required string deparment_code = 2;
    required string patient_code = 3;
}

// NURO Out order status response
message NuroOutOrderStatusResponse {
    repeated NuroOutOrderStatusInfo out_order_status_list_item = 1;
}

// NURO Combo Time Request
message NuroComboTimeRequest {
    required string code_type = 1;
}

// NURO Combo Time Response
message NuroComboTimeResponse {
    repeated ComboListItemInfo combo_time_item = 1;
}

// NURO Reception type List request
message ComboListByCodeTypeRequest {
    required string code_type      = 1;
    required bool is_all           = 2;
    optional string hosp_code_link = 3;
	optional bool tab_is_all       = 4;
}

// NURO Reception type List response

// NURO Patient detail list request
message NuroPatientDetailListRequest {
    required string patient_code = 1;
    required string coming_date = 2;
}

// NURO Patient detail list response
message NuroPatientDetailListResponse {
    repeated NuroPatientDetailListItemInfo patient_detail_list_item = 1;
}

// NURO Patient insurance list request
message NuroPatientInsuranceListRequest {
    required string patient_code = 1;
    required string coming_date = 2;
}

// NURO Patient insurance list response
message NuroPatientInsuranceListResponse {
    repeated NuroPatientInsuranceListItemInfo patient_insur_list_item = 1;
}

//NURO Patient comment list request
message NuroPatientCommentListRequest {
    required string patient_code = 1;
}

//NURO Patient comment list response
message NuroPatientCommentListResponse {
    repeated NuroPatientCommentListItemInfo patient_comment_list_item = 1;
}

message NuroSearchPatientInfoRequest {
    required string patient_code = 1;
}

message NuroSearchPatientInfoResponse {
    repeated NuroSearchPatientInfo patient_info_item = 1;
}

message NuroCheckBookingRequest {
    required string patient_code = 1;
    required string reser_date= 2;
}

message NuroCheckBookingResponse {
    repeated NuroCheckBookingInfo check_booking_info = 1;
}

// NURO NUR1001R98 Inspection Order Request
message NuroInspectionOrderRequest {
    required string patient_code = 1;
    required string reser_date = 2;
}

// NURO NUR1001R98 Inspection Order Response
message NuroInspectionOrderResponse {
    repeated NuroInspectionOrderInfo inspection_order_info = 1;
}

// NURO NUR1001R98 Inspection Order Get Info Text Request
message NuroInspectionOrderGetInfoTextRequest {
    required string code_type =1;
}

// NURO NUR1001R98 Inspection Order Get Info Text Response
message NuroInspectionOrderGetInfoTextResponse {
    repeated string info_text_item = 1;
}

// NURO NUR1001R98 Inspection Order Get Reser Move Name Request
message NuroInspectionOrderGetReserMoveNameRequest {
    required string patient_code = 1;
    required string reser_date = 2;
    required string department_code = 3;
    required string reser_yn = 4;
    required string row_num = 5;
}

// NURO NUR1001R98 Inspection Order Get Reser Move Name Response
message NuroInspectionOrderGetReserMoveNameResponse {
    optional string reser_move_name = 1;
}

// NUR1001R98 Group 
message NUR1001R98LayReserInfoQueryEndRequest {
	optional string patient_code = 1;
	optional string reser_date = 2;
	repeated DataStringListItemInfo department_code = 3;
	optional string reser_yn = 4;
	optional string row_num = 5;
	optional string code_type = 6;
	repeated DataStringListItemInfo reser_part = 7;
	optional string code_type_getInfoText = 8;
}
message NUR1001R98LayReserInfoQueryEndResponse {
	repeated DataStringListItemInfo reser_move_name = 1;
	optional string tel_item = 2;
	repeated DataStringListItemInfo code_name_item = 3;
	repeated DataStringListItemInfo info_text_item = 4;
}

message NuroManagePatientRequest{
    required string patient_code = 1;
}

message NuroManagePatientResponse{
    repeated NuroManagePatientInfo manage_patient_item = 1;
}

message NuroCboTelTypeRequest {
    required string code_type = 1;
}

message NuroCboTelTypeResponse {
    repeated  ComboListItemInfo combo_item = 1;
}

message NuroCboZipCodeRequest{
	required string zip_code1 = 1;
	required string zip_code2 = 2;
}

message NuroCboZipCodeResponse{
	repeated NuroCboZipCodeInfo zip_code_info = 1;
}

message NuroOUT1101Q01FwkDoctorRequest {
    required string gwa = 1;
    required string find1 = 2;
}

message NuroOUT1101Q01FwkDoctorResponse {
    repeated NuroOUT1101Q01FwkDoctorInfo nuro_fwk_doctor_info_list = 1;
}

message NuroOUT1101Q01GridInfoRequest {
    required string naewon_date = 1;
    required string gwa = 2;
    required string doctor = 3;
}

message NuroOUT1101Q01GridInfoResponse {
    repeated NuroOUT1101Q01GridInfo  grid_info_list = 1;
}

message NuroOUT1101Q01PrintNameInfoRequest {
}


message NuroOUT1101Q01PrintNameInfoResponse {
    repeated NuroOUT1101Q01PrintNameInfo print_name_info_list = 1;
}

message JapanDateInfoRequest {
    required string naewon_date = 1;
}

message JapanDateInfoResponse {
    repeated JapanDateInfo jp_date_info = 1;
}

message NuroOUT1101Q01DoctorNameInfoRequest {
    required string gwa = 1;
    required string doctor = 2;
}

message NuroOUT1101Q01DoctorNameInfoResponse {
    required NuroOUT1101Q01DoctorNameInfo doctor_name_info = 1;
}

message NuroManagePatientUpdateRequest{
    required NuroManagePatientUpdateData patient_data = 1;
}

message NuroManagePatientUpdateResponse{
    required bool result_update = 1;
    optional string msg =2;
}

// NURO NUR2001U04 Department List Request
message NuroNUR2001U04DepartmentListRequest {
    required string coming_date = 1;
}

message NUR2001U04CboDoctorRequest{
	optional string gwa = 1;
}

// NURO NUR2001U04 Department List Response
message NuroNUR2001U04DepartmentListResponse {
    repeated ComboListItemInfo dept_list_item = 1;
}

// NURO NUR2001U04 Coming Status Request
message NuroNUR2001U04ComingStatusRequest {
	required string patient_code = 1;
	optional string coming_date = 2;
	optional string department_code = 3;
	optional string doctor_code = 4;
	optional string coming_type = 5;
	optional string old_reception_no = 6;
	optional string exam_status = 7;
}

// NURO NUR2001U04 Coming Status Response
message NuroNUR2001U04ComingStatusResponse {
    optional string result = 1;
}

// NURO NUR2001U04 Existing Key Status Request
message NuroNUR2001U04ExistingKeyStatusRequest {
    required string pkout1001 = 1;
}

// NURO NUR2001U04 Existing Key Status Response
message NuroNUR2001U04ExistingKeyStatusResponse {
    optional string result = 1;
}

// NURO NUR2001U04 Doctor Name Request
message NuroNUR2001U04DoctorNameRequest {
    required string doctor_code = 1;
    required string date = 2;
}

// NURO NUR2001U04 Doctor Name Response
message NuroNUR2001U04DoctorNameResponse {
    repeated DataStringListItemInfo doctor_name = 1;
}

// NURO NUR2001U04 Foreign Key Request
message NuroNUR2001U04ForeignKeyRequest {
    optional string coming_date = 1;
    optional string patient_code = 2;
    optional string department_code = 3;
    optional string doctor_code = 4;
    optional string coming_type = 5;
    optional string reception_no = 6;
}

// NURO NUR2001U04 Foreign Key Request
message NuroNUR2001U04ForeignKeyResponse {
    repeated DataStringListItemInfo result = 1;
}

// NURO NUR2001U04 Coming Status Update Request
message NuroNUR2001U04ComingStatusUpdateRequest {
    required string coming_status = 1;
    required string pkout1001 = 2;
}

// NURO NUR2001U04 Patient Info Update Request
message NuroNUR2001U04PatientInfoUpdateRequest {
    required string upd_id = 1;
    required string coming_status = 2;
    required string arrive_time = 3;
    required string reception_type = 4;
    required string pkout1001 = 5;
}

// NURO NUR2001U04 Patient Info Delete Request
message NuroNUR2001U04PatientInfoDeleteRequest {
    required string pkout1001 = 1;
}

// NURO NUR2001U04 Patient Insurance Info Delete Request
message NuroNUR2001U04PatientInsuranceInfoDeleteRequest {
    required string pkout1001 = 1;
}

// Update Response

// NURO PROC Ocso Doctor Change2 Request
message NuroProcOcsoDoctorChange2Request {
        optional string pkout1001 = 1;
        optional string to_doctor = 2;
        optional string to_clinic_code = 3;
}

// NURO PROC Ocso Doctor Change2 Response
message NuroProcOcsoDoctorChange2Response {
        required string flag = 1;
}

// NURO NUR2001U04 TRANS Patient Info Request
message NuroNUR2001U04TransPatientInfoRequest {
        optional string iud_gubun = 1;
        optional string user = 2;
        optional string naewon_date = 3;
        optional string bunho = 4;
        optional string gwa = 5;
        optional string gubun = 6;
        optional string tuyak_ilsu = 7;
        optional string doctor = 8;
        optional string in_out = 9;
        optional string chart_gwa = 10;
        optional string special_yn = 11;
        optional string toiwon_date = 12;
        optional string pkout1001 = 13;
}
// NUR2001U04 Save Layout Request
message NUR2001U04SaveLayoutRequest
{
	optional string user_id = 1;
	optional string hosp_code = 2;
	repeated NUR2001U04SaveLayoutInfo save_layout_item = 3;
}
// NURO NUR1001R98 Page Count Request
message NuroNUR1001R98PageCountRequest {
    optional string code_type = 1;
    optional string code = 2;
}

// NURO NUR1001R98 Page Count Response
message NuroNUR1001R98PageCountResponse {
    optional string count = 1;
}

// NURO NUR1001R98 Inspection Order Get Tel Request
message NuroInspectionOrderGetTelRequest {
    required string reser_date = 1;
}

// NURO NUR1001R98 Inspection Order Get Tel Response
message NuroInspectionOrderGetTelResponse {
    optional string tel_item = 1;
}

message NuroInspectionOrderGetMaxCodeNameRequest {
    required string code_type = 1;
    required string reser_part = 2;
}

message NuroInspectionOrderGetMaxCodeNameResponse {
    repeated string code_name_item = 1;
}

// NURO Patient Reception History List Request
message NuroPatientReceptionHistoryListRequest {
    required string patient_code = 1;
}

// NURO Patient Reception  History List Response
message NuroPatientReceptionHistoryListResponse {
    repeated NuroPatientReceptionHistoryListItemInfo patient_reception_history_list_item = 1;
}

// NURO RES1001U00 User Name Request
message NuroRES1001U00UserNameRequest {
    required string user_id        = 1;
    optional string hosp_code_link = 2;
	optional bool tab_is_all       = 3;
}

// NURO RES1001U00 User Name Response
message NuroRES1001U00UserNameResponse {
    required string user_name = 1;
}

// NURO RES1001U00 Department List Request
message NuroRES1001U00DepartmentListRequest {
}

// Combo List Response 
message ComboListResponse {
    repeated ComboListItemInfo combo_list_item = 1;
}

// NURO RES1001U00 Doctor Exam Status Request
message NuroRES1001U00DoctorExamStatusRequest {
	optional string type           = 1;
    optional string exam_pre_date  = 2;
    optional string exam_pre_time  = 3;
    optional string doctor_code    = 4;
    optional string hosp_code_link = 5;
	optional bool tab_is_all       = 6;
}

// NURO RES1001U00 Doctor Exam Status Response
message NuroRES1001U00DoctorExamStatusResponse {
    required string doctor_exam_status = 1;
}

// NURO RES1001U00 Doctor Reservation Status List Request
message NuroRES1001U00DoctorReservationStatusListRequest {
    optional string doctor_code     = 1;
    optional string department_code = 2;
    optional string hosp_code_link  = 3;
	optional bool tab_is_all        = 4;
}

// NURO RES1001U00 Doctor Reservation Status List Response
message NuroRES1001U00DoctorReservationStatusListResponse {
    repeated NuroRES1001U00DoctorReservationStatusListItemInfo doctor_res_status_list_item = 1;
}

// NURO RES1001U00 Reservation Schedule Condition 1 List Request
message NuroRES1001U00ReservationScheduleCondition1ListRequest {
    optional string doctor_code    = 1;
    optional string exam_pre_date  = 2;
    optional string hosp_code_link = 3;
	optional bool tab_is_all       = 4;
}

// NURO RES1001U00 Reservation Schedule Condition 2 List Request
message NuroRES1001U00ReservationScheduleCondition2ListRequest {
    optional string doctor_code     = 1;
    optional string exam_pre_date   = 2;
    optional string hosp_code_link  = 3;
	optional bool tab_is_all        = 4;
}

// NURO RES1001U00 Reservation Schedule Condition List Response
message NuroRES1001U00ReservationScheduleConditionListResponse {
    repeated NuroRES1001U00ReservationScheduleConditionListItemInfo res_schedule_list_item = 1;
}

// NURO RES1001U00 Average Time List Request
message NuroRES1001U00AverageTimeListRequest {
    optional string doctor_code    = 1;
    optional string exam_pre_date  = 2;
    optional string hosp_code_link = 3;
	optional bool tab_is_all       = 4;
}

// NURO RES1001U00 Average Time List Response
message NuroRES1001U00AverageTimeListResponse {
    repeated NuroRES1001U00AverageTimeListItemInfo avg_time_list_item = 1;
}

// NURO RES1001U00 Reservation Schedule List Request
message NuroRES1001U00ReservationScheduleListRequest {
    optional string exam_pre_date   = 1;
    optional string department_code = 2;
    optional string doctor_code     = 3;
    optional string from_time       = 4;
    optional string to_time         = 5;
    optional string avg_time        = 6;
    optional string hosp_code_link  = 7;
	optional bool tab_is_all        = 8;
}

// NURO RES1001U00 Reservation Schedule List Response
message NuroRES1001U00ReservationScheduleListResponse {
    repeated NuroRES1001U00ReservationScheduleListItemInfo res_schedule_list_item = 1;
}

// NURO RES1001U00 Type Request
message NuroRES1001U00TypeRequest {
    optional string patient_code = 1;
    optional string department_code = 2;
}

// NURO RES1001U00 Type Response
message NuroRES1001U00TypeResponse {
    optional string type = 1;
}

// NURO RES1001U00 Doctor Name Request
message NuroRES1001U00DoctorNameRequest {
    optional string patient_code = 1;
    optional string department_code = 2;
    optional string exam_pre_date = 3;
    optional string exam_pre_time = 4;
}

// NURO RES1001U00 Doctor Name Response
message NuroRES1001U00DoctorNameResponse {
    optional string doctor_name = 1;
}

// NURO RES1001U00 Checking Reservation Request
message NuroRES1001U00CheckingReservationRequest {
    optional string doctor_code = 1;
    optional string exam_pre_date = 2;
    optional string exam_pre_time = 3;
    optional string input_type = 4;
}

// NURO RES1001U00 Checking Reservation Response
message NuroRES1001U00CheckingReservationResponse {
    optional string result = 1;
}

// NURO RES1001U00 Reception Number Request
message NuroRES1001U00ReceptionNumberRequest {
    optional string patient_code = 1;
    optional string exam_pre_date = 2;
}

// NURO RES1001U00 Reception Number Response
message NuroRES1001U00ReceptionNumberResponse {
    optional string reception_no = 1;
}

// NURO RES1001U00 Checking Patient Existence Request
message NuroRES1001U00CheckingPatientExistenceRequest {
    optional string patient_code    = 1;
    optional string pkout1001       = 2;
    optional string hosp_code_link  = 3;
}

// NURO RES1001U00 Checking Patient Existence Response
message NuroRES1001U00CheckingPatientExistenceResponse {
    optional string result = 1;
}

// NURO RES1001U00 Reservation OUT0123 Update Request
message NuroRES1001U00ReservationOut0123UpdateRequest {
    optional string user_id         = 1;
    optional string reser_comment   = 2;
    optional string reser_type      = 3;
    optional string patient_code    = 4;
    optional string pkout1001       = 5;
    optional string hosp_code_link  = 6;
}

// NURO RES1001U00 Reservation OUT0123 Insert Request
message NuroRES1001U00ReservationOut0123InsertRequest {
    optional string user_id          = 1;
    optional string patient_code     = 2;
    optional string department_code  = 3;
    optional string doctor_code      = 4;
    optional string exam_pre_date    = 5;
    optional string exam_pre_time    = 6;
    optional string reser_comment    = 7;
    optional string pkout1001        = 8;
    optional string reser_type       = 9;
    optional string hosp_code_link   = 10;
}

// NURO RES1001U00 Reservation OUT1001 Insert Request
message NuroRES1001U00ReservationOut1001InsertRequest {
    optional string user_id = 1;
    optional string pkout1001 = 2;
    optional string exam_pre_date = 3;
    optional string patient_code = 4;
    optional string department_code = 5;
    optional string type = 6;
    optional string doctor_code = 7;
    optional string changgu = 8;
    optional string exam_pre_time = 9;
    optional string exam_status = 10;
    optional string reser_type = 11;
    optional string reception_no = 12;
    optional string input_type = 13;
}

// NURO RES1001U00 Checking Hangmog Code Request
message NuroRES1001U00CheckingHangmogCodeRequest {
    optional string patient_code = 1;
    optional string exam_pre_date = 2;
    optional string department_code = 3;
    optional string doctor_code = 4;
}

// NURO RES1001U00 Checking Hangmog Code Response
message NuroRES1001U00CheckingHangmogCodeResponse {
    optional string result = 1;
}

// NURO RES1001U00 Reservation OUT1001 Update Request
message NuroRES1001U00ReservationOut1001UpdateRequest {
    optional string user_id = 1;
    optional string exam_pre_date = 2;
    optional string exam_pre_time = 3;
    optional string reception_no = 4;
    optional string pkout1001 = 5;
}

// NURO RES1001U00 Reservation OUT0123 Delete Request
message NuroRES1001U00ReservationOut0123DeleteRequest {
    optional string patient_code = 1;
    optional string pkout1001 = 2;
}

// NURO RES1001U00 Reservation OUT1001 Delete Request
message NuroRES1001U00ReservationOut1001DeleteRequest {
    optional string pkout1001 = 1;
}

// NURO RES1001U00 Doctor Reservation Date List Request
message NuroRES1001U00DoctorReservationDateListRequest {
    optional string doctor_code    = 1;
    optional string start_date     = 2;
    optional string end_date       = 3;
    optional string hosp_code_link = 4;
	optional bool tab_is_all       = 5;
}

// NURO RES1001U00 Doctor Reservation Date List Response
message NuroRES1001U00DoctorReservationDateListResponse {
    repeated NuroRES1001U00DoctorReservationDateListItemInfo doctor_res_date_list_item = 1;
}

// NURO RES1001U00 Resered Data List Request
message NuroRES1001U00ReseredDataListRequest {
    optional string department_code   = 1;
    optional string doctor_code       = 2;
    optional string exam_pre_date     = 3;
    optional string from_time         = 4;
    optional string reser_from_time   = 5;
    optional string to_time           = 6;
    optional string reser_to_time     = 7;
    optional string hosp_code_link    = 8;
	optional bool tab_is_all          = 9;
}

// NURO RES1001U00 Resered Data List Response
message NuroRES1001U00ReseredDataListResponse {
    repeated NuroRES1001U00ReseredDataListItemInfo resered_data_list_item = 1;
}

// NURO RES1001U00 Reser List Request
message NuroRES1001U00ReserListRequest {
    optional string patient_code   = 1;
    optional string hosp_code_link = 2;
	optional bool tab_is_all       = 3;
}

// NURO RES1001U00 Reser List Response
message NuroRES1001U00ReserListResponse {
    repeated NuroRES1001U00ReserListItemInfo reser_list_item = 1;
}

// NURO RES1001U00 Doctor Reser List Request
message NuroRES1001U00DoctorReserListRequest {
    optional string patient_code   = 1;
    optional string hosp_code_link = 2;
	optional bool tab_is_all       = 3;
}

// NURO RES1001U00 Doctor Reser List Response
message NuroRES1001U00DoctorReserListResponse {
    repeated NuroRES1001U00DoctorReserListItemInfo doctor_reser_list_item = 1;
}
//SaveLayout
message RES1001U00SaveLayoutItemRequest
{
	optional string user_id                           = 1;
	repeated RES1001U00SaveLayoutItemInfo layout_item = 2;
	optional string hosp_code_link                    = 3;
	optional bool tab_is_all                          = 4;
	optional bool is_mss_request 					  = 5;
	optional bool is_ext_accounting					  = 6;
	optional string hosp_code						  = 7;
}
message RES1001U00SaveLayoutItemResponse
{
	required bool result = 1;
    optional string err_code = 2;
    optional string doctor_name = 3;
}
//SaveLayout Modify
message RES1001U00FrmModifySaveLayoutRequest
{
	optional string user_id                                     = 1;
	repeated RES1001U00FrmModifySaveLayoutInfo save_layout_item = 2;
	optional string hosp_code_link                              = 3;
}
message RES1001U00FrmModifySaveLayoutResponse
{
	required bool result = 1;
	optional string err_code = 2;
	optional string doctor_name = 3;
}
//RES1001U00PrIFSMakeYoyakuRequest
message RES1001U00PrIFSMakeYoyakuRequest
{
	optional string hosp_code            = 1;
	optional string pkout1001            = 2;
	optional string proc_gubun           = 3;
	optional string yoyaku_gubun         = 4;
	optional string io_gubun             = 5;
	optional string user_id              = 6;
	optional string bunho                = 7;
	optional string gwa                  = 8;
	optional string doctor               = 9;
	optional string naewon_date          = 10;
	optional string jubsu_time           = 11;
}
message RES1001U00PrIFSMakeYoyakuResponse
{
	optional string pkifs1002 = 1;
	optional string err_msg = 2;
}

message RES1001U00MapingCodeRequest
{
	optional string gwa            = 1;
	optional string doctor         = 2;
	optional string hosp_code_link = 3;
	optional bool tab_is_all       = 4;
}

message RES1001U00MapingCodeResponse
{
	repeated RES1001U00MapingCodeInfo list_item = 1;
}

//Execute PR_RES_DOCTOR_SCHEDULE_NEW
message NuroRES1001U00PRDoctorScheduleNewRequest {
	optional string i_doctor       = 1;
	optional string i_yymm         = 2;
	optional string hosp_code_link = 3;
	optional bool tab_is_all       = 4;
}

message RES1001U00CheckUsingOrcaRequest {
	optional string hosp_code_link = 1;
}

message RES1001U00CheckUsingOrcaResponse {
	optional string acc_type       = 1;
	optional string orca_ip        = 2;
	optional string orca_user      = 3;
	optional string orca_password  = 4;
}

message RES1001U00CheckJinryoYnRequest{
	optional string hosp_code      = 1;
	optional string doctor         = 2;
	optional string naewon_date    = 3;
	optional string jubsu_time     = 4;
}
message RES1001U00CheckJinryoYnResponse{
	optional string jinryo_yn      = 1;
}

message StoredProcedureResponse {
	required bool result = 1;
}

//OUT0101U02 Grid Comment Request
message NuroOUT0101U02GridCommentRequest {
	required string patient_code = 1;
 }

// OUT0101U02 Grid Comment Response 
 message NuroOUT0101U02GridCommentResponse {
 	repeated NuroOUT0101U02GridCommentInfo grid_comment_item = 1;
 }

 //NURO OUT0101U02 Grid Boheom Request
 message  NuroOUT0101U02GridBoheomRequest
 {
 	required string patient_code = 1;
 }

 //NURO OUT0101U02 Grid Boheom Response
 message NuroOUT0101U02GridBoheomResponse
 {
 	repeated NuroOUT0101U02GridBoheomInfo grid_boheom_item = 1;
 }

 //NURO OUT0101U02 Grid Gongbi List Request
 message NuroOUT0101U02GridGongbiListRequest
 {
 	required string patient_code = 1;
 }

  //NURO OUT0101U02 Grid Gongbi List Response
message NuroOUT0101U02GridGongbiListResponse
 {
 	repeated NuroOUT0101U02GridGongbiListInfo grid_gongbi_list_item = 1;
 }

 //NURO OUT0101U02 Grid Patient Request
 message NuroOUT0101U02GridPatientRequest
 {
  required string patient_code = 1;
 }

 // NURO OUT0101U02 Grid Patient Response
message NuroOUT0101U02GridPatientResponse
{
 	repeated NuroOUT0101U02GridPatientInfo grid_patien_item = 1;
}

//NURO OUT0101U02 Get Insurance Request
message NuroOUT0101U02GetInsuranceRequest
{
	required string law_no = 1;
}

//NURO OUT0101U02 Get Insurance Response
message NuroOUT0101U02GetInsuranceResponse
{
	repeated NuroOUT0101U02GetInsuranceCode insurance_code_item = 1;
}

//NURO OUT0101U02 Get BirthDay Request
message NuroOUT0101U02GetBirthDayRequest
{
 	required string sys_date = 1;
 	required string birth = 2;
}

//NURO OUT0101U02 Get BirthDay Response
message NuroOUT0101U02GetBirthDayResponse
{
	required string birth_day = 1;
}

//NURO OUT0101U02 Get Type Request
message NuroOUT0101U02GetTypeRequest
{
	optional string johap_gubun = 1;
 	optional string find1 = 2;
}

//NURO OUT0101U02 Get Type Response
message NuroOUT0101U02GetTypeResponse
{
 	repeated NuroOUT0101U02GetType type_item = 1;
}

//NURO OUT0101U02 Get Insurance2 Request
message NuroOUT0101U02GetInsurance2Request
{
 	optional string find1 = 1;
}

//NURO OUT0101U02 Get Insurance2 Response
message NuroOUT0101U02GetInsurance2Response
{
 	repeated NuroOUT0101U02GetInsuranceInfo2 insurance_info = 1;
}

//NURO OUT0101U02 Get Type Name Request
message NuroOUT0101U02GetTypeNameRequest
{
 	optional  string type_code = 1;
}

////NURO OUT0101U02 Get Type Name Response
message NuroOUT0101U02GetTypeNameResponse
{
	optional string type_name = 1;
}

//NURO OUT0101U02 Get Gaein Request
message NuroNuroOUT0101U02GetGaeinRequest{
	optional string johap = 1;
    optional string gaein = 2;
}

//NURO OUT0101U02 Get Gaein Response
message NuroNuroOUT0101U02GetGaeinResponse{
	repeated DataStringListItemInfo gaein_list = 1;
}

// NURO OUT0101U02 Get Insurance Name Request
message NuroOUT0101U02GetInsuranceNameRequest
{
 	optional string gongbi_code = 1;
}

// NURO OUT0101U02 Get Insurance Name Response
message NuroOUT0101U02GetInsuranceNameResponse
{
	optional string gongbi_name = 1;
}

//NURO OUT0101U02 Get Johap Request
message NuroOUT0101U02GetJohapRequest
{
	 required string johap = 1;
	 required string date = 2;
}

//NURO OUT0101U02 Get Johap Response
message NuroOUT0101U02GetJohapResponse
{
	repeated NuroOUT0101U02GetJohapInfo johap_item = 1;
}

message NuroRES0102U00GrdRES0103Request{
    required string doctor = 1;
    required string date = 2;
    optional string hosp_code = 3;
}

message NuroRES0102U00GrdRES0103Response{
    repeated NuroRES0102U00GrdRES0103Info grid_info_list = 1;
}

message NuroRES0102U00CboDoctorRequest{
    required string gwa = 1;
    required string app_date = 2;
    optional string hosp_code = 3;
}

message NuroRES0102U00CboDoctorResponse{
    repeated ComboListItemInfo cbo_item_list = 1;
}

message NuroRES0102U00GrdRES0102Request{
    required string doctor = 1;
    optional string hosp_code = 2;
}

message NuroRES0102U00GrdRES0102Response{
    repeated NuroRES0102U00GrdRES0102Info grid_info_list = 1;
}

message NuroRES0102U00CboGwaRoomRequest{
    required string gwa = 1;
    required string date = 2;
    optional string hosp_code = 3;
}

message NuroRES0102U00CboGwaRoomResponse{
    repeated ComboListItemInfo cbo_item_list = 1;
}

message NuroRES0102U00ChkHyujinRequest{
    required string start_date = 1;
    required string end_date = 2;
    required string doctor = 3;
    optional string hosp_code = 4;
}

message NuroRES0102U00ChkHyujinResponse{
    optional string check = 1;
}

message NuroRES0102U00CboGwaRequest{
    required string app_date       = 1;
    optional string hosp_code      = 2;
    optional string hosp_code_link = 3;
	optional bool tab_is_all       = 4;
}

message NuroRES0102U00CboGwaResponse{
    repeated ComboListItemInfo cbo_item_info = 1;
}

message CboAvgTimeRequest{
	optional string hosp_code = 1;
}

message CboAvgTimeResponse{
 	repeated CboAvgTimeInfo avg_time_item = 1;
}

message NuroRES0102U00GridDoctorRequest{
  	required string doctor = 1;
  	optional string hosp_code = 2;
}

message NuroRES0102U00GridDoctorResponse{
 	repeated NuroRES0102U00GridDoctorInfo doctor_item = 1;
}

message NuroRES0102U00GetDoctorByJinryoDateRequest{
	required string doctor = 1;
 	required string jinryo_pre_date = 2;
	required bool by_res_pm = 3;
	optional string hosp_code = 4;
}

message NuroRES0102U00GetDoctorResponse{
 	repeated NuroRES0102U00GetDoctorInfo doctor_item = 1;
}

message NuroRES0102U00GetDoctorByStarDateRequest{
 	required string doctor = 1;
 	required string start_date = 2;
 	optional string hosp_code = 3;
}

message NuroRES0102U00GetDoctorInBetweenDateRequest{
 	required string doctor = 1;
 	required string start_date = 2;
 	optional string hosp_code = 3;
}

message NuroRES0102U00CheckDoctorReq1Request{
    required string start_date = 1;
    required string doctor = 2;
    optional string hosp_code = 3;
}

message NuroRES0102U00CheckDoctorResponse{
    optional string check = 1;
}

message NuroRES0102U00CheckDoctorJinryoRequest{
    required string start_date = 1;
    required string doctor = 2;
}

message NuroRES0102U00CheckDoctorJinryoResponse{
    optional string check = 1;
}

message NuroRES0102U00CheckDoctorReq2Request{
    required string start_date = 1;
    required string doctor = 2;
}

message NuroRES0102U00CheckDoctorReq3Request{
    required string start_date = 1;
    required string doctor = 2;
    optional string hosp_code = 3;
}

message NuroRES0102U00UpdateRES0102Req1Request{
    required string start_date = 1;
    required string doctor = 2;
    optional string hosp_code = 3;
}

message NuroRES0102U00DeleteRES0102Request{
    required string start_date = 1;
    required string doctor = 2;
    optional string hosp_code = 3;
}

message NuroRES0102U00InsertRES0102Request{
    optional string user_id = 1;
	optional string doctor             = 2;
	optional string avg_time           = 3;
	optional string am_start_hhmm1     = 4;
	optional string am_start_hhmm5     = 5;
	optional string am_end_hhmm1       = 6;
	optional string am_end_hhmm5       = 7;
	optional string pm_start_hhmm1     = 8;
	optional string pm_start_hhmm5     = 9;
	optional string pm_end_hhmm1       = 10;
	optional string pm_end_hhmm5       = 11;
	optional string am_gwa_room1       = 12;
	optional string am_gwa_room5       = 13;
	optional string pm_gwa_room1       = 14;
	optional string pm_gwa_room5       = 15;
	optional string res_am_start_hhmm1 = 16;
	optional string res_am_start_hhmm5 = 17;
	optional string res_am_end_hhmm1   = 18;
	optional string res_am_end_hhmm5   = 19;
	optional string res_pm_start_hhmm1 = 20;
	optional string res_pm_start_hhmm5 = 21;
	optional string res_pm_end_hhmm1   = 22;
	optional string res_pm_end_hhmm5   = 23;
	optional string doc_res_limit = 24;
	optional string gwa                = 25;
	optional string jinryo_break_yn    = 26;
	optional string am_start_hhmm2     = 27;
	optional string am_start_hhmm6     = 28;
	optional string am_end_hhmm2       = 29;
	optional string am_end_hhmm6       = 30;
	optional string pm_start_hhmm2     = 31;
	optional string pm_start_hhmm6     = 32;
	optional string pm_end_hhmm2       = 33;
	optional string pm_end_hhmm6       = 34;
	optional string am_gwa_room2       = 35;
	optional string am_gwa_room6       = 36;
	optional string pm_gwa_room2       = 37;
	optional string pm_gwa_room6       = 38;
	optional string res_am_start_hhmm2 = 39;
	optional string res_am_start_hhmm6 = 40;
	optional string res_am_end_hhmm2   = 41;
	optional string res_am_end_hhmm6   = 42;
	optional string res_pm_start_hhmm2 = 43;
	optional string res_pm_start_hhmm6 = 44;
	optional string res_pm_end_hhmm2   = 45;
	optional string res_pm_end_hhmm6   = 46;
	optional string etc_res_limit = 47;
	optional string start_date         = 48;
	optional string am_start_hhmm3     = 49;
	optional string am_start_hhmm7     = 50;
	optional string am_end_hhmm3       = 51;
	optional string am_end_hhmm7       = 52;
	optional string pm_start_hhmm3     = 53;
	optional string pm_start_hhmm7     = 54;
	optional string pm_end_hhmm3       = 55;
	optional string pm_end_hhmm7       = 56;
	optional string am_gwa_room3       = 57;
	optional string am_gwa_room7       = 58;
	optional string pm_gwa_room3       = 59;
	optional string pm_gwa_room7       = 60;
	optional string res_am_start_hhmm3 = 61;
	optional string res_am_start_hhmm7 = 62;
	optional string res_am_end_hhmm3   = 63;
	optional string res_am_end_hhmm7   = 64;
	optional string res_pm_start_hhmm3 = 65;
	optional string res_pm_start_hhmm7 = 66;
	optional string res_pm_end_hhmm3   = 67;
	optional string res_pm_end_hhmm7 = 68;
	optional string end_date           = 69;
	optional string am_start_hhmm4     = 70;
	optional string am_end_hhmm4       = 71;
	optional string pm_start_hhmm4     = 72;
	optional string pm_end_hhmm4       = 73;
	optional string am_gwa_room4       = 74;
	optional string pm_gwa_room4       = 75;
	optional string res_am_start_hhmm4 = 76;
	optional string res_am_end_hhmm4   = 77;
	optional string res_pm_start_hhmm4 = 78;
	optional string res_pm_end_hhmm4   = 79;
	optional string hosp_code = 80;
}

message NuroRES0102U00UpdateRES0102Req2Request{
    optional string user_id    = 1;
    optional string avg_time            = 2;
    optional string jinryo_break_yn     = 3;
    optional string am_start_hhmm1      = 4;
    optional string am_start_hhmm2      = 5;
    optional string am_start_hhmm3      = 6;
    optional string am_start_hhmm4      = 7;
    optional string am_start_hhmm5      = 8;
    optional string am_start_hhmm6      = 9;
    optional string am_start_hhmm7      = 10;
    optional string am_end_hhmm1        = 11;
    optional string am_end_hhmm2        = 12;
    optional string am_end_hhmm3        = 13;
    optional string am_end_hhmm4        = 14;
    optional string am_end_hhmm5        = 15;
    optional string am_end_hhmm6        = 16;
    optional string am_end_hhmm7        = 17;
    optional string pm_start_hhmm1      = 18;
    optional string pm_start_hhmm2      = 19;
    optional string pm_start_hhmm3      = 20;
    optional string pm_start_hhmm4      = 21;
    optional string pm_start_hhmm5      = 22;
    optional string pm_start_hhmm6      = 23;
    optional string pm_start_hhmm7      = 24;
    optional string pm_end_hhmm1        = 25;
    optional string pm_end_hhmm2        = 26;
    optional string pm_end_hhmm3        = 27;
    optional string pm_end_hhmm4        = 28;
    optional string pm_end_hhmm5        = 29;
    optional string pm_end_hhmm6        = 30;
    optional string pm_end_hhmm7        = 31;
    optional string am_gwa_room1        = 32;
    optional string am_gwa_room2        = 33;
    optional string am_gwa_room3        = 34;
    optional string am_gwa_room4        = 35;
    optional string am_gwa_room5        = 36;
    optional string am_gwa_room6        = 37;
    optional string am_gwa_room7        = 38;
    optional string pm_gwa_room1        = 39;
    optional string pm_gwa_room2        = 40;
    optional string pm_gwa_room3        = 41;
    optional string pm_gwa_room4        = 42;
    optional string pm_gwa_room5        = 43;
    optional string pm_gwa_room6        = 44;
    optional string pm_gwa_room7        = 45;
    optional string res_am_start_hhmm1  = 46;
    optional string res_am_start_hhmm2  = 47;
    optional string res_am_start_hhmm3  = 48;
    optional string res_am_start_hhmm4  = 49;
    optional string res_am_start_hhmm5  = 50;
    optional string res_am_start_hhmm6  = 51;
    optional string res_am_start_hhmm7  = 52;
    optional string res_am_end_hhmm1    = 53;
    optional string res_am_end_hhmm2    = 54;
    optional string res_am_end_hhmm3    = 55;
    optional string res_am_end_hhmm4    = 56;
    optional string res_am_end_hhmm5    = 57;
    optional string res_am_end_hhmm6    = 58;
    optional string res_am_end_hhmm7    = 59;
    optional string res_pm_start_hhmm1  = 60;
    optional string res_pm_start_hhmm2  = 61;
    optional string res_pm_start_hhmm3  = 62;
    optional string res_pm_start_hhmm4  = 63;
    optional string res_pm_start_hhmm5  = 64;
    optional string res_pm_start_hhmm6  = 65;
    optional string res_pm_start_hhmm7  = 66;
    optional string res_pm_end_hhmm1    = 67;
    optional string res_pm_end_hhmm2    = 68;
    optional string res_pm_end_hhmm3    = 69;
    optional string res_pm_end_hhmm4    = 70;
    optional string res_pm_end_hhmm5    = 71;
    optional string res_pm_end_hhmm6    = 72;
    optional string res_pm_end_hhmm7    = 73;
    optional string doc_res_limit       = 74;
    optional string etc_res_limit       = 75;
    optional string end_date = 76;
    optional string doctor = 77;
    optional string start_date = 78;
    optional string hosp_code = 79;
}

message NuroRES0102U00UpdateRES0102Req3Request
{
    required string start_date = 1;
    required string doctor = 2;
    optional string hosp_code = 3;
}

message NuroRES0102U00InsertRES0103Req1Request
{
    optional string user_id = 1;
    optional string doctor        = 2;
    optional string am_start_hhmm = 3;
    optional string pm_start_hhmm = 4;
    optional string remark        = 5;
    optional string jinryo_pre_date = 6;
    optional string am_end_hhmm     = 7;
    optional string pm_end_hhmm     = 8;
    optional string am_gwa_room     = 9;
    optional string pm_gwa_room = 10;
    optional string hosp_code = 11;
}

message NuroRES0102U00UpdateRES0103Req1Request
{
    optional string user_id = 1;
    optional string doctor        = 2;
    optional string am_start_hhmm = 3;
    optional string pm_start_hhmm = 4;
    optional string remark        = 5;
    optional string jinryo_pre_date = 6;
    optional string am_end_hhmm     = 7;
    optional string pm_end_hhmm     = 8;
    optional string am_gwa_room     = 9;
    optional string pm_gwa_room = 10;
    optional string hosp_code = 11;
}

message NuroRES0102U00DeleteRES0103Req1Request
{
    required string jinryo_pre_date = 1;
    required string doctor = 2;
    optional string hosp_code = 3;
}

message NuroRES0102U00InsertRES0103Req2Request
{
    optional string user_id           = 1;
	optional string doctor            = 2;
	optional string res_am_start_hhmm = 3;
	optional string res_pm_start_hhmm = 4;
	optional string remark            = 5;
	optional string jinryo_pre_date   = 6;
	optional string res_am_end_hhmm   = 7;
	optional string res_pm_end_hhmm   = 8;
	optional string hosp_code         = 9;
}

message NuroRES0102U00UpdateRES0103Req2Request
{
    optional string user_id = 1;
	optional string res_am_start_hhmm  = 2;
	optional string res_am_end_hhmm    = 3;
	optional string res_pm_start_hhmm  = 4;
	optional string res_pm_end_hhmm    = 5;
	optional string remark          = 6;
	optional string hosp_code = 7;
	optional string doctor = 8;
	optional string jinryo_pre_date = 9;
}

message NuroRES0102U00DeleteRES0103Req2Request
{
    required string jinryo_pre_date = 1;
    required string doctor = 2;
    optional string hosp_code = 3;
}

message NuroRES0102U00InsertRES0104Request
{
    optional string user_id = 1;
    optional string doctor        = 2;
    optional string sayu = 3;
    optional string start_date = 4;
    optional string end_date        = 5;
    optional string hosp_code = 6;
}

message NuroRES0102U00UpdateRES0104Request
{
    optional string user_id = 1;
    optional string doctor        = 2;
    optional string sayu = 3;
    optional string start_date = 4;
    optional string end_date        = 5;
    optional string hosp_code = 6;
}

message NuroRES0102U00DeleteRES0104Request
{
    required string start_date = 1;
    required string doctor = 2;
    optional string hosp_code = 3;
}

//NURO OUT1001U01 Lay Last Check Date Request
message NuroOUT1001U01LayLastCheckDateRequest
{
    required string gubun  = 1;
    required string bunho = 2;
    required string date = 3;
}

//NURO OUT1001U01 Lay Last Check Date Response
message NuroOUT1001U01LayLastCheckDateResponse
{
    optional string last_check_date = 1;
}

//NURO OUT1001U01 Lay Gongbi Code Request
message NuroOUT1001U01LayGongbiCodeRequest
 {
    required string pkout1001 = 1;
 }

//NURO OUT1001U01 Lay Gongbi Code Response 
 message NuroOUT1001U01LayGongbiCodeResponse
 {
    repeated NuroOUT1001U01LayGongbiCodeInfo lay_gongbi_code_item = 1;
 }


 // NURO OUT1001U01 Bar Code Info Request
message NuroOUT1001U01BarCodeInfoRequest
{
    required string bunho = 1;
}
// NURO OUT1001U01 Bar Code Info Response
message NuroOUT1001U01LayoutBarCodeInfoResponse
{
    repeated NuroOUT1001U01LayoutBarCodeInfo bar_code_item = 1;
}

// NURO OUT1001U01 Get Group Key Request
message NuroOUT1001U01GetGroupKeyRequest
{
   required string code_type = 1;
   required string code = 2;
}

// NURO OUT1001U01 Get Group Key Response
message NuroOUT1001U01GetGroupKeyResponse
 {
    repeated NuroOUT1001U01GetGroupKeyInfo get_group_key_item = 1;
 }

// NURO OUT1001U01 Check Doctor Request
message NuroOUT1001U01CheckDoctorRequest
{
   required string gubun = 1;
   required string date = 2;
   required string time = 3;
   required string doctor = 4;
}

// NURO OUT1001U01 Check Doctor Response
message NuroOUT1001U01CheckDoctorResponse
{
    optional string doctor = 1;
}

//NURO OUT1001U01 Load OUT0105 Request
message NuroOUT1001U01LoadOUT0105Request
{
    required string gongbi_code = 1;
    required string fkout1001 = 2;
}

//NURO OUT1001U01 Load OUT0105 Response
message NuroOUT1001U01LoadOUT0105Response
{
    repeated NuroOUT1001U01LoadOUT0105Info item_value = 1;
}

//NuRO OUT1001U01 GetDbMaxJubsuNoRequest
message NuroOUT1001U01GetDbMaxJubsuNoRequest
{
    required string bunho = 1;
    required string naewon_date = 2;
}

//NuRO OUT1001U01 GetDbMaxJubsuNoResponse
message NuroOUT1001U01GetDbMaxJubsuNoResponse
{
    optional string max_jubsu_no = 1;
}

//NURO OUT1001U01 CheckNaewonYnRequest
message NuroOUT1001U01CheckNaewonYnRequest
{
	required string bunho = 1;
	required string naewon_date = 2;
	required string gwa = 3;
	required string doctor = 4;
	required string naewon_type = 5;
	required string old_jubsu_no = 6;
	required string chojae = 7;
}

//NURO OUT1001U01 CheckNaewonYnResponse
message NuroOUT1001U01CheckNaewonYnResponse
{
 	optional string value_check_naewon = 1;
}

//NURO OUT1001U01CheckYRequest
message NuroOUT1001U01CheckYRequest
{
    required string pkout1001 = 1;
}

// NURO OUT1001U01DeleteJubsuDataRequest
message NuroOUT1001U01DeleteJubsuDataRequest
{
    required string pkout1001 = 1;
}

// NURO OUT1001U01DeleteJubsuDataResponse
message NuroOUT1001U01DeleteJubsuDataResponse
{
    required bool result_delete = 1;
}
message NuroOUT1001U01CheckY2Request{
    required string bunho = 1;
    required string naewon_date = 2;
	required string gwa = 3;
	required string doctor = 4;
	required string naewon_type = 5;
	required string jubsu_no = 6;
}

message NuroOUT1001U01CheckYResponse{
    optional string Y_value = 1;
}

message NuroOUT1001U01CheckY3Request{
    required string bunho = 1;
	required string naewon_date = 2;
	required string jubsu_no = 3;
}

message NuroOUT1001U01GetOut1001SeqRequest{
}

message NuroOUT1001U01GetOut1001SeqResponse{
	required string out1001_seq_value = 1;
	optional bool tab_is_all          = 2;
}

message NuroOUT1001U01InsertJubsuRequest
{
    optional string sys_id = 1;
    optional string upd_id = 2;
    optional string pkout1001 = 3;
    optional string naewon_date = 4;
    optional string bunho = 5;
    optional string gwa = 6;
    optional string gubun = 7;
    optional string doctor = 8;
    optional string chojae = 9;
    optional string jubsu_time = 10;
    optional string naewon_yn = 11;
    optional string naewon_type = 12;
    optional string sunnab_yn = 13;
    optional string jubsu_gubun = 14;
    optional string inp_trans_yn = 15;
    optional string bigo = 16;
    optional string jubsu_no = 17;
    optional string sujin_no = 18;
    optional string wonyoi_order_yn = 19;
}

message NuroOUT1001U01InsertJubsuResponse{
    required bool result_insert = 1;
}

message NuroOUT1001U01InsertTableOUT1002Request{
    optional string user_id = 1;
    optional string update_id = 2;
    optional string hosp_code = 3;
    optional string new_pkout1001 = 4;
    optional string gongbi_code1 = 5;
    optional string bunho = 6;
    optional string priority1 = 7;
}

message NuroOUT1001U01InsertTableOUT1002Response{
    required bool result_insert = 1;
}

message NuroOUT1001U01GetGubunNameRequest{
    required string gubun = 1;
    required string naewon_date = 2;
    required string bunho = 3;
}

message NuroOUT1001U01GetGubunNameResponse{
    required string value_gubun_name = 1;
}

message NuroOUT1001U01UpdateTableOUT1001Request
{
    optional string user_id = 1;
    optional string doctor = 2;
    optional string chojae = 3;
    optional string jubsu_no = 4;
    optional string gubun = 5;
    optional string jubsu_time = 6;
    optional string arrive_time = 7;
    optional string jubsu_gubun = 8;
    optional string check_naewon = 9;
    optional string pkout1001 = 10;
}

message NuroOUT1001U01UpdateTableOUT1001Response
{
    required bool value_update_out1001 = 1;
}

message NuroOUT1001U01DeleteInTableOUT1002Request
{
    required string pkout1001 = 1;
}

message NuroOUT1001U01DeleteInTableOUT1002Response
{
    required bool result_delete = 1;
}

message NuroOUT1001U01GetDepartmentRequest
{
    optional string buseo_ymd = 1;
    optional string find1 = 2;
    optional string buseo_gubun = 3;
}

message NuroOUT1001U01GetDepartmentResponse
{
    repeated NuroOUT1001U01GetDepartmentInfo dept_item = 1;
}

message NuroOUT1001U01GetDoctorRequest
{
    optional string naewon_date = 1;
    optional string gwa = 2;
    optional string find1 = 3;
}

message NuroOUT1001U01GetDoctorResponse
{
    repeated NuroOUT1001U01GetDoctorInfo doctor_item = 1;
}

message NuroOUT1001U01GetTypeRequest
{
    optional string naewon_date = 1;
    optional string bunho = 2;
    optional string find1 = 3;
}

message NuroOUT1001U01GetTypeResponse
{
    repeated NuroOUT1001U01GetTypeInfo type_item = 1;
}

message NuroOUT0101U02InsertGongbiListRequest {
	 optional string user_id = 1;
	 optional string update_date = 2;
	 optional string update_id = 3;
	 required string start_date = 4;
	 required string patient_code = 5;
	 optional string budamja_patient = 6;
	 required string gongbi_code = 7;
	 optional string sugubja_patient = 8;
	 optional string end_date = 9;
	 optional string remark = 10;
	 optional string last_check_date = 11;
}

message NuroOUT0101U02UpdateGongbiListRequest {
	optional string user_id = 1;
	required string start_date = 2;
	required string patient_code = 3;
	optional string budamja_patient = 4;
	required string gongbi_code = 5;
	optional string sugubja_code = 6;
	optional string end_date = 7;
	optional string remark = 8;
	optional string last_check_date = 9;
	optional string old_start_date = 10;
}

message NuroOUT0101U02DeleteGongbiRequest {
	optional string start_date = 1;
	optional string patient_code = 2;
	optional string gongbi_code = 3;
}


//NURO OUT0101U02 Check Exists X Request
message NuroOUT0101U02CheckExistsXRequest
{
 required string patient_code = 1;
}

//NURO OUT0101U02 Check Exists X Response
message NuroOUT0101U02CheckExistsXResponse
{
 optional  string result_value = 1;
}

//NURO OUT0101U02 Insert Patient Request
message NuroOUT0101U02InsertPatientRequest
{
	optional string sys_date = 1;
	optional string sys_id = 2;
	optional string update_date = 3;
	optional string update_id = 4;
	optional string patient_code = 5;
	optional string patient_name = 6;
	optional string sex = 7;
	optional string birth = 8;
	optional string zip_code1 = 9;
	optional string zip_code2 = 10;
	optional string address1 = 11;
	optional string address2 = 12;
	optional string tel = 13;
	optional string tel1 = 14;
	optional string type = 15;
	optional string tel_hp = 16;
	optional string email = 17;
	optional string patient_name2 = 18;
	optional string tel_type = 19;
	optional string tel_type2 = 20;
	optional string tel_type3 = 21;
	optional string delete_yn = 22;
	optional string pace_maker_yn = 23;
	optional string self_pace_maker = 24;
	optional string patient_type = 25;
}

//NURO OUT0101U02 Insert Patient Response
message NuroOUT0101U02InsertPatientResponse
{
	required  bool result_insert = 1;
}

message NuroOUT0101U02CheckExistsYRequest
{
	required string patient_code = 1;
}

message NuroOUT0101U02CheckExistsYResponse
{
	required bool  result_value = 1;
}
//NURO OUT0101U02UpdatePatientRequest	
message NuroOUT0101U02UpdatePatientRequest
{
	optional string user_id = 1;
	optional string patient_name = 2;
	optional string sex = 3;
	optional string birth = 4;
	optional string zip_code1 = 5;
	optional string zip_code2 = 6;
	optional string address1 = 7;
	optional string address2 = 8;
	optional string tel = 9;
	optional string tel1 = 10;
	optional string type = 11;
	optional string tel_hp = 12;
	optional string email = 13;
	optional string patient_name2 = 14;
	optional string tel_type = 15;
	optional string tel_type2 = 16;
	optional string tel_type3 = 17;
	optional string delete_yn = 18;
	optional string pace_maker_yn = 19;
	optional string self_pace_maker = 20;
	optional string patient_type = 21;
	optional string patient_code = 22;
}


message NuroOUT0101U02GetYRequest
{
	required string patient_code = 1;
	required string type = 2;
	required string start_date = 3;
}

message NuroOUT0101U02GetYResponse
{
	optional string y = 1;
}


//NURO OUT0101U02 Insert Boheom Request 
message NuroOUT0101U02InsertBoheomRequest
{
	optional string sys_id = 1;
	optional string update_date = 2;
	optional string update_id = 3;
	required string start_date = 4;
	required string patient_code = 5;
	required string type = 6;
	optional string johap = 7;
	optional string gaein = 8;
	optional string piname = 9;
	optional string bon_ga_gubun = 10;
	optional string end_date = 11;
	optional string gaein_no = 12;
	optional string last_check_date = 13;
	optional string chuiduk_date = 14;
}

//NURO OUT0101U02 Update Boheom Request 
message NuroOUT0101U02UpdateBoheomRequest
{
	optional string user_id = 1;
	optional string start_date = 2;
	optional string patient_code = 3;
	optional string type = 4;
	optional string johap = 5;
	optional string gaein = 6;
	optional string piname = 7;
	optional string bon_ga_gubun = 8;
	optional string end_date = 9;
	optional string gaein_no = 10;
	optional string last_check_date = 11;
	optional string chuiduk_date = 12;
	optional string patient_code_old = 13;
	optional string old_start_date = 14;
}


//NURO OUT0101U02DeleteBoheomRequest
message NuroOUT0101U02DeleteBoheomRequest
{
	optional string patient_code   = 1;
	optional string old_type       = 2;
	optional string old_start_date = 3;
}

//NURO OUT0101U02GongbiListGetYRequest
message NuroOUT0101U02GongbiListGetYRequest
{
	 required string gongbi_code  = 1;
	 required string patient_code = 2;
	 required string start_date   = 3;
}

//Nuro OUT1001U01LoadDoctorJinryoTimeRequest
message NuroOUT1001U01LoadDoctorJinryoTimeRequest
{
    required string gwa         = 1;
    required string doctor      = 2;
    required string naewon_date = 3;
    required string jubsu_time  = 4;
}


//NuroOUT1001U01LoadDoctorJinryoTimeRequest
message NuroOUT1001U01LoadDoctorJinryoTimeResponse
{
    required string from_time = 1;
    required string to_time   = 2;
    required string sch_flag  = 3;
}

message NuroOUT0101U02GongbiListGetYResponse{
 optional string Y_value = 1;
}

//NURO OUT1001U01LoadCheckChojaeJpnRequest
message NuroOUT1001U01LoadCheckChojaeJpnRequest
{
        required string naewon_date = 1;
        required string bunho       = 2;
        required string gubun       = 3;
        required string gwa         = 4;
        required string jubsu_no    = 5;
}

//NURO OUT1001U01LoadCheckChojaeJpnResponse
message NuroOUT1001U01LoadCheckChojaeJpnResponse
{
        required NuroOUT1001U01LoadCheckChojaeJpnInfo chojae_jpn_item = 1;
}

message NuroRES0102U00DeleteRES0102Req2Request
{
    required string start_date = 1;
    required string doctor     = 2;
    optional string hosp_code  = 3;
}

//Get Gwa Doctor List
message NuroNUR1001R00GetGwaDoctorListRequest{
    optional string gwa   = 1;
    optional string month = 2;
}

message NuroNUR1001R00GetGwaDoctorListResponse{
    repeated ComboListItemInfo gwaDoctor_item = 1;
}

//Get Temp List
message NuroNUR1001R00GetTempListRequest{
    optional string doctor_name = 1;
    optional string month       = 2;
    optional string gwa         = 3;
    optional string doctor      = 4;
}

message NuroNUR1001R00GetTempListResponse{
    repeated NuroNUR1001R00GetTempListItemInfo tem_item = 1;
}

// ----[START] OUT1001P01 ------
message OUT1001P01GrdOUT1001Request{
    optional string naewon_date = 1;
    optional string bunho       = 2;
    optional string pkout1001   = 3;
}

message OUT1001P01GrdOUT1001Response{
    repeated OUT1001P01GrdOUT1001ListItemInfo grdOUT1001_list = 1;
}

message OUT1001P01PrOutChangeGwaDoctorRequest{
    optional string gwa       = 1;
    optional string bunho     = 2;
    optional string pkout1001 = 3;
    optional string doctor    = 4;
    optional string user_id   = 5;
}

message OUT1001P01PrOutChangeGwaDoctorResponse{
    optional string error = 1;
}
// ----[END] OUT1001P01 ------

// ------------------------------------------------------NEW -------------------------------------------

message InitializeComboListItemRequest {
    optional string code_type         = 1;
    optional string combo_time_type   = 2;
    optional string code_type_cboTel  = 3;
    optional string code_type_chojae  = 4;
}

message InitializeComboListItemResponse {
    repeated ComboListItemInfo combo_department_item = 1;
    repeated ComboListItemInfo combo_type_item       = 2;
    repeated ComboListItemInfo combo_time_item       = 3;
    repeated ComboListItemInfo combo_tel_item        = 4;
    repeated ComboListItemInfo combo_chojae_item     = 5;
}

message NuroPatientGridViewRequest {
	optional string patient_code     = 1;
	optional string coming_date      = 2;
	required bool change_coming_date = 3;
}

message NuroPatientGridViewResponse {
    repeated NuroPatientCommentListItemInfo  grdComment_list               = 1;
    repeated NuroPatientInsuranceListItemInfo grdGongbiCode_list           = 2;
    repeated NuroPatientDetailListItemInfo   grdJubsu_list                 = 3;
    repeated NuroPatientReceptionHistoryListItemInfo  grdJubsuHistory_list = 4;
}

message UpdateJubsuDataRequest {
    repeated UpdateJubsuDataInfo data_info = 1;
    required bool is_orca                  = 2;
    optional string orca_gigwan_code       = 3;
}

message OUT1001P01FindboxValidatingRequest{
    optional string start_date   = 1;
    optional string find1        = 2;
    optional string gwa          = 3;
    optional string control_name = 4;
}

message OUT1001P01FindboxValidatingResponse{
    optional string gwa_name    = 1;
    optional string doctor_name = 2;
}

// NURO RES1001U00 Reservation Schedule List Request
message RES1001U00ReservationScheduleListGroupedRequest {
	optional string exam_pre_date   = 1;
	optional string department_code = 2;
	optional string doctor_code     = 3;
	optional string from_time_am    = 4;
	optional string to_time_am      = 5;
	optional string from_time_pm    = 6;
	optional string to_time_pm      = 7;
	optional string avg_time        = 8;
	optional string hosp_code_link  = 9;
	optional bool tab_is_all        = 10;
}

// NURO RES1001U00 Reservation Schedule List Response
message RES1001U00ReservationScheduleListGroupedResponse {
	repeated NuroRES1001U00ReservationScheduleConditionListItemInfo res_schedule_condition_list_item = 1;
	repeated NuroRES1001U00AverageTimeListItemInfo avg_time_list_item                                = 2;
	repeated NuroRES1001U00ReservationScheduleListItemInfo res_schedule_am_list_item                 = 3;
	repeated NuroRES1001U00ReservationScheduleListItemInfo res_schedule_pm_list_item                 = 4;
}
//Add new
message RES1001U00FbxHospCodeLinkRequest {
	optional string bunho = 1;
}

message RES1001U00FbxHospCodeLinkResponse {
	repeated RES1001U00FbxHospCodeLinkListItemInfo fbx_hosp_code_list = 1;
}

message RES1001U00FbxHospCodeLinkDataValidatingRequest {
	optional string hosp_code = 1;
	optional string bunho     = 2;
}

message RES1001U00FbxHospCodeLinkDataValidatingResponse {
	optional string hosp_name  = 1;
	optional string bunho_link = 2;
}

message NuroOut1001U01CheckDoctorScheduleRequest {
    optional string type = 1;
    optional string naewon_date = 2;
    optional string jubsu_time = 3;
    optional string gwa = 4;
    optional string doctor = 5;
}

message NuroOut1001U01CheckDoctorScheduleResponse {
    optional string ret = 1;
    optional string from_time = 2;
    optional string to_time = 3;
    optional string sch_flag = 4;
}

message NuroRES0102U00GetDataGridViewRequest
{
    required string doctor = 1;
    required string date = 2;
    optional string hosp_code = 3;
}

message NuroRES0102U00GetDataGridViewResponse
{
    repeated NuroRES0102U00GrdRES0102Info data_grid_res0102_info = 1;
    repeated NuroRES0102U00GrdRES0103Info data_grid_res0103_info = 2;
    repeated NuroRES0102U00GrdRES0103ResInfo data_grid_res0103_res_info = 3;
    repeated NuroRES0102U00GridDoctorInfo data_grid_doctor_info = 4;
}

message RES1001U00FrmModifyReserGrdRES1001Request{
    required string doctor         = 1;
    required string day_of_week    = 2;
    required string date           = 3;
    optional string hosp_code_link = 4;
	optional bool tab_is_all       = 5;
}

message RES1001U00FrmModifyReserGrdRES1001Response {
    repeated RES1001U00FrmModifyReserGrdRES1001Info grd_res1001_info = 1;
}

message RES1001U00FrmModifyReserGrdRES1001SavePerformerRequest
{
	optional string q_user_id = 1;
	optional string hosp_code = 2;
	optional string bunho = 3;
	optional string gwa = 4;
	optional string gubun = 5;
	optional string jinryo_pre_date = 6;
	optional string jinryo_pre_time = 7;
	optional string doctor = 8;
	optional string input_gubun = 9;
	optional string pkres1001 = 10;
	optional string pkout1001 = 11;
	optional string changgu = 12;
	optional string chojae = 13;
	optional string jubsu_no = 14;
	optional string res_gubun = 15;
	optional string rowstate = 16;
	optional string newrow = 17;
}

// OUT0101U02 Combo List Request
message OUT0101U02ComboListRequest {
    required string sex_code_type     = 1;
    required string bunho_code_type   = 2;
    required string tel_code_type     = 3;
    required string bonin_code_type   = 4;
    required string billing_code_type = 5;
}

// OUT0101U02 Combo List Response
message OUT0101U02ComboListResponse {
	repeated ComboListItemInfo sex_combo_list_item    = 1;
	repeated ComboListItemInfo bunho_combo_list_item  = 2;
	repeated ComboListItemInfo tel_combo_list_item    = 3;
	repeated ComboListItemInfo bonin_combo_list_item  = 4;
	repeated ComboListItemInfo billing_code_type      = 5;
}

message RES1001U00FrmModifyReserCboReserGubunRequest {
}

message RES1001U00FrmModifyReserCboReserGubunResponse {
    repeated ComboListItemInfo cbo_reser_gubun_info = 1;
}

message NuroRES0102U00SaveScheduleRequest
{
    repeated NuroRES0102U00GrdRES0102Info gridRes0102_save_item = 1;
    repeated NuroRES0102U00GrdRES0103Info gridRes0103_save_item = 2;
    repeated NuroRES0102U00GrdRES0103ResInfo gridRes0103R_save_item = 3;
    repeated NuroRES0102U00GridDoctorInfo gridDoctor_save_item = 4;
    required string user_id = 5;
    optional string hosp_code = 6;
}

message OUT0101U02GridViewRequest {
     required string patient_code = 1;
}

message OUT0101U02GridViewResponse {
     repeated NuroOUT0101U02GridPatientInfo grid_pation_item = 1;
     repeated NuroOUT0101U02GridBoheomInfo grid_boheom_item = 2;
     repeated NuroOUT0101U02GridGongbiListInfo grid_gongbi_list_item = 3;
     repeated NuroOUT0101U02GridCommentInfo grid_comment_item = 4;
}

// OUT0101U02 Check And Insert Patient Request
message OUT0101U02CheckAndInsertPatientRequest {
    optional string sys_date = 1;
    optional string sys_id = 2;
    optional string update_date = 3;
    optional string update_id = 4;
    optional string patient_code = 5;
    optional string patient_name = 6;
    optional string sex = 7;
    optional string birth = 8;
    optional string zip_code1 = 9;
    optional string zip_code2 = 10;
    optional string address1 = 11;
    optional string address2 = 12;
    optional string tel = 13;
    optional string tel1 = 14;
    optional string type = 15;
    optional string tel_hp = 16;
    optional string email = 17;
    optional string patient_name2 = 18;
    optional string tel_type = 19;
    optional string tel_type2 = 20;
    optional string tel_type3 = 21;
    optional string delete_yn = 22;
    optional string pace_maker_yn = 23;
    optional string self_pace_maker = 24;
    optional string patient_type = 25;
}

// OUT0101U02 Check And Update Patient Request
message OUT0101U02CheckAndUpdatePatientRequest {
    optional string user_id = 1;
    optional string patient_name = 2;
    optional string sex = 3;
    optional string birth = 4;
    optional string zip_code1 = 5;
    optional string zip_code2 = 6;
    optional string address1 = 7;
    optional string address2 = 8;
    optional string tel = 9;
    optional string tel1 = 10;
    optional string type = 11;
    optional string tel_hp = 12;
    optional string email = 13;
    optional string patient_name2 = 14;
    optional string tel_type = 15;
    optional string tel_type2 = 16;
    optional string tel_type3 = 17;
    optional string delete_yn = 18;
    optional string pace_maker_yn = 19;
    optional string self_pace_maker = 20;
    optional string patient_type = 21;
    optional string patient_code = 22;
}

// OUT0101U02 Get And Insert Boheom Request
message OUT0101U02GetAndInsertBoheomRequest {
    optional string sys_id = 1;
    optional string update_date = 2;
    optional string update_id = 3;
    required string start_date = 4;
    required string patient_code = 5;
    required string type = 6;
    optional string johap = 7;
    optional string gaein = 8;
    optional string piname = 9;
    optional string bon_ga_gubun = 10;
    optional string end_date = 11;
    optional string gaein_no = 12;
    optional string last_check_date = 13;
    optional string chuiduk_date = 14;
}

// OUT0101U02 Get And Update Boheom Request
message OUT0101U02GetAndUpdateBoheomRequest {
    optional string user_id = 1;
    optional string start_date = 2;
    optional string patient_code = 3;
    optional string type = 4;
    optional string johap = 5;
    optional string gaein = 6;
    optional string piname = 7;
    optional string bon_ga_gubun = 8;
    optional string end_date = 9;
    optional string gaein_no = 10;
    optional string last_check_date = 11;
    optional string chuiduk_date = 12;
    optional string patient_code_old = 13;
    optional string old_start_date = 14;
}

// OUT0101U02 Get And Insert Gongbi List Request
message OUT0101U02GetAndInsertGongbiListRequest {
    optional string user_id = 1;
    optional string update_date = 2;
    optional string update_id = 3;
    required string start_date = 4;
    required string patient_code = 5;
    optional string budamja_patient = 6;
    required string gongbi_code = 7;
    optional string sugubja_patient = 8;
    optional string end_date = 9;
    optional string remark = 10;
    optional string last_check_date = 11;
}

message NuroGetLastGubunRequest{
    optional string bunho = 1;
    optional string gwa = 2;
    optional string naewon_date = 3;
}

message NuroGetRecentlyDoctorRequest{
    optional string bunho = 1;
    optional string gwa = 2;
    optional string naewon_date = 3;
}

message NuroGetGubunNameRequest{
    optional string gubun = 1;
    optional string naewon_date = 2;
}

message NuroGetGwaNameBAS0260Request{
    optional string gwa = 1;
    optional string date = 2;
}

message NuroGetDoctorNameBAS0270Request{
    optional string doctor = 1;
    optional string gwa = 2;
    optional string naewon_date = 3;
}

message NuroChkGetBunhoBySujinRequest{
    optional string naewon_date = 1;
    optional string sujin_no = 2;
}

message NuroChkGetWonyoiYnRequest{
    optional string gubun = 1;
    optional string gongbi_code1 = 2;
    optional string gongbi_code2 = 3;
    optional string gongbi_code3 = 4;
    optional string gongbi_code4 = 5;
}

message NuroChkGetGongbiYNRequest{
    optional string gubun = 1;
    optional string date = 2;
}

message NuroLoadTableReserYNRequest{
    optional string bunho = 1;
    optional string gwa = 2;
    optional string naewon_date = 3;
    optional string doctor = 4;
}

message NuroGetZipNameRequest{
        optional string zip_code1 = 1;
        optional string zip_code2 = 2;
}

message NuroGetLastGubunResponse{
    optional string ret_value = 1;
}

message NuroGetRecentlyDoctorResponse{
    optional string ret_value = 1;
}

message NuroGetGubunNameResponse{
    optional string ret_value = 1;
}

message NuroGetGwaNameBAS0260Response{
    optional string ret_value = 1;
}

message NuroGetDoctorNameBAS0270Response{
    optional string ret_value = 1;
}

message NuroChkGetBunhoBySujinResponse{
    optional NuroChkGetBunhoBySujinInfo item_info = 1;
}

message NuroChkGetWonyoiYnResponse{
    optional string wonyoi_yn = 1;
}

message NuroChkGetGongbiYNResponse{
    optional string ret_value = 1;
}

message NuroLoadTableReserYNResponse{
    repeated DataStringListItemInfo jubsu_time = 1;
}

message NuroGetZipNameResponse{
    optional string ret_value = 1;
}

message NuroRes0102u00InitCboListItemRequest
{
    optional string coming_date = 1;
    optional string code_type = 2;
    optional string hosp_code = 3;
}

message NuroRes0102u00InitCboListItemResponse
{
    repeated ComboListItemInfo gwa_item = 1;
    repeated ComboListItemInfo avg_time = 2;
}

message OUT0101U02GetPatientCodeRequest
{
    optional string get_patient_code_yn = 1;
}

message OUT0101U02GetPatientCodeResponse
{
	required bool result = 1;
    optional string auto_bunho_flg = 2;
    optional string patient_code = 3;
}

// OUT0101U02 Grid View Request
message OUT0101U02SaveGridRequest {
    repeated NuroOUT0101U02GridPatientInfo patient_list = 1;
    repeated NuroOUT0101U02GridBoheomInfo boheom_list = 2;
    repeated NuroOUT0101U02GridGongbiListInfo gongbi_list= 3;
    required string user_id = 4;
    optional string patient_code = 5;
    optional string hosp_code = 6;
    optional string auto_bunho_flg = 7;
    optional string orca_request = 8;
    optional string orca_gigwan_code = 9;
}

message OUT0101U02SaveGridResponse{
    optional string err_code 			= 1;
    optional string new_patient_code 	= 2;
    required bool result 				= 3;
    optional string ref_pwd 			= 4;
}

message NuroNUR1001R00GetGwaDoctorTempListRequest {
    optional string gwa = 1;
    optional string month = 2;
}

message NuroNUR1001R00GetGwaDoctorTempListResponse {
    repeated NuroNUR1001R00GetTempListItemInfo tem_item = 1;
}

// ----[START] OCSO.lib ---------
message OcsLoadInputControlRequest{
	optional string input_control = 1;
}

message OcsLoadInputControlResponse{
	repeated OcsLoadInputControlListItemInfo control_list = 1;
}

message OcsLoadVisibleControlRequest{
	optional string input_tab = 1;
}

message OcsLoadVisibleControlResponse{
	repeated OcsLoadVisibleControlListItemInfo visible_control_list = 1;
}


message OcsLoadInputTabRequest{
	optional string input_tab = 1;
}

message OcsLoadInputTabResponse{
	repeated OcsLoadInputTabListItemInfo tab_list = 1;
}

message OcsOrderBizLoadComboDataSourceRequest{
    optional string aColName = 1;
    optional string aArgu1 = 2;
    optional string aArgu2 = 3;
    optional string aArgu3 = 4;
}


message OcsOrderBizLoadComboDataSourceResponse{
    repeated OcsOrderBizLoadComboDataSourceListItemInfo result = 1;
}


// ----[END] OCSO.lib ---------

// -------[START] OCS1003P01 ------
message OCS1003P01GrdPatientRequest{
	optional string naewon_yn      = 1;
	optional string naewon_date = 2;
	optional string reser_yn      = 3;
	optional string doctor = 4;
	optional string doctor_mode_yn = 5;
	optional string bunho = 6;
	optional NotApproveOrderCntInfo order_cnt = 7;
}

message OCS1003P01GrdPatientResponse{
	repeated OCS1003P01GrdPatientListItemInfo grdPatient_list = 1;
	optional string cnt_value = 2;
}

message OCS1003P01MakeInputGubunTabRequest{
        required string code = 1;
}

message OCS1003P01MakeInputGubunTabResponse{
	repeated ComboListItemInfo tab_list = 1;
}
// -------[END] OCS1003P01 ------

//------[START] OUT0101Q01-----
message OUT0101Q01GrdPatientListRequest{
	optional string hosp_code = 1;
	optional string suname2 = 2;
	optional string sex = 3;
	optional string birth = 4;
	optional string tel = 5;
    optional string page_number = 6;
    optional string offset = 7;
}
message OUT0101Q01GrdPatientListResponse{
	repeated OUT0101Q01GrdPatientListInfo item = 1;
}
message OUT0101Q01CboSexRequest{
}
message OUT0101Q01CboSexResponse{
	repeated ComboListItemInfo item = 1;
}
//------[END] OUT0101Q01------
//[START] OUT0106U00

message OUT0106U00PatientListRequest {
    required string patient_info = 1;
    optional string naewon_date = 2;
}

message OUT0106U00PatientListResponse {
    repeated OUT0106U00PatientItemInfo item_info = 1;
}

message OUT0106U00PatientInfoNameRequest {
    required string patient_info = 1;
    optional string naewon_date = 2;
}

message OUT0106U00PatientInfoNameResponse {
    optional string patient_info_name = 1;
}

message OUT0106U00GridListRequest {
    required string bunho = 1;
    optional string naewon_date = 2;
}

message OUT0106U00GridListResponse {
    repeated OUT0106U00GridItemInfo grid_item_info = 1;
    repeated OUT0106U00PatientCommentItemInfo patient_comment_item_info = 2;
}

message OUT0106U00SaveCommentsRequest {
    repeated OUT0106U00GridItemInfo grid_item_info = 1;
    repeated OUT0106U00PatientCommentItemInfo patient_comment_item_info = 2;
    required string user_id = 3;
}
//[END] OUT0106U00


//[START] OUT0101U04
message OUT0101U04SaveLayoutRequest {
        optional string user_id = 1;
        repeated NuroManagePatientInfo list_info = 2;
}

message OUT0101U04TxtZipCode2DataValidatingRequest {
        optional string zip_code_1 = 1;
        optional string zip_code_2 = 2;
}
message OUT0101U04TxtZipCode2DataValidatingResponse {
        optional string ret_val = 1;
}

//[END] OUT0101U04

//-----[START] ORDERTRANS -----
message ORDERTRANSGrdHokenRequest
{
	optional string acting_date            = 1;
	optional string gubun                  = 2;
	optional string hosp_code              = 3;
	optional string bunho                  = 4;
	optional string send_yn                = 5;
}
message ORDERTRANSGrdHokenResponse
{
	repeated ORDERTRANSGrdHokenInfo grd_hoken_item = 1;
}
message ORDERTRANSGrdINP2004Request
{
	optional string hosp_code           = 1;
	optional string bunho               = 2;
	optional string send_yn             = 3;
	optional string acting_date         = 4;
	optional string sunab_date          = 5;
	optional string fkinp1001           = 6;
}
message ORDERTRANSGrdINP2004Response
{
	repeated ORDERTRANSGrdINP2004Info grd_inp2004_item = 1;
}
message ORDERTRANSGrdSiksaRequest
{
	optional string send_yn              = 1;
	optional string hosp_code            = 2;
	optional string bunho                = 3;
	optional string pk1001               = 4;
	optional string acting_date          = 5;
}
message ORDERTRANSGrdSiksaResponse
{
	repeated ORDERTRANSGrdSiksaInfo grd_siksa_item = 1;
}
message ORDERTRANSGrdOutSangRequest
{
	optional string hosp_code                 = 1;
	optional string bunho                     = 2;
	optional string io_gubun                  = 3;
	optional string gijun_date                = 4;
}
message ORDERTRANSGrdOutSangResponse
{
	repeated ORDERTRANSGrdOutSangInfo grd_out_sang_item = 1;
}
message ORDERTRANSGrdWoichulRequest
{
	optional string send_yn              = 1;
	optional string hosp_code            = 2;
	optional string bunho                = 3;
	optional string pk1001               = 4;
	optional string order_date           = 5;
}
message ORDERTRANSGrdWoichulResponse
{
	repeated ORDERTRANSGrdWoichulInfo grd_woi_chul_item = 1;
}
message ORDERTRANSLayOut0101Request
{
	optional string hosp_code        = 1;
	optional string bunho            = 2;
}
message ORDERTRANSLayOut0101Response
{
	repeated ORDERTRANSLayOut0101Info lay_out0101_item = 1;
}
message ORDERTRANSGrdCommentsRequest
{
	optional string hosp_code        = 1;
	optional string bunho            = 2;
}
message ORDERTRANSGrdCommentsResponse
{
	repeated ORDERTRANSGrdCommentsInfo grd_comments_item = 1;
}
message ORDERTRANSFwkFindRequest
{
	optional string acting_date      = 1;
	optional string hosp_code        = 2;
	optional string bunho                 = 3;
}
message ORDERTRANSLayCommonRequest
{
	optional string hosp_code        = 1;
	optional string gubun            = 2;
	optional string acting_date      = 3;
	optional string bunho            = 4;
}
message ORDERTRANSLayCommonResponse
{
	repeated ORDERTRANSLayCommonInfo lay_common_item = 1;
}
message ORDERTRANSPrIfsSiksaInputTestRequest
{
	optional string hosp_code        = 1;
	optional string bunho            = 2;
	optional string from_date        = 3;
	optional string from_sik         = 4;
	optional string to_date          = 5;
	optional string to_sik           = 6;
}
message ORDERTRANSSangSendAllRequest
{
	optional string hosp_code = 1;
}
message ORDERTRANSSangSendAllResponse
{
	repeated ORDERTRANSSangSendAllInfo sang_info_item = 1;
}
message ORDERTRANSGrdListNonSendYnRequest
{
	optional string hosp_code             = 1;
	optional string acting_date           = 2;
	optional string bunho                 = 3;
}
message ORDERTRANSGrdListNonSendYnResponse
{
	repeated ORDERTRANSGrdListNonSendYnInfo grd_list_non_send_item = 1;
}
message ORDERTRANSGrdListSendYnRequest
{
	optional string hosp_code             = 1;
	optional string bunho                 = 2;
}
message ORDERTRANSGrdListSendYnResponse
{
	repeated ORDERTRANSGrdListSendYnInfo grd_list_send_item = 1;
}
message ORDERTRANSGrdEditRequest
{
	optional string io_gubun                     = 1;
	optional string send_yn                      = 2;
	optional string hosp_code                    = 3;
	optional string acting_date                  = 4;
	optional string pk1001                       = 5;
	optional string bunho                        = 6;
	optional string gwa                          = 7;
	optional string doctor                       = 8;
	optional string order_date                   = 9;
}
message ORDERTRANSGrdEditResponse
{
	repeated ORDERTRANSGrdEditInfo grd_edit_item = 1;
}
message ORDERTRANSGrdEditIGubunRequest
{
	optional string pk1001 = 1;
	optional string send_yn = 2;
	optional string hosp_code = 3;
	optional string bunho = 4;
	optional string order_date = 5;
	optional string gwa = 6;
	optional string doctor = 7;
}
message ORDERTRANSGrdEditIGubunResponse
{
	repeated ORDERTRANSGrdEditIGubunInfo grd_edit_igubun_item = 1;
}
message ORDERTRANSGrdListRequest
{
	optional string io_gubun                     = 1;
	optional string send_yn                      = 2;
	optional string hosp_code                    = 3;
	optional string acting_date                  = 4;
	optional string pk1001                       = 5;
	optional string bunho                        = 6;
	optional string gwa                          = 7;
	optional string doctor                       = 8;
	optional string order_date                   = 9;
	optional string str                          = 10;
	optional string m_send_yn                    = 11;
}
message ORDERTRANSGrdListResponse
{
	repeated ORDERTRANSGrdListInfo grd_item  = 1;
}
message ORDERTRANSExecPrOutCheckOrderEndRequest
{
	optional string hosp_code        = 1;
	optional string acting_date      = 2;
	optional string doctor           = 3;
	optional string bunho            = 4;
}
message ORDERTRANSGrdGongbiListRequest
{
	optional string io_gubun              = 1;
	optional string send_yn               = 2;
	optional string hosp_code             = 3;
	optional string bunho                 = 4;
	optional string out1001               = 5;
	optional string pkinp1002             = 6;
	optional string pkout                 = 7;
}
message ORDERTRANSGrdGongbiListResponse
{
	repeated ORDERTRANSGrdGongbiListInfo grd_gongbi_item = 1;
}
message ORDERTRANProcessRequiRequest{
	repeated ORDERTRANProcessRequiInfo input_list =1;
}

message ORDERTRANSMisaGetHangmogRequest
{
	optional string bunho = 1;
	optional string pkout_1001 = 2;
}

message ORDERTRANSMisaGetHangmogResponse
{
	repeated ORDERTRANSMisaGetHangmogInfo lst = 1;
}

message ORDERTRANSMisaTranferRequest
{
	optional string bunho = 1;
	optional string pkout_1001 = 2;
	repeated ORDERTRANSMisaTranferInfo lst = 3;
}

//-----[END] ORDERTRANS -------

message OUT1001R01LayOut0101Request{
	optional string bunho = 1;
}

message OUT1001R01LayOut0101Response{
	repeated OUT1001R01LayOut0101Info layout_list = 1;
}

message OUT1001R01GrdListRequest{
	optional string bunho = 1;
	optional string naewon_date = 2;
}

message OUT1001R01GrdListResponse{
	repeated OUT1001R01GrdListInfo grid_list = 1;
}

message OUT1001P03PaBeforeBoxRequest{
	optional string bunho = 1;
}

message OUT1001P03PaBeforeBoxResponse{
	optional string bunho_type = 1;
}

message OUT1001P03GrdBeforeJubsuRequest{
	optional string io_gubun = 1;
	optional string bunho = 2;
}

message OUT1001P03GrdBeforeJubsuResponse{
	repeated OUT1001P03GrdBeforeJubsuInfo grd_before_jubsu_info = 1;
}

message OUT1001P03GrdAfterJubsuRequest{
	optional string io_gubun = 1;
	optional string bunho = 2;
}

message OUT1001P03GrdAfterJubsuResponse{
	repeated OUT1001P03GrdAfterJubsuInfo grd_after_jubsu_info = 1;
}

message OUT1001P03GrdAfterOrderRequest{
	optional string io_gubun = 1;
	optional string bunho = 2;
	optional string naewon_key = 3;
}

message OUT1001P03GrdAfterOrderResponse{
	repeated OUT1001P03GrdOrderInfo grd_order_info = 1;
}

message OUT1001P03GrdBeforeOrderRequest{
	optional string io_gubun = 1;
	optional string bunho = 2;
	optional string naewon_key = 3;
}

message OUT1001P03GrdBeforeOrderResponse{
	repeated OUT1001P03GrdOrderInfo grd_order_info = 1;
}

message OUT1001P03ProcessRequest{
	optional string from_bunho = 1;
	optional string to_bunho = 2;
	optional string user_id = 3;
	repeated OUT1001P03PkKeyInfo pk_key_info = 4;
}

//--[START]NURO.OUT1001P03-------
message OUT1001P03BunhoListRequest{
        optional string hosp_code = 1;

}

message OUT1001P03BunhoListResponse{
        repeated OUT1001P03BunhoListItemInfo Bunho_list = 1;
}
//--[END]NURO.OUT1001P03-------

//--[START]PHR-------
message OUT0101PhrInsertRequest{
	optional string hosp_code     = 1;
	optional string user_name     = 2;
	optional string sys_id        = 3;
}
//--[END]PHR-------

//--[START] NURO.ORDERTRANSangTrans-------
message ORDERTRANSangTransRequest {
        optional string hosp_code = 1;
        optional string fkout1003 = 2;
}
message ORDERTRANSangTransResponse {
        repeated ORDERTRANSangTransInfo sangtrans_info = 1;
}
//--[END] NURO.ORDERTRANSangTrans-------

//--[START] NURO.ORDERTRANOrderTrans-------
message ORDERTRANOrderTransRequest{
        optional string hosp_code = 1;
        optional string fkout1003 = 2;
        optional string trans_gubun = 3;
}
message ORDERTRANOrderTransResponse{
        repeated ORDERTRANOrderTransInfo sangtrans_info = 1;
}
//--[END] NURO.ORDERTRANOrderTrans-------

// NURO ORDERTRANOcs1003 Update Info
message ORDERTRANOcs1003UpdateRequest{
	repeated ORDERTRANOcs1003UpdateInfo save_layout_item = 1;
}

message ORDERTRANOcs1003UpdateResponse{
        optional string pkout1003 = 1;
}
// NURO ORDERTRANPR Make IFS1004
message ORDERTRANPRMakeIFS1004Request{
	repeated ORDERTRANPRMakeIFS1004Info input_info = 1;
}

message ORDERTRANPRMakeIFS1004Response{
        optional string ret_val = 1;
}
message NUROAccountForcedEndRequest
{
       optional string hosp_code                         = 1;
       optional string bunho                             = 2;
       repeated NUROAccountForcedEndInfo list_info            = 3;
       optional string acting_date                       = 4;
       optional string gubun                             = 5;
       optional string gwa                               = 6;
       optional string doctor                            = 7;
       optional string chojae                                    = 8;
}
message NUROAccountForcedEndResponse
{
       optional bool result                             = 1;
       optional string errorCode                        = 2;
       optional string strOutput                        = 3;
}

//--[START] NURO.ORDERTRANInsertOcsTempInfo -------
message ORDERTRANInsertOcsTempRequest{
        repeated ORDERTRANInsertOcsTempInfo input_info = 1;
}
message ORDERTRANInsertOcsTempResponse{
        optional string output_list0 = 1;
        optional string output_list1 = 2;
}
//--[END] NURO.ORDERTRANInsertOcsTempInfo -------

message NuroORDERTRANSUpdateOCS1003Request
{
	optional string bunho                                   = 1;
	optional string pkout1001                               = 2;
	repeated NuroORDERTRANSUpdateOCS1003Info ocs_upd_item   = 3;
}

//--[START] MISA
message OrderTransMisaRequest
{
	optional string bunho = 1;
    optional string hops_code = 2;
    optional string pkout1001 = 3;
}

message OrderTransMisaResponse
{
	optional string suname = 1;
	optional string zip_code1 = 2;
	optional string zip_code2 = 3;
	optional string address1 = 4;
	optional string hops_code_ext = 5;
	optional string johap = 6;
	optional string pkout1001_ext = 7;
	optional string refno = 8;
	optional string recept_ref_id = 9;
}
//--[END] MISA

// -- [START] RES1001R00
message RES1001R00PrintBookingRequest{
	optional string hosp_code      = 1;
	optional string hosp_code_link = 2;
	optional string bunho          = 3;
	optional string gwa            = 4;
	optional string doctor         = 5;
	optional string naewon_date    = 6;
	optional string jubsu_time     = 7;
}
message RES1001R00PrintBookingResponse{
	optional string yoyang_name_link  = 1;
	optional string suname            = 2;
	optional string birth             = 3;
	optional string age               = 4;
	optional string yoyang_name       = 5;
	optional string bunho             = 6;
	optional string bunho_link        = 7;
	optional string gwa_name          = 8;
	optional string doctor_name       = 9;
	optional string naewon_date       = 10;
	optional string jubsu_time        = 11;
	optional string address           = 12;
	optional string tel               = 13;
}
// -- [END] RES1001R00

// -- [START] NUR2016U02
message NUR2016U02GrdListRequest
{
	optional string bunho = 1;
}
message NUR2016U02GrdListResponse
{
	repeated NUR2016U02GrdListInfo grd_item = 1;
}
message NUR2016U02DeleteLinkPatientRequest
{
	 optional string bunho                                  = 1;
	 repeated NUR2016U02DeleteLinkPatientInfo link_pat_item = 2;
}
// -- [END] NUR2016U02
// -- [END] RES1001R00

//--[START] RES1001U01
message RES1001U01BookingClinicReferRequest
{
        optional string doctor = 1;
        optional string gwa = 2;
        optional string naewon_date = 3;
}

message RES1001U01BookingClinicReferResponse
{
        repeated RES1001U01BookingClinicReferInfo lst = 1;
}
//--[END] RES1001U01//--[END] MISA
//nur2016
message NUR2016Q00GrdHospListRequest
{
    optional string hosp_code       = 1;
    optional string yoyang_name     = 2;
    optional string address         = 3;
    optional string page_number     = 4;
    optional string offset          = 5;
}
message NUR2016Q00GrdHospListResponse
{
    repeated NUR2016Q00GrdHospListInfo hosp_list_item = 1;
}

message NUR2016Q00GrdPatientListRequest
{
    optional string bunho            = 1;
    optional string suname           = 2;
    optional string suname2          = 3;
    optional string address          = 4;
    optional string birth            = 5;
    optional string hosp_code_link   = 6;
    optional string page_number      = 7;
    optional string offset           = 8;
}

message NUR2016Q00GrdPatientListResponse
{
    repeated NUR2016Q00GrdPatientListInfo grd_pat_list_item = 1;
}
message NUR2016Q00LinkPatientRequest
{
    optional NUR2016Q00LinkPatientInfo link_patient_item = 1;
}
message NUR2016Q00CreateTempIDRequest
{
    optional  NUR2016Q00CreateTempIDInfo temp_item = 1;
	required bool orca_patient = 2;
}
//end nur2016


// [START] NURO OUT0101U02 PRINT
message OUT0101U02GetHospitalInfoRequest
{
	  optional string hosp_code = 1;
      optional string bunho = 2;
}

message OUT0101U02GetHospitalInfoResponse
{
        repeated OUT0101U02HospitalItemInfo hosp_list = 1;
}
message NUR2015U01ReservationPatientRequest
{
    optional string bunho  = 1;
}
message NUR2015U01GetDataFromNaewonRequest{
    optional string naewon_key  = 1;
}
message NUR2015U01GetDataFromNaewonResponse{
    optional string exam_date  = 1;
    optional string department_code  = 2;
}
message NUR2015U01ReservationPatientResponse{
    optional string reservation_id  = 1;
}
message NUR2015U01EmrRecordUpdateRequest {
    optional string bunho      = 1;
    optional string content    = 2;
    optional string metadata   = 3;
    optional string sys_id     = 4;
    optional string record_log = 5;
}
message NUR2015U01GrdOrderRequest {
    optional string bunho = 1;
    optional string hosp_code = 2;
}
message NUR2015U01GrdOrderResponse {
    repeated NUR2015U01GrdOrderInfo grd_order_list = 1;
}
// [END] NURO OUT0101U02 PRINT// [END] NURO OUT0101U02 PRINT

message PatientEvent{
    optional int64 id = 1;
    optional int64 timestamp = 2;
    required string patient_code = 3;
    required string hosp_code = 4;
    optional NuroOUT0101U02GridPatientInfo patient_profile = 5;
    repeated NuroOUT0101U02GridBoheomInfo  public_insurance = 6;
    repeated NuroOUT0101U02GridGongbiListInfo private_insurance = 7;
    optional UpdateJubsuDataInfo accept_info = 8;
	repeated SyncDisease disease_info = 9;
	repeated SyncPrescription prescription_info = 10;
	repeated SyncDrug drug_info = 11;
	repeated SyncHeight 				patient_height_info = 12;
	repeated SyncWeight 				patient_weight_info = 13;
	repeated SyncTemperature 			patient_temperature_info = 14;
	repeated SyncHeartRate 				patient_heart_rate_info = 15;
	repeated SyncRespirationRate 		patient_respiration_rate_info = 16;
	repeated SyncBloodPressure 			patient_blood_pressure_info = 17;
	optional bool deleted_all_prescription 							= 18;
	optional bool deleted_all_drug 									= 19;
}

message HospitalEvent{
    required string hosp_code = 1;
    repeated Department depts = 2;
    optional Doctor doctor = 3;
    optional DoctorSchedule schedules = 4;
    optional MbsConfig mbs_config = 5;
}

//This request will be processed from client
message CreatePatientRequest {
    required int64 id = 1;
    required string hosp_code = 2;
    optional NuroOUT0101U02GridPatientInfo patient_profile = 3;
    repeated NuroOUT0101U02GridBoheomInfo  public_insurance = 4;
    repeated NuroOUT0101U02GridGongbiListInfo private_insurance = 5;
    optional string mod_key = 6;
}

message CreatePatientResponse {
    required int64 id = 1;
    required string hosp_code = 2;
    required string new_patient_code = 3;
    required Result result = 4;
    optional string message_code = 5;
    enum Result { SUCCESS = 0; SERVICE_TIMEOUT = 1; SERVICE_UNAVAILABLE = 2; INTERNAL_ERROR = 99; }
}

message SaveExaminationRequest {
    required int64 id = 1;
    required string hosp_code = 2;
    required UpdateJubsuDataInfo exam_info = 3;
}

message SaveExaminationResponse {
    required int64 id 					= 1;
    required string hosp_code 			= 2;
    optional string message_code 		= 3;
    optional string message_detail 		= 4;
    optional string ref_id 				= 5;
    required Result result 				= 6;
    enum Result { SUCCESS = 0; FAIL = 1; INTERNAL_ERROR = 99; }
}

message BookingEvent{
    required string hosp_code = 1;
    required string patient_code = 2;
    required string patient_name = 3;
    optional BookingExamInfo bookingExamInfo = 4;
}


//[START] KCCK API
/*
message KCCKAPIGetScheduleDocTorRequest{
	optional string hosp_code    = 1;
	optional string department   = 2;
	optional string doctor_code  = 3;
	optional string doctor_grade = 4;
	optional string agv_time     = 5;
	optional string start_date   = 6;
	optional string end_date     = 7;
	optional string locale       = 8;
}
message KCCKAPIGetScheduleDocTorResponse{
    repeated KCCKGetScheduleDoctorInfo content = 1;
}
*/
message ScheduleDocTorRequest{
    optional string hosp_code    = 1;
    optional string doctor_code  = 2;
    optional string department = 3;
    optional string start_date   = 4;
    optional string end_date   = 5;
}
message ScheduleDocTorResponse{
    repeated KcckApiGetDoctorInfo listDoctor = 1;
}



message KcckApiGetDoctorsRequest{
	optional string hosp_code    = 1;
	optional string department   = 2;
	optional string locale       = 3;
}
message KcckApiGetDoctorsResponse{
 	repeated KcckApiGetDoctorInfo listDoctor = 1;
}

message KcckApiSearchDoctorsRequest{
	optional string hosp_code    = 1;
	optional string department   = 2;
	optional string start_date   = 3;
	optional string end_date   	 = 4;
	optional string locale       = 5;
	optional string reservation_date = 6;
    optional string reservation_time = 7;
    optional string page_size = 8;
    optional string page_index = 9;
}
message KcckApiSearchDoctorsResponse{
 	repeated KcckApiGetDoctorInfo listDoctor = 1;
	required string total_records = 2;
}
//[END] KCCK API

//[START] KCCK MSS API KC08 
message PatientInfoRequest {
	optional string hosp_code 					= 1;
    optional string disease_name 				= 2;
    optional string status_of_disease			= 3;
    optional string from_lastest_go_hospital	= 4;
    optional string to_lastest_go_hospital		= 5;
    optional int32 from_patient_age				= 6;
    optional int32 to_patient_age				= 7;
    optional string patient_sex					= 8;
    optional string order_field					= 9;
    optional string order_value	 				= 10;
    optional int32 page_size 					= 11;
    optional int32 page_index 					= 12;
    optional string patient_contact				= 13;
}

message PatientInfoResponse{
	repeated PatientDetailInfo patient_detail_info 	= 1;
	optional int32 page_size 						= 2;
	optional int32 page_index 						= 3;
	optional int64 total_records 					= 4;
}

//[END] KCCK MSS API KC08

//Join request OcsLoadInputControl and OcsLoadVisibleControl
message OcsLoadInputAndVisibleControlRequest{
        optional string input_control            = 1;
        optional string input_tab                = 2;
}
message OcsLoadInputAndVisibleControlResponse{
        repeated OcsLoadInputControlListItemInfo control_list                              = 1;
        repeated OcsLoadVisibleControlListItemInfo visible_control_list                    = 2;
}

message NUR2016U02NuroPatientListRequest {
	optional string hospital_code      = 1;
	optional string coming_date        = 2;
	optional string department_code    = 3;
	optional string doctor_code        = 4;
	optional string patient_code       = 5;
	optional string reception_type     = 6;
	optional string exam_status        = 7;
	optional string coming_status      = 8;
	optional string current_system_id  = 9;
}
message NUR2016U02NuroPatientListResponse {
	repeated NUR2016U02NuroPatientListItemInfo patient_list_item = 1;

}

// [START] NUR2016U02
message NUR2016U02TranferRequest {
	repeated NUR2016U02TranferInfo list_item = 1;
}
message NUR2016U02TranferResponse {
	optional ORCATransferOrdersHeaderInfo header_item                           = 1;
	repeated ORCATransferOrdersHealthInsuranceInfo health_ins_item              = 2;
	repeated ORCATransferOrdersDiseaseInfo disease_item                         = 3;
	repeated ORCATransferOrdersClaimExaminationFeeInfo claim_exam_item          = 4;
	repeated ORCATransferOrdersClaimOrdersFeeInfo claim_orders_item             = 5;
	repeated ORCATransferOrdersErrMsgInfo err_msg_item                          = 6;
	repeated NUR2016U02TranferInfo     listinfo_item                            = 7;
}
// [END] NUR2016U02

//[START] NUR2016U03
message NUR2016U03TranferRequest {
    repeated NUR2016U02TranferInfo list_item = 1;
}
//[END] NUR2016U03

// [BEGIN] KCCK API BOOKING PATIENT
message KcckApiBookingRequest
{
		optional string hosp_code				= 1;
		optional string department_code			= 2;
		optional string doctor_code				= 3;
		optional string reservation_date		= 4;
		optional string reservation_time		= 5;
		optional string patient_code			= 6;
		optional string patient_name_kanji 		= 7;
		optional string patient_name_kana		= 8;
		optional string patient_tel				= 9;
		optional string patient_email			= 10;
		optional string patient_sex				= 11;
		optional string patient_birthday		= 12;
		optional string locale					= 13;
		optional string patient_type			= 14;
		optional string type					= 15;
		optional string user_id					= 16;
		optional string parent_code				= 17;
		optional string child_code_list			= 18;
		optional string hangmog_code			= 19;
		optional string hangmog_name			= 20;
		optional string survey_yn				= 21;
}

message KcckApiBookingResponse{
    required bool result		 		= 1;
    optional string doctor_name			= 2;
    optional string department_name		= 3;
    optional string reservation_code	= 4;
	optional string new_patient_code	= 5;
	optional string err_code 			= 6;
	optional string doctor_code 		= 7;
	optional string mis_survey_link		= 8;
}

// [BEGIN] KCCK API CHANGE BOOKING PATIENT
message KcckApiChangeBookingRequest
{
	optional string hosp_code				= 1;
	optional string department_code			= 2;
	optional string doctor_code				= 3;
	optional string patient_code			= 4;
	optional string reservation_code		= 5;
	optional string reservation_date		= 6;
	optional string reservation_time		= 7;
	optional string locale					= 8;
}

message KcckApiChangeBookingResponse{
    optional string doctor_code 		= 1;
    optional string doctor_name			= 2;
	optional string department_code		= 3;
    optional string department_name		= 4;
	required bool result		 		= 5;
	optional string err_code 			= 6;
}

// [BEGIN] KCCK API CANCEL BOOKING PATIENT
message KcckApiCancelBookingRequest
{
	optional string hosp_code				= 1;
	optional string patient_code			= 2;
	optional string reservation_code		= 3;
	optional string locale					= 4;
}

message KcckApiCancelBookingResponse{
	required bool result		 		= 1;
	optional string err_code 			= 2;
}
// [BEGIN] KCCK API BOOKING PATIENT

message OUT0101U02ChangePWDRequest
{
    optional string bunho = 1;
    optional string pwd   = 2;
}

message NUR2016CheckExitsEMRLinkRequest
{     
		optional string hosp_code       = 1;
        optional string bunho 			= 2;
		optional string hosp_code_link  = 3;
		optional string bunho_link      = 4;   
}

message NUR2016CheckExitsEMRLinkResponse
{
		optional string result             					= 1;
        repeated LinkEMRPatientInfo link_emr_patient_item   = 2;
}

message NUR2016DeleteEMRLinkRequest
{
		optional string patient_id         = 1;
}

message NUR2016PublishEMRLinkRequest
{
		optional string patient_id         = 1;
		optional bool ischeck 			   = 2;
}

message SearchBookingScheduleRequest {
    optional string hosp_code    = 1;
    optional string department   = 2;
    optional string start_date   = 3;
    optional string end_date     = 4;
}

message SearchBookingScheduleResponse {
    repeated BookingSchedule schedules 			= 1;
	required bool isDifferentTimeFrame 			= 2;
	optional string avg_time					= 3;
}

message BookingExaminationRequest {
    optional string hosp_code				= 1;
    optional string department_code			= 2;
    optional string doctor_code				= 3;
    optional string reservation_date		= 4;
    optional string reservation_time		= 5;
    optional string patient_code			= 6;
    optional string patient_name_kanji 		= 7;
    optional string patient_name_kana		= 8;
    optional string patient_tel				= 9;
    optional string patient_email			= 10;
    optional string patient_sex				= 11;
    optional string patient_birthday		= 12;
    optional string locale					= 13;
	optional string patient_type			= 14;
	optional string type					= 15;
	optional string user_id					= 16;
	optional string reservation_code		= 17;
	optional Action action 					= 18;
    enum Action { BOOKING = 0; CHANGE_BOOKING = 1; CANCEL_BOOKING = 2; }
}

message BookingExaminationResponse {
    required bool result = 1;
    optional string doctor_name = 2;
    optional string department_name	= 3;
    optional string reservation_code = 4;
    optional string new_patient_code = 5;
    optional string err_code = 6;
    optional string doctor_code = 7;
    optional string reservation_time = 8;
}
message RES1001U00CheckDuplicateRequest
{
	repeated RES1001U00SaveLayoutItemInfo input_info = 1;
	optional string hosp_code_link                   = 2;
}
message RES1001U00CheckDuplicateResponse
{
	optional string duplicate_result = 1;
	optional string gwa_name         = 2;
	optional string doctor_name      = 3;
}

// [START] Export patient
message OUT0101U02PatientExportRequest
{
	optional string start_date = 1;
	optional string end_date   = 2;
	optional OUT0101U02PatientExportInfo header_item = 3;
}
message OUT0101U02PatientExportResponse
{
	optional bytes data = 1;
}

message OUT0101U02ImportPatientRequest
{
	repeated OUT0101U02ImportPatientInfo patients 	= 1;
	optional string user_id 						= 2;
	required bool ignore_duplicate 					= 3;
}
// [END] Export patient

message ORDERTRANSAPITransferOrdersRequest
{
        optional string bunho                               = 1;
        optional string pkout1001                           = 2;
        optional string perform_date                        = 3;
        repeated ORDERTRANSAPIHangmogInfo hangmog_item      = 4;
        optional TransferType action						= 5;
}

message ORDERTRANSAPITransferOrdersResponse
{
        optional ORDERTRANSAPIMsgInfo msg_item					= 1;
        repeated ORDERTRANSAPIHangmogInfo hangmog_err_item      = 2;
}

message OrderTranferRequest {
	required int64 id 										= 1;
    required string hosp_code 								= 2;
	optional string in_out									= 3;
	optional string patient_id								= 4;
	optional string perform_date							= 5;
    optional string perform_time							= 6;
    optional string medical_uid								= 7;
	optional DiagnosisInformation diagnosis_information		= 8; 
	required Action action									= 9;
	enum Action { SEND_ORDER_DISEASE = 1; SEND_DISEASE_ONLY = 2; RETRANSFER_ORDER = 3; CANCEL_ORDER = 4; }
}

message OrderTranferResponse {
	required int64 id 						= 1;
    required string hosp_code 				= 2;
	required bool result 					= 3;
	optional string api_result				= 4;
	optional string api_result_message 		= 5;
	optional string medical_uid				= 6;
	optional string medical_result			= 7;
	optional string medical_result_message	= 8;
	optional string disease_result			= 9;
	optional string disease_result_message	= 10;
}
message RES1001U00SaveLayoutRequest
{
    optional string user_id                                         = 1;
    repeated RES1001U00SaveLayoutItemInfo layout_item 				= 2;
    optional string hosp_code_link                                  = 3;                        
    optional string booking_type                                    = 4;
    optional string bunho_link                                      = 5;
}

//[START] Send payment to patient
message BIL0102U00GetHospInfoRequest{
	optional string hosp_code = 1;
	optional string start_date = 2;
}
message BIL0102U00GetHospInfoResponse{
	optional string yoyang_name = 1;
	optional string address = 2;
	optional string tel = 3;
	optional string email = 4;
	optional string locale = 5;
}

message BIL0102U00GetPatientEmailRequest{
	optional string hosp_code = 1;
	optional string bunho = 2;
}
message BIL0102U00GetPatientEmailResponse{
	optional string email = 1;
}

message BIL0102U00GetMailTemplateRequest{
	optional string locale = 1;
	optional string template_code = 2;
	optional string yoyang_name = 3;
	optional string address_hosp = 4;
	optional string patient_name = 5;
	optional string tel_hosp = 6;
	optional string email_hosp = 7;
	optional string mail_patient = 8;
	optional string mail_template_it = 9;
	optional string subject = 10;
	optional string content = 11;
	optional string naewon_date = 12;
	optional string jubsu_time = 13;
	optional string total = 14;
	optional string total_discount = 15;
	optional string total_paid = 16;
	optional string total_paying = 17;
}


message BIL0102U00GetMailTemplateResponse{
	optional string mail_template_id = 1;
	optional string subject = 2;
	optional string content = 3;
}

message BIL0102U00GetExaminationInfoRequest{
	optional string hosp_code = 1;
	optional string pkout1001 = 2;
}
message BIL0102U00GetExaminationInfoResponse{
	optional string naewon_date = 1;
	optional string jubsu_time = 2;
}

message BIL0102U00SendEmailPatientRequest{
	optional string yoyang_name = 1;
	optional string address_hosp = 2;
	optional string patient_name = 3;
	optional string tel_hosp = 4;
	optional string email_hosp = 5;
	optional string locale = 6;
	optional string mail_patient = 7;
	optional string mail_template_it = 8;
	optional string subject = 9;
	optional string content = 10;
	optional string naewon_date = 11;
	optional string jubsu_time = 12;
	optional string total = 13;
	optional string total_discount = 14;
	optional string total_paid = 15;
	optional string total_paying = 16;
}
//[END] Send payment to patient

message GetMisSurveyLinkRequest
{
	required int64 id 							= 1;
	optional string hosp_code 					= 2;
	optional string patient_code 				= 3;
	optional string department_code 			= 4;
	optional string reservation_code 			= 5;
	optional BookingExamInfo booking_exam_info 	= 6;
}

message GetMisSurveyLinkResponse
{
	required int64 id 					= 1;
	optional string survey_link 		= 2;
	optional string result 				= 3;
}