<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="TopBackground" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\TopBackground.GIF;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="lblSelectOrderText1" xml:space="preserve">
    <value>Xóa chọn toàn bộ</value>
    <comment> 全体選択取消</comment>
  </data>
  <data name="lblSelectOrderText2" xml:space="preserve">
    <value>Chọn toàn bộ</value>
    <comment> 全体選択</comment>
  </data>
  <data name="mbxCap2" xml:space="preserve">
    <value>TT yêu cầu</value>
    <comment>オーダ情報</comment>
  </data>
  <data name="mbxMsg_JP" xml:space="preserve">
    <value>Lưu thất bại. Hãy nhập các danh mục bắt buộc</value>
    <comment>保存が失敗しました。必須項目を入力してください。</comment>
  </data>
  <data name="mbxMsg_Ko" xml:space="preserve">
    <value>Lưu thất bại. </value>
    <comment>저장이 실패하였습니다.</comment>
  </data>
  <data name="XMessageBox_caption1" xml:space="preserve">
    <value>Xác nhận</value>
    <comment>確認</comment>
  </data>
  <data name="XMessageBox_caption2" xml:space="preserve">
    <value>Hoàn thành đăng ký</value>
    <comment>登録完了</comment>
  </data>
  <data name="XMessageBox_Caption3" xml:space="preserve">
    <value>XN mã trùng lặp</value>
    <comment>重複コード確認</comment>
  </data>
  <data name="XMessageBox_Ko" xml:space="preserve">
    <value>Dữ liệu đã nhập không đúng. Hãy xác nhận</value>
    <comment>입력하신 데이타가 정확하지 않습니다. 확인바랍니다.</comment>
  </data>
  <data name="XMessageBox1" xml:space="preserve">
    <value>Dữ liệu về hướng dẫn dử dụng thuốc không đúng.</value>
    <comment>服用方法の回数のデータが正しくありません。</comment>
  </data>
  <data name="XMessageBox2" xml:space="preserve">
    <value>Thuốc bệnh nhân mang đến đã được đăng ký làm đơn thuốc. Không thể xóa</value>
    <comment>該当する持参薬は既に処方として登録されました。削除できません。</comment>
  </data>
  <data name="XMessageBox3" xml:space="preserve">
    <value>Thuốc bệnh nhân mang đến đã được đăng ký.</value>
    <comment>持参薬が登録されました。</comment>
  </data>
  <data name="XMessageBox5" xml:space="preserve">
    <value>Mã danh này [</value>
    <comment>同じ項目コード [</comment>
  </data>
  <data name="XMessageBox6" xml:space="preserve">
    <value>] đã được đăng ký.</value>
    <comment>] が登録されています。</comment>
  </data>
  <data name="XMessageBox7" xml:space="preserve">
    <value>Bệnh nhân đã chọn chưa được nhập viện. Hãy xác nhận lại</value>
    <comment>選択した患者は入院されていません。もう一度確認して下さい。</comment>
  </data>
  <data name="XMessageBox8" xml:space="preserve">
    <value>Không lưu thông tin yêu cầu. Hãy xác nhận.</value>
    <comment>オーダ情報が存在しません。確認してください。</comment>
  </data>
  <data name="XMessageBox9_JP" xml:space="preserve">
    <value>Dữ liệu đã nhập không đúng. Hãy xác nhận</value>
    <comment>入力されたデータが正確ではありません。確認してください。</comment>
  </data>
</root>